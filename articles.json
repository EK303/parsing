[{"key": 1, "kind": "post", "title": "Python's del: Remove References From Scopes and Containers", "description": "In this tutorial, you'll learn how Python's del statement works and how to use it in your code. This statement will allow you to remove references from different scopes, items from lists, keys from dictionaries, and members from classes. This will lead to potentially memory-efficient code.", "url": "/python-del-statement/", "pub_date": null, "image_url": "https://files.realpython.com/media/Pythons-del-Statement-Remove-Items-From-Your-Collections_Watermarked.fd5b504e5f73.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Pythons-del-Statement-Remove-Items-From-Your-Collections_Watermarked.fd5b504e5f73.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Pythons-del-Statement-Remove-Items-From-Your-Collections_Watermarked.fd5b504e5f73.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Pythons-del-Statement-Remove-Items-From-Your-Collections_Watermarked.fd5b504e5f73.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Pythons-del-Statement-Remove-Items-From-Your-Collections_Watermarked.fd5b504e5f73.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["python", "best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 2, "kind": "post", "title": "How to Read Python Input as Integers", "description": "In this tutorial, you'll learn how to use Python to get integer input from the user while handling any errors resulting from non-numeric input. This will involve coding your own reusable function built around input().", "url": "/python-input-integer/", "pub_date": null, "image_url": "https://files.realpython.com/media/How-Can-I-Read-User-Input-as-Numbers_Watermarked.24b9ab049c36.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-Can-I-Read-User-Input-as-Numbers_Watermarked.24b9ab049c36.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-Can-I-Read-User-Input-as-Numbers_Watermarked.24b9ab049c36.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-Can-I-Read-User-Input-as-Numbers_Watermarked.24b9ab049c36.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-Can-I-Read-User-Input-as-Numbers_Watermarked.24b9ab049c36.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 3, "kind": "post", "title": "The Terminal: First Steps and Useful Commands", "description": "The terminal is an essential tool in your journey as a Python developer.\r\nThis tutorial helps you to get started with the terminal, pip, and Git by showcasing interesting commands that you can incorporate into your workflow.", "url": "/terminal-commands/", "pub_date": "2023-02-22T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Showcase-Working-with-the-Terminal_Watermarked.5edec84a1425.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Showcase-Working-with-the-Terminal_Watermarked.5edec84a1425.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Showcase-Working-with-the-Terminal_Watermarked.5edec84a1425.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Showcase-Working-with-the-Terminal_Watermarked.5edec84a1425.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Showcase-Working-with-the-Terminal_Watermarked.5edec84a1425.jpg 1920w", "image_placeholder_color": "#aadfe5", "categories": ["basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 4, "kind": "post", "title": "Build a Wordle Clone With Python and Rich", "description": "In this step-by-step project, you'll build your own Wordle clone with Python. Your game will run in the terminal, and you'll use Rich to ensure your word-guessing app looks good. Learn how to build a command-line application from scratch and then challenge your friends to a wordly competition!", "url": "/python-wordle-clone/", "pub_date": "2023-02-06T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Build-a-Wordle-Clone-in-Python-with-Rich_Watermarked.f0c041c03a5e.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Build-a-Wordle-Clone-in-Python-with-Rich_Watermarked.f0c041c03a5e.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Build-a-Wordle-Clone-in-Python-with-Rich_Watermarked.f0c041c03a5e.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Build-a-Wordle-Clone-in-Python-with-Rich_Watermarked.f0c041c03a5e.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Build-a-Wordle-Clone-in-Python-with-Rich_Watermarked.f0c041c03a5e.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["basics", "projects"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 5, "kind": "post", "title": "The Python Standard REPL: Try Out Code and Ideas Quickly", "description": "In this tutorial, you'll learn how to use the Python standard REPL (Read-Eval-Print Loop) to run your code interactively. This tool will allow you to test new ideas, explore and experiment with new tools and libraries, refactor and debug your code, try out examples, and more.", "url": "/python-repl/", "pub_date": "2023-01-25T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Use-the-Interactive-Python-REPL_Watermarked.dce4d5791b83.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Use-the-Interactive-Python-REPL_Watermarked.dce4d5791b83.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Use-the-Interactive-Python-REPL_Watermarked.dce4d5791b83.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Use-the-Interactive-Python-REPL_Watermarked.dce4d5791b83.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Use-the-Interactive-Python-REPL_Watermarked.dce4d5791b83.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 6, "kind": "post", "title": "Python's \"in\" and \"not in\" Operators: Check for Membership", "description": "In this tutorial, you'll learn how to check if a given value is present or absent in a collection of values using Python's in and not in operators, respectively. This type of check is known as membership test in Python.", "url": "/python-in-operator/", "pub_date": "2022-12-19T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Membership-Operators-in-Python-in-and-not-in_Watermarked.73bc0897fb99.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Membership-Operators-in-Python-in-and-not-in_Watermarked.73bc0897fb99.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Membership-Operators-in-Python-in-and-not-in_Watermarked.73bc0897fb99.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Membership-Operators-in-Python-in-and-not-in_Watermarked.73bc0897fb99.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Membership-Operators-in-Python-in-and-not-in_Watermarked.73bc0897fb99.jpg 1920w", "image_placeholder_color": "#ffc674", "categories": ["python", "best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 7, "kind": "post", "title": "Advent of Code: Solving Your Puzzles With Python", "description": "Advent of Code is an online advent calendar that shares new programming puzzles each day from December 1 to the 25. In this tutorial, you'll learn why solving programming puzzles can be beneficial and how you can get started with Advent of Code using Python.", "url": "/python-advent-of-code/", "pub_date": "2022-11-30T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-Puzzles-with-Advent-of-Code_Watermarked.b6877d55d680.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Puzzles-with-Advent-of-Code_Watermarked.b6877d55d680.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Puzzles-with-Advent-of-Code_Watermarked.b6877d55d680.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Puzzles-with-Advent-of-Code_Watermarked.b6877d55d680.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Puzzles-with-Advent-of-Code_Watermarked.b6877d55d680.jpg 1920w", "image_placeholder_color": "#ffc873", "categories": ["basics", "testing"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 8, "kind": "post", "title": "How to Add Python to PATH", "description": "In this tutorial, you'll learn about how to add Python, or any other program, to your PATH environment variable. You'll be covering the procedure in Windows, macOS, and Linux and find out what PATH is and why it's important.", "url": "/add-python-to-path/", "pub_date": "2022-09-26T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Add-Python-to-PATH_Watermarked.567376e2aed0.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Add-Python-to-PATH_Watermarked.567376e2aed0.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Add-Python-to-PATH_Watermarked.567376e2aed0.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Add-Python-to-PATH_Watermarked.567376e2aed0.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Add-Python-to-PATH_Watermarked.567376e2aed0.jpg 1920w", "image_placeholder_color": "#ffc873", "categories": ["best-practices", "devops", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 9, "kind": "post", "title": "How to Replace a String in Python", "description": "In this tutorial, you'll learn how to remove or replace a string or substring. You'll go from the basic string method .replace() all the way up to a multi-layer regex pattern using the sub() function from Python's re module.", "url": "/replace-string-python/", "pub_date": "2022-09-14T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Replace-Parts-of-a-String-in-Python_Watermarked.a70c83972fa6.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Replace-Parts-of-a-String-in-Python_Watermarked.a70c83972fa6.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Replace-Parts-of-a-String-in-Python_Watermarked.a70c83972fa6.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Replace-Parts-of-a-String-in-Python_Watermarked.a70c83972fa6.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Replace-Parts-of-a-String-in-Python_Watermarked.a70c83972fa6.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 10, "kind": "post", "title": "HTML and CSS for Python Developers", "description": "There's no way around HTML and CSS when you want to build web apps.\r\nEven if you're not aiming to become a web developer, knowing the basics of HTML and CSS will help you understand the Web better.\r\nIn this tutorial, you'll get an introduction to HTML and CSS for Python programmers.", "url": "/html-css-python/", "pub_date": "2022-09-07T14:00:00+00:00", "image_url": "https://files.realpython.com/media/HTML-And-CSS-For-Python-Developers_Watermarked.e2604f40ef5b.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/HTML-And-CSS-For-Python-Developers_Watermarked.e2604f40ef5b.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/HTML-And-CSS-For-Python-Developers_Watermarked.e2604f40ef5b.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/HTML-And-CSS-For-Python-Developers_Watermarked.e2604f40ef5b.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/HTML-And-CSS-For-Python-Developers_Watermarked.e2604f40ef5b.jpg 1920w", "image_placeholder_color": "#a9e3b0", "categories": ["web-dev", "django", "flask", "front-end", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 11, "kind": "post", "title": "How to Check if a Python String Contains a Substring", "description": "In this tutorial, you'll learn the best way to check whether a Python string contains a substring. You'll also learn about idiomatic ways to inspect the substring further, match substrings with conditions using regular expressions, and search for substrings in pandas.", "url": "/python-string-contains-substring/", "pub_date": "2022-08-22T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Check-if-a-String-Contains-Another-String_Watermarked.ad5138507ec7.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Check-if-a-String-Contains-Another-String_Watermarked.ad5138507ec7.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Check-if-a-String-Contains-Another-String_Watermarked.ad5138507ec7.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Check-if-a-String-Contains-Another-String_Watermarked.ad5138507ec7.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Check-if-a-String-Contains-Another-String_Watermarked.ad5138507ec7.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 12, "kind": "post", "title": "How to Find an Absolute Value in Python", "description": "In this tutorial, you'll learn how to calculate the absolute value in Python using the built-in abs() function. You'll also implement the corresponding mathematical formulas from scratch. Finally, you'll change the behavior of abs() in your own classes by hooking into Python's interface.", "url": "/python-absolute-value/", "pub_date": "2022-08-17T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 13, "kind": "post", "title": "Your Python Coding Environment on Windows: Setup Guide", "description": "With this opinionated guide to setting up a basic, fully featured and flexible setup for Python coding and open source contributing when working from Windows, you'll go from a fresh install to ready to contribute, and even check out a PowerShell script to automate much of the process.", "url": "/python-coding-setup-windows/", "pub_date": "2022-07-25T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Windows-Python-Coding-Setup_Watermarked.f867fccba747.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Windows-Python-Coding-Setup_Watermarked.f867fccba747.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Windows-Python-Coding-Setup_Watermarked.f867fccba747.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Windows-Python-Coding-Setup_Watermarked.f867fccba747.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Windows-Python-Coding-Setup_Watermarked.f867fccba747.jpg 1920w", "image_placeholder_color": "#e3c3aa", "categories": ["basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 14, "kind": "post", "title": "NumPy's max() and maximum(): Find Extreme Values in Arrays", "description": "In this introduction to NumPy, you'll learn how to find extreme values using the max() and maximum() functions. This includes finding the maximum element in an array or along a given axis of an array, as well as comparing two arrays to find the larger element in each index position.", "url": "/numpy-max-maximum/", "pub_date": "2022-07-13T14:00:00+00:00", "image_url": "https://files.realpython.com/media/NumPy-max-vs-amax-vs-maximum_Watermarked.47deb5fab721.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/NumPy-max-vs-amax-vs-maximum_Watermarked.47deb5fab721.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/NumPy-max-vs-amax-vs-maximum_Watermarked.47deb5fab721.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/NumPy-max-vs-amax-vs-maximum_Watermarked.47deb5fab721.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/NumPy-max-vs-amax-vs-maximum_Watermarked.47deb5fab721.jpg 1920w", "image_placeholder_color": "#aadfe5", "categories": ["data-science", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 15, "kind": "post", "title": "How Can You Emulate Do-While Loops in Python?", "description": "In this tutorial, you'll learn how to emulate do-while loops in Python. The most common technique to do this is to create an infinite while loop with a conditional statement that controls the loop and jumps out of it using a break statement.", "url": "/python-do-while/", "pub_date": "2022-06-20T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Emulating-a-do-while-Loop-in-Python_Watermarked.80ad40007b07.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Emulating-a-do-while-Loop-in-Python_Watermarked.80ad40007b07.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Emulating-a-do-while-Loop-in-Python_Watermarked.80ad40007b07.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Emulating-a-do-while-Loop-in-Python_Watermarked.80ad40007b07.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Emulating-a-do-while-Loop-in-Python_Watermarked.80ad40007b07.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["python", "best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 16, "kind": "post", "title": "Build Your Python Project Documentation With MkDocs", "description": "In this tutorial, you'll learn how to build professional documentation for a Python package using MkDocs and mkdocstrings. These tools allow you to generate nice-looking and modern documentation from Markdown files and, more importantly, from your code's docstrings.", "url": "/python-project-documentation-with-mkdocs/", "pub_date": "2022-06-15T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Build-Your-Python-Project-Documentation-With-MkDocs_Watermarked.5a882c215e55.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Build-Your-Python-Project-Documentation-With-MkDocs_Watermarked.5a882c215e55.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Build-Your-Python-Project-Documentation-With-MkDocs_Watermarked.5a882c215e55.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Build-Your-Python-Project-Documentation-With-MkDocs_Watermarked.5a882c215e55.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Build-Your-Python-Project-Documentation-With-MkDocs_Watermarked.5a882c215e55.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["basics", "projects", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 17, "kind": "post", "title": "Build a Quiz Application With Python", "description": "In this step-by-step project, you'll build a Python quiz application for the terminal. Your app will ask you multiple-choice questions that you can use to strengthen your own knowledge or challenge your friends to test theirs.", "url": "/python-quiz-application/", "pub_date": "2022-06-08T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Build-a-Quiz-Application_Watermarked.373436013115.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Build-a-Quiz-Application_Watermarked.373436013115.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Build-a-Quiz-Application_Watermarked.373436013115.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Build-a-Quiz-Application_Watermarked.373436013115.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Build-a-Quiz-Application_Watermarked.373436013115.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["basics", "projects"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 18, "kind": "post", "title": "Top Python Game Engines", "description": "In this tutorial, you'll explore several Python game engines available to you. For each, you'll code simple examples and a more advanced game to learn the game engine's strengths and weaknesses.", "url": "/top-python-game-engines/", "pub_date": "2022-05-04T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Top-Python-Game-Engines_Watermarked.4f4397cde117.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Top-Python-Game-Engines_Watermarked.4f4397cde117.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Top-Python-Game-Engines_Watermarked.4f4397cde117.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Top-Python-Game-Engines_Watermarked.4f4397cde117.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Top-Python-Game-Engines_Watermarked.4f4397cde117.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["gamedev", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 19, "kind": "post", "title": "Python's min() and max(): Find Smallest and Largest Values", "description": "In this tutorial, you'll learn how to use Python's built-in min() and max() functions to find the smallest and largest values. You'll also learn how to modify their standard behavior by providing a suitable key function. Finally, you'll code a few practical examples of using min() and max().", "url": "/python-min-and-max/", "pub_date": "2022-05-02T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Pythons-min-and-max-With-Examples_Watermarked.433c199670d0.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Pythons-min-and-max-With-Examples_Watermarked.433c199670d0.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Pythons-min-and-max-With-Examples_Watermarked.433c199670d0.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Pythons-min-and-max-With-Examples_Watermarked.433c199670d0.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Pythons-min-and-max-With-Examples_Watermarked.433c199670d0.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 20, "kind": "post", "title": "Python GUI Programming With Tkinter", "description": "In this tutorial, you'll learn the basics of GUI programming with Tkinter, the de facto Python GUI framework. Master GUI programming concepts such as widgets, geometry managers, and event handlers. Then, put it all together by building two applications: a temperature converter and a text editor.", "url": "/python-gui-tkinter/", "pub_date": "2022-03-30T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-GUI-Programming-With-Tkinter_Watermarked.9e1a9c9070e4.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-GUI-Programming-With-Tkinter_Watermarked.9e1a9c9070e4.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-GUI-Programming-With-Tkinter_Watermarked.9e1a9c9070e4.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-GUI-Programming-With-Tkinter_Watermarked.9e1a9c9070e4.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-GUI-Programming-With-Tkinter_Watermarked.9e1a9c9070e4.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["gui", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}]