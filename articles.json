[{"key": 1, "kind": "post", "title": "Python's del: Remove References From Scopes and Containers", "description": "In this tutorial, you'll learn how Python's del statement works and how to use it in your code. This statement will allow you to remove references from different scopes, items from lists, keys from dictionaries, and members from classes. This will lead to potentially memory-efficient code.", "url": "/python-del-statement/", "pub_date": null, "image_url": "https://files.realpython.com/media/Pythons-del-Statement-Remove-Items-From-Your-Collections_Watermarked.fd5b504e5f73.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Pythons-del-Statement-Remove-Items-From-Your-Collections_Watermarked.fd5b504e5f73.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Pythons-del-Statement-Remove-Items-From-Your-Collections_Watermarked.fd5b504e5f73.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Pythons-del-Statement-Remove-Items-From-Your-Collections_Watermarked.fd5b504e5f73.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Pythons-del-Statement-Remove-Items-From-Your-Collections_Watermarked.fd5b504e5f73.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["python", "best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 2, "kind": "post", "title": "How to Read Python Input as Integers", "description": "In this tutorial, you'll learn how to use Python to get integer input from the user while handling any errors resulting from non-numeric input. This will involve coding your own reusable function built around input().", "url": "/python-input-integer/", "pub_date": null, "image_url": "https://files.realpython.com/media/How-Can-I-Read-User-Input-as-Numbers_Watermarked.24b9ab049c36.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-Can-I-Read-User-Input-as-Numbers_Watermarked.24b9ab049c36.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-Can-I-Read-User-Input-as-Numbers_Watermarked.24b9ab049c36.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-Can-I-Read-User-Input-as-Numbers_Watermarked.24b9ab049c36.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-Can-I-Read-User-Input-as-Numbers_Watermarked.24b9ab049c36.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 3, "kind": "post", "title": "The Terminal: First Steps and Useful Commands", "description": "The terminal is an essential tool in your journey as a Python developer.\r\nThis tutorial helps you to get started with the terminal, pip, and Git by showcasing interesting commands that you can incorporate into your workflow.", "url": "/terminal-commands/", "pub_date": "2023-02-22T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Showcase-Working-with-the-Terminal_Watermarked.5edec84a1425.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Showcase-Working-with-the-Terminal_Watermarked.5edec84a1425.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Showcase-Working-with-the-Terminal_Watermarked.5edec84a1425.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Showcase-Working-with-the-Terminal_Watermarked.5edec84a1425.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Showcase-Working-with-the-Terminal_Watermarked.5edec84a1425.jpg 1920w", "image_placeholder_color": "#aadfe5", "categories": ["basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 4, "kind": "post", "title": "Build a Wordle Clone With Python and Rich", "description": "In this step-by-step project, you'll build your own Wordle clone with Python. Your game will run in the terminal, and you'll use Rich to ensure your word-guessing app looks good. Learn how to build a command-line application from scratch and then challenge your friends to a wordly competition!", "url": "/python-wordle-clone/", "pub_date": "2023-02-06T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Build-a-Wordle-Clone-in-Python-with-Rich_Watermarked.f0c041c03a5e.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Build-a-Wordle-Clone-in-Python-with-Rich_Watermarked.f0c041c03a5e.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Build-a-Wordle-Clone-in-Python-with-Rich_Watermarked.f0c041c03a5e.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Build-a-Wordle-Clone-in-Python-with-Rich_Watermarked.f0c041c03a5e.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Build-a-Wordle-Clone-in-Python-with-Rich_Watermarked.f0c041c03a5e.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["basics", "projects"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 5, "kind": "post", "title": "The Python Standard REPL: Try Out Code and Ideas Quickly", "description": "In this tutorial, you'll learn how to use the Python standard REPL (Read-Eval-Print Loop) to run your code interactively. This tool will allow you to test new ideas, explore and experiment with new tools and libraries, refactor and debug your code, try out examples, and more.", "url": "/python-repl/", "pub_date": "2023-01-25T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Use-the-Interactive-Python-REPL_Watermarked.dce4d5791b83.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Use-the-Interactive-Python-REPL_Watermarked.dce4d5791b83.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Use-the-Interactive-Python-REPL_Watermarked.dce4d5791b83.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Use-the-Interactive-Python-REPL_Watermarked.dce4d5791b83.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Use-the-Interactive-Python-REPL_Watermarked.dce4d5791b83.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 6, "kind": "post", "title": "Python's \"in\" and \"not in\" Operators: Check for Membership", "description": "In this tutorial, you'll learn how to check if a given value is present or absent in a collection of values using Python's in and not in operators, respectively. This type of check is known as membership test in Python.", "url": "/python-in-operator/", "pub_date": "2022-12-19T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Membership-Operators-in-Python-in-and-not-in_Watermarked.73bc0897fb99.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Membership-Operators-in-Python-in-and-not-in_Watermarked.73bc0897fb99.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Membership-Operators-in-Python-in-and-not-in_Watermarked.73bc0897fb99.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Membership-Operators-in-Python-in-and-not-in_Watermarked.73bc0897fb99.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Membership-Operators-in-Python-in-and-not-in_Watermarked.73bc0897fb99.jpg 1920w", "image_placeholder_color": "#ffc674", "categories": ["python", "best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 7, "kind": "post", "title": "Advent of Code: Solving Your Puzzles With Python", "description": "Advent of Code is an online advent calendar that shares new programming puzzles each day from December 1 to the 25. In this tutorial, you'll learn why solving programming puzzles can be beneficial and how you can get started with Advent of Code using Python.", "url": "/python-advent-of-code/", "pub_date": "2022-11-30T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-Puzzles-with-Advent-of-Code_Watermarked.b6877d55d680.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Puzzles-with-Advent-of-Code_Watermarked.b6877d55d680.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Puzzles-with-Advent-of-Code_Watermarked.b6877d55d680.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Puzzles-with-Advent-of-Code_Watermarked.b6877d55d680.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Puzzles-with-Advent-of-Code_Watermarked.b6877d55d680.jpg 1920w", "image_placeholder_color": "#ffc873", "categories": ["basics", "testing"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 8, "kind": "post", "title": "How to Add Python to PATH", "description": "In this tutorial, you'll learn about how to add Python, or any other program, to your PATH environment variable. You'll be covering the procedure in Windows, macOS, and Linux and find out what PATH is and why it's important.", "url": "/add-python-to-path/", "pub_date": "2022-09-26T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Add-Python-to-PATH_Watermarked.567376e2aed0.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Add-Python-to-PATH_Watermarked.567376e2aed0.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Add-Python-to-PATH_Watermarked.567376e2aed0.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Add-Python-to-PATH_Watermarked.567376e2aed0.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Add-Python-to-PATH_Watermarked.567376e2aed0.jpg 1920w", "image_placeholder_color": "#ffc873", "categories": ["best-practices", "devops", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 9, "kind": "post", "title": "How to Replace a String in Python", "description": "In this tutorial, you'll learn how to remove or replace a string or substring. You'll go from the basic string method .replace() all the way up to a multi-layer regex pattern using the sub() function from Python's re module.", "url": "/replace-string-python/", "pub_date": "2022-09-14T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Replace-Parts-of-a-String-in-Python_Watermarked.a70c83972fa6.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Replace-Parts-of-a-String-in-Python_Watermarked.a70c83972fa6.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Replace-Parts-of-a-String-in-Python_Watermarked.a70c83972fa6.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Replace-Parts-of-a-String-in-Python_Watermarked.a70c83972fa6.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Replace-Parts-of-a-String-in-Python_Watermarked.a70c83972fa6.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 10, "kind": "post", "title": "HTML and CSS for Python Developers", "description": "There's no way around HTML and CSS when you want to build web apps.\r\nEven if you're not aiming to become a web developer, knowing the basics of HTML and CSS will help you understand the Web better.\r\nIn this tutorial, you'll get an introduction to HTML and CSS for Python programmers.", "url": "/html-css-python/", "pub_date": "2022-09-07T14:00:00+00:00", "image_url": "https://files.realpython.com/media/HTML-And-CSS-For-Python-Developers_Watermarked.e2604f40ef5b.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/HTML-And-CSS-For-Python-Developers_Watermarked.e2604f40ef5b.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/HTML-And-CSS-For-Python-Developers_Watermarked.e2604f40ef5b.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/HTML-And-CSS-For-Python-Developers_Watermarked.e2604f40ef5b.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/HTML-And-CSS-For-Python-Developers_Watermarked.e2604f40ef5b.jpg 1920w", "image_placeholder_color": "#a9e3b0", "categories": ["web-dev", "django", "flask", "front-end", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 11, "kind": "post", "title": "How to Check if a Python String Contains a Substring", "description": "In this tutorial, you'll learn the best way to check whether a Python string contains a substring. You'll also learn about idiomatic ways to inspect the substring further, match substrings with conditions using regular expressions, and search for substrings in pandas.", "url": "/python-string-contains-substring/", "pub_date": "2022-08-22T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Check-if-a-String-Contains-Another-String_Watermarked.ad5138507ec7.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Check-if-a-String-Contains-Another-String_Watermarked.ad5138507ec7.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Check-if-a-String-Contains-Another-String_Watermarked.ad5138507ec7.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Check-if-a-String-Contains-Another-String_Watermarked.ad5138507ec7.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Check-if-a-String-Contains-Another-String_Watermarked.ad5138507ec7.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 12, "kind": "post", "title": "How to Find an Absolute Value in Python", "description": "In this tutorial, you'll learn how to calculate the absolute value in Python using the built-in abs() function. You'll also implement the corresponding mathematical formulas from scratch. Finally, you'll change the behavior of abs() in your own classes by hooking into Python's interface.", "url": "/python-absolute-value/", "pub_date": "2022-08-17T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 13, "kind": "post", "title": "Your Python Coding Environment on Windows: Setup Guide", "description": "With this opinionated guide to setting up a basic, fully featured and flexible setup for Python coding and open source contributing when working from Windows, you'll go from a fresh install to ready to contribute, and even check out a PowerShell script to automate much of the process.", "url": "/python-coding-setup-windows/", "pub_date": "2022-07-25T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Windows-Python-Coding-Setup_Watermarked.f867fccba747.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Windows-Python-Coding-Setup_Watermarked.f867fccba747.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Windows-Python-Coding-Setup_Watermarked.f867fccba747.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Windows-Python-Coding-Setup_Watermarked.f867fccba747.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Windows-Python-Coding-Setup_Watermarked.f867fccba747.jpg 1920w", "image_placeholder_color": "#e3c3aa", "categories": ["basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 14, "kind": "post", "title": "NumPy's max() and maximum(): Find Extreme Values in Arrays", "description": "In this introduction to NumPy, you'll learn how to find extreme values using the max() and maximum() functions. This includes finding the maximum element in an array or along a given axis of an array, as well as comparing two arrays to find the larger element in each index position.", "url": "/numpy-max-maximum/", "pub_date": "2022-07-13T14:00:00+00:00", "image_url": "https://files.realpython.com/media/NumPy-max-vs-amax-vs-maximum_Watermarked.47deb5fab721.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/NumPy-max-vs-amax-vs-maximum_Watermarked.47deb5fab721.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/NumPy-max-vs-amax-vs-maximum_Watermarked.47deb5fab721.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/NumPy-max-vs-amax-vs-maximum_Watermarked.47deb5fab721.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/NumPy-max-vs-amax-vs-maximum_Watermarked.47deb5fab721.jpg 1920w", "image_placeholder_color": "#aadfe5", "categories": ["data-science", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 15, "kind": "post", "title": "How Can You Emulate Do-While Loops in Python?", "description": "In this tutorial, you'll learn how to emulate do-while loops in Python. The most common technique to do this is to create an infinite while loop with a conditional statement that controls the loop and jumps out of it using a break statement.", "url": "/python-do-while/", "pub_date": "2022-06-20T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Emulating-a-do-while-Loop-in-Python_Watermarked.80ad40007b07.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Emulating-a-do-while-Loop-in-Python_Watermarked.80ad40007b07.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Emulating-a-do-while-Loop-in-Python_Watermarked.80ad40007b07.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Emulating-a-do-while-Loop-in-Python_Watermarked.80ad40007b07.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Emulating-a-do-while-Loop-in-Python_Watermarked.80ad40007b07.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["python", "best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 16, "kind": "post", "title": "Build Your Python Project Documentation With MkDocs", "description": "In this tutorial, you'll learn how to build professional documentation for a Python package using MkDocs and mkdocstrings. These tools allow you to generate nice-looking and modern documentation from Markdown files and, more importantly, from your code's docstrings.", "url": "/python-project-documentation-with-mkdocs/", "pub_date": "2022-06-15T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Build-Your-Python-Project-Documentation-With-MkDocs_Watermarked.5a882c215e55.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Build-Your-Python-Project-Documentation-With-MkDocs_Watermarked.5a882c215e55.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Build-Your-Python-Project-Documentation-With-MkDocs_Watermarked.5a882c215e55.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Build-Your-Python-Project-Documentation-With-MkDocs_Watermarked.5a882c215e55.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Build-Your-Python-Project-Documentation-With-MkDocs_Watermarked.5a882c215e55.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["basics", "projects", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 17, "kind": "post", "title": "Build a Quiz Application With Python", "description": "In this step-by-step project, you'll build a Python quiz application for the terminal. Your app will ask you multiple-choice questions that you can use to strengthen your own knowledge or challenge your friends to test theirs.", "url": "/python-quiz-application/", "pub_date": "2022-06-08T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Build-a-Quiz-Application_Watermarked.373436013115.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Build-a-Quiz-Application_Watermarked.373436013115.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Build-a-Quiz-Application_Watermarked.373436013115.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Build-a-Quiz-Application_Watermarked.373436013115.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Build-a-Quiz-Application_Watermarked.373436013115.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["basics", "projects"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 18, "kind": "post", "title": "Top Python Game Engines", "description": "In this tutorial, you'll explore several Python game engines available to you. For each, you'll code simple examples and a more advanced game to learn the game engine's strengths and weaknesses.", "url": "/top-python-game-engines/", "pub_date": "2022-05-04T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Top-Python-Game-Engines_Watermarked.4f4397cde117.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Top-Python-Game-Engines_Watermarked.4f4397cde117.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Top-Python-Game-Engines_Watermarked.4f4397cde117.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Top-Python-Game-Engines_Watermarked.4f4397cde117.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Top-Python-Game-Engines_Watermarked.4f4397cde117.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["gamedev", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 19, "kind": "post", "title": "Python's min() and max(): Find Smallest and Largest Values", "description": "In this tutorial, you'll learn how to use Python's built-in min() and max() functions to find the smallest and largest values. You'll also learn how to modify their standard behavior by providing a suitable key function. Finally, you'll code a few practical examples of using min() and max().", "url": "/python-min-and-max/", "pub_date": "2022-05-02T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Pythons-min-and-max-With-Examples_Watermarked.433c199670d0.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Pythons-min-and-max-With-Examples_Watermarked.433c199670d0.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Pythons-min-and-max-With-Examples_Watermarked.433c199670d0.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Pythons-min-and-max-With-Examples_Watermarked.433c199670d0.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Pythons-min-and-max-With-Examples_Watermarked.433c199670d0.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 20, "kind": "post", "title": "Python GUI Programming With Tkinter", "description": "In this tutorial, you'll learn the basics of GUI programming with Tkinter, the de facto Python GUI framework. Master GUI programming concepts such as widgets, geometry managers, and event handlers. Then, put it all together by building two applications: a temperature converter and a text editor.", "url": "/python-gui-tkinter/", "pub_date": "2022-03-30T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-GUI-Programming-With-Tkinter_Watermarked.9e1a9c9070e4.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-GUI-Programming-With-Tkinter_Watermarked.9e1a9c9070e4.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-GUI-Programming-With-Tkinter_Watermarked.9e1a9c9070e4.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-GUI-Programming-With-Tkinter_Watermarked.9e1a9c9070e4.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-GUI-Programming-With-Tkinter_Watermarked.9e1a9c9070e4.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["gui", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 21, "kind": "post", "title": "Manage Your To-Do Lists Using Python and Django", "description": "Use Django to build a to-do list manager app. This step-by-step project will teach you how to use Django's class-based views to build a powerful app while dramatically reducing your development time.", "url": "/django-todo-lists/", "pub_date": "2022-03-02T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Django-Project-Build-A-Todo-App_Watermarked.e8dadf4129b4.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Django-Project-Build-A-Todo-App_Watermarked.e8dadf4129b4.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Django-Project-Build-A-Todo-App_Watermarked.e8dadf4129b4.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Django-Project-Build-A-Todo-App_Watermarked.e8dadf4129b4.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Django-Project-Build-A-Todo-App_Watermarked.e8dadf4129b4.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["web-dev", "basics", "projects", "django"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 22, "kind": "post", "title": "Python's all(): Check Your Iterables for Truthiness", "description": "In this step-by-step tutorial, you'll learn how to use Python's all() function to check if all the items in an iterable are truthy. You'll also code various examples that showcase a few interesting use cases of all() and highlight how you can use this function in Python.", "url": "/python-all/", "pub_date": "2022-02-09T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Pythons-all-Function-With-Examples_Watermarked.3c58fdbcb820.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Pythons-all-Function-With-Examples_Watermarked.3c58fdbcb820.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Pythons-all-Function-With-Examples_Watermarked.3c58fdbcb820.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Pythons-all-Function-With-Examples_Watermarked.3c58fdbcb820.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Pythons-all-Function-With-Examples_Watermarked.3c58fdbcb820.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["python", "best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 23, "kind": "post", "title": "Using Python's pip to Manage Your Projects' Dependencies", "description": "What is pip? In this beginner-friendly tutorial, you'll learn how to use pip, the standard package manager for Python, so that you can install and manage packages that aren't part of the Python standard library.", "url": "/what-is-pip/", "pub_date": "2022-02-02T14:00:00+00:00", "image_url": "https://files.realpython.com/media/What-is-PIP_Watermarked.4944e95d83ad.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/What-is-PIP_Watermarked.4944e95d83ad.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/What-is-PIP_Watermarked.4944e95d83ad.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/What-is-PIP_Watermarked.4944e95d83ad.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/What-is-PIP_Watermarked.4944e95d83ad.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 24, "kind": "post", "title": "Raining Outside? Build a Weather CLI App With Python", "description": "In this tutorial, you'll write a nicely formatted Python CLI app that displays information about the current weather in any city you provide the name for.", "url": "/build-a-python-weather-app-cli/", "pub_date": "2022-01-26T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Build-a-Weather-App_Watermarked.248a3ac3e60c.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Build-a-Weather-App_Watermarked.248a3ac3e60c.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Build-a-Weather-App_Watermarked.248a3ac3e60c.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Build-a-Weather-App_Watermarked.248a3ac3e60c.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Build-a-Weather-App_Watermarked.248a3ac3e60c.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["basics", "api"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 25, "kind": "post", "title": "Build a Dice-Rolling Application With Python", "description": "In this step-by-step project, you'll build a dice-rolling simulator app with a minimal text-based user interface using Python. The app will simulate the rolling of up to six dice. Each individual die will have six sides.", "url": "/python-dice-roll/", "pub_date": "2022-01-19T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Rolling-Dice-With-Python_Watermarked.e68f740866f4.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Rolling-Dice-With-Python_Watermarked.e68f740866f4.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Rolling-Dice-With-Python_Watermarked.e68f740866f4.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Rolling-Dice-With-Python_Watermarked.e68f740866f4.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Rolling-Dice-With-Python_Watermarked.e68f740866f4.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["basics", "projects"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 26, "kind": "post", "title": "Using the \"not\" Boolean Operator in Python", "description": "In this step-by-step tutorial, you'll learn how Python's \"not\" operator works and how to use it in your code. You'll get to know its features and see what kind of programming problems you can solve by using \"not\" in Python.", "url": "/python-not-operator/", "pub_date": "2021-10-25T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Pythons-not-Keyword_Watermarked.d80a58b5e06d.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Pythons-not-Keyword_Watermarked.d80a58b5e06d.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Pythons-not-Keyword_Watermarked.d80a58b5e06d.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Pythons-not-Keyword_Watermarked.d80a58b5e06d.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Pythons-not-Keyword_Watermarked.d80a58b5e06d.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 27, "kind": "post", "title": "Using the len() Function in Python", "description": "In this tutorial, you'll learn how and when to use the len() Python function. You'll also learn how to customize your class definitions so that objects of a user-defined class can be used as arguments in len().", "url": "/len-python-function/", "pub_date": "2021-10-20T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Pythons-len-Function_Watermarked.056de9852b3f.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Pythons-len-Function_Watermarked.056de9852b3f.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Pythons-len-Function_Watermarked.056de9852b3f.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Pythons-len-Function_Watermarked.056de9852b3f.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Pythons-len-Function_Watermarked.056de9852b3f.jpg 1920w", "image_placeholder_color": "#ffc873", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 28, "kind": "post", "title": "Representing Rational Numbers With Python Fractions", "description": "In this tutorial, you'll learn about the Fraction data type in Python, which can represent rational numbers precisely without the rounding errors in binary arithmetic. You'll find that this is especially important in financial and other high-precision applications.", "url": "/python-fractions/", "pub_date": "2021-10-11T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Working-With-Fractions-in-Python_Watermarked.97cf56570095.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Working-With-Fractions-in-Python_Watermarked.97cf56570095.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Working-With-Fractions-in-Python_Watermarked.97cf56570095.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Working-With-Fractions-in-Python_Watermarked.97cf56570095.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Working-With-Fractions-in-Python_Watermarked.97cf56570095.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 29, "kind": "post", "title": "Python's sum(): The Pythonic Way to Sum Values", "description": "In this step-by-step tutorial, you'll learn how to use Python's sum() function to add numeric values together. You also learn how to concatenate sequences, such as lists and tuples, using sum().", "url": "/python-sum-function/", "pub_date": "2021-10-06T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Pythons-sum-with-Examples_Watermarked.7d2beb99a606.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Pythons-sum-with-Examples_Watermarked.7d2beb99a606.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Pythons-sum-with-Examples_Watermarked.7d2beb99a606.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Pythons-sum-with-Examples_Watermarked.7d2beb99a606.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Pythons-sum-with-Examples_Watermarked.7d2beb99a606.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 30, "kind": "post", "title": "Reverse Strings in Python: reversed(), Slicing, and More", "description": "In this step-by-step tutorial, you'll learn how to reverse strings in Python by using available tools such as reversed() and slicing operations. You'll also learn about a few useful ways to build reversed strings by hand.", "url": "/reverse-string-python/", "pub_date": "2021-09-27T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Reverse-a-String-in-Python_Watermarked.580a70dab81f.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Reverse-a-String-in-Python_Watermarked.580a70dab81f.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Reverse-a-String-in-Python_Watermarked.580a70dab81f.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Reverse-a-String-in-Python_Watermarked.580a70dab81f.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Reverse-a-String-in-Python_Watermarked.580a70dab81f.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["python", "best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 31, "kind": "post", "title": "Using the \"and\" Boolean Operator in Python", "description": "In this step-by-step tutorial, you'll learn how Python's \"and\" operator works and how to use it in your code. You'll get to know its special features and see what kind of programming problems you can solve by using \"and\" in Python.", "url": "/python-and-operator/", "pub_date": "2021-09-20T14:00:00+00:00", "image_url": "https://files.realpython.com/media/The-Python-and-Operator_Watermarked.e2b7fbb273b9.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/The-Python-and-Operator_Watermarked.e2b7fbb273b9.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/The-Python-and-Operator_Watermarked.e2b7fbb273b9.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/The-Python-and-Operator_Watermarked.e2b7fbb273b9.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/The-Python-and-Operator_Watermarked.e2b7fbb273b9.jpg 1920w", "image_placeholder_color": "#ffc873", "categories": ["python", "best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 32, "kind": "post", "title": "Build a Personal Diary With Django and Python", "description": "In this beginner-friendly tutorial, you'll build a personal diary in Django. You'll use the strengths of the Django web framework and learn the basics of web apps.", "url": "/django-diary-project-python/", "pub_date": "2021-09-15T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Django-Project-Build-A-Diary-App_Watermarked.3dc1dc06b0bc.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Django-Project-Build-A-Diary-App_Watermarked.3dc1dc06b0bc.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Django-Project-Build-A-Diary-App_Watermarked.3dc1dc06b0bc.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Django-Project-Build-A-Diary-App_Watermarked.3dc1dc06b0bc.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Django-Project-Build-A-Diary-App_Watermarked.3dc1dc06b0bc.jpg 1920w", "image_placeholder_color": "#ffc873", "categories": ["web-dev", "projects", "django", "front-end", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 33, "kind": "post", "title": "How Long Does It Take to Learn Python?", "description": "In this article, you'll assess whether or not learning Python is a good investment of your time, how long it will take you, and what background factors you need to consider when planning your learning journey. You'll also learn what resources exist that can help you get started.", "url": "/how-long-does-it-take-to-learn-python/", "pub_date": "2021-09-06T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-Long-Does-It-Take-to-Learn-Python_Watermarked.c85a6c016399.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-Long-Does-It-Take-to-Learn-Python_Watermarked.c85a6c016399.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-Long-Does-It-Take-to-Learn-Python_Watermarked.c85a6c016399.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-Long-Does-It-Take-to-Learn-Python_Watermarked.c85a6c016399.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-Long-Does-It-Take-to-Learn-Python_Watermarked.c85a6c016399.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["community", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 34, "kind": "post", "title": "Using Python Optional Arguments When Defining Functions", "description": "In this tutorial, you'll learn about Python optional arguments and how to define functions with default values. You'll also learn how to create functions that accept any number of arguments using args and kwargs.", "url": "/python-optional-arguments/", "pub_date": "2021-08-30T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Create-Python-Functions-with-Optional-Arguments_Watermarked.f2c8b582aff0.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Create-Python-Functions-with-Optional-Arguments_Watermarked.f2c8b582aff0.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Create-Python-Functions-with-Optional-Arguments_Watermarked.f2c8b582aff0.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Create-Python-Functions-with-Optional-Arguments_Watermarked.f2c8b582aff0.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Create-Python-Functions-with-Optional-Arguments_Watermarked.f2c8b582aff0.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 35, "kind": "post", "title": "Your First Steps With Django: Set Up a Django Project", "description": "This tutorial provides a walkthrough and a reference for starting a Django project and app. You can use it as a quick setup guide for any future Django project and tutorial you'll work on.", "url": "/django-setup/", "pub_date": "2021-07-21T14:05:12+00:00", "image_url": "https://files.realpython.com/media/Django_Setup_Watermark.6c4def7c5b2f.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Django_Setup_Watermark.6c4def7c5b2f.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Django_Setup_Watermark.6c4def7c5b2f.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Django_Setup_Watermark.6c4def7c5b2f.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Django_Setup_Watermark.6c4def7c5b2f.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["best-practices", "basics", "django", "web-dev"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 36, "kind": "post", "title": "Using FastAPI to Build Python Web APIs", "description": "In this guide, you'll learn the main concepts of FastAPI and how to use it to quickly create web APIs that implement best practices by default. By the end of it, you will be able to start creating production-ready web APIs.", "url": "/fastapi-python-web-apis/", "pub_date": "2021-07-14T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Build-a-Project-With-FastAPI_Watermarked.751f3adef4e9.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Build-a-Project-With-FastAPI_Watermarked.751f3adef4e9.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Build-a-Project-With-FastAPI_Watermarked.751f3adef4e9.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Build-a-Project-With-FastAPI_Watermarked.751f3adef4e9.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Build-a-Project-With-FastAPI_Watermarked.751f3adef4e9.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["web-dev", "basics", "api"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 37, "kind": "post", "title": "What Can I Do With Python?", "description": "In this tutorial, you'll find a set of guidelines that will help you start applying your Python skills to real-world problems. By the end of your reading, you'll be able to answer the question \"What can I do with Python?\"", "url": "/what-can-i-do-with-python/", "pub_date": "2021-07-07T14:00:00+00:00", "image_url": "https://files.realpython.com/media/building_with_python_watermark.2ebe5beb5b1e.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/building_with_python_watermark.2ebe5beb5b1e.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/building_with_python_watermark.2ebe5beb5b1e.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/building_with_python_watermark.2ebe5beb5b1e.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/building_with_python_watermark.2ebe5beb5b1e.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 38, "kind": "post", "title": "Python's Counter: The Pythonic Way to Count Objects", "description": "In this step-by-step tutorial, you'll learn how to use Python's Counter to count several repeated objects at once.", "url": "/python-counter/", "pub_date": "2021-07-05T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Use-Counter-in-Pythons-Collections-Module_Watermarked.673c6dc8ee2e.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Use-Counter-in-Pythons-Collections-Module_Watermarked.673c6dc8ee2e.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Use-Counter-in-Pythons-Collections-Module_Watermarked.673c6dc8ee2e.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Use-Counter-in-Pythons-Collections-Module_Watermarked.673c6dc8ee2e.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Use-Counter-in-Pythons-Collections-Module_Watermarked.673c6dc8ee2e.jpg 1920w", "image_placeholder_color": "#ffc873", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 39, "kind": "post", "title": "Reverse Python Lists: Beyond .reverse() and reversed()", "description": "In this step-by-step tutorial, you'll learn about Python's tools and techniques to work with lists in reverse order. You'll also learn how to reverse your list by hand.", "url": "/python-reverse-list/", "pub_date": "2021-06-28T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Reverse-a-List-in-Python_Watermarked.7002d78bbb86.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Reverse-a-List-in-Python_Watermarked.7002d78bbb86.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Reverse-a-List-in-Python_Watermarked.7002d78bbb86.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Reverse-a-List-in-Python_Watermarked.7002d78bbb86.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Reverse-a-List-in-Python_Watermarked.7002d78bbb86.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 40, "kind": "post", "title": "Natural Language Processing With Python's NLTK Package", "description": "In this beginner-friendly tutorial, you'll take your first steps with Natural Language Processing (NLP) and Python's Natural Language Toolkit (NLTK). You'll learn how to process unstructured data in order to be able to analyze it and draw conclusions from it.", "url": "/nltk-nlp-python/", "pub_date": "2021-05-05T14:00:00+00:00", "image_url": "https://files.realpython.com/media/NLP-for-Beginners-Pythons-Natural-Language-Toolkit-NLTK_Watermarked.16a787c1e9c6.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/NLP-for-Beginners-Pythons-Natural-Language-Toolkit-NLTK_Watermarked.16a787c1e9c6.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/NLP-for-Beginners-Pythons-Natural-Language-Toolkit-NLTK_Watermarked.16a787c1e9c6.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/NLP-for-Beginners-Pythons-Natural-Language-Toolkit-NLTK_Watermarked.16a787c1e9c6.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/NLP-for-Beginners-Pythons-Natural-Language-Toolkit-NLTK_Watermarked.16a787c1e9c6.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["data-science", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 41, "kind": "post", "title": "Python Basics: Paperback Now Available!", "description": "After years of writing, reviewing, and testing, we\u2019re delighted to announce that Python Basics: A Practical Introduction to Python 3 is now available in paperback! In this article, you\u2019ll see how you can level up your Python with Python Basics and how other Pythonistas have already been doing it.", "url": "/python-basics-paperback/", "pub_date": "2021-04-26T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-Basics-Paperback-Now-Available_Watermarked.d6b65a946bd8.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Basics-Paperback-Now-Available_Watermarked.d6b65a946bd8.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Basics-Paperback-Now-Available_Watermarked.d6b65a946bd8.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Basics-Paperback-Now-Available_Watermarked.d6b65a946bd8.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Basics-Paperback-Now-Available_Watermarked.d6b65a946bd8.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["community", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 42, "kind": "post", "title": "How to Use Python: Your First Steps", "description": "In this step-by-step tutorial, you'll learn the basics of how to use Python. With this knowledge, you'll be able to start coding your Python applications.", "url": "/python-first-steps/", "pub_date": "2021-01-25T16:27:13+00:00", "image_url": "https://files.realpython.com/media/UPDATE-First-Steps-With-Python_Watermarked.256721df5607.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/UPDATE-First-Steps-With-Python_Watermarked.256721df5607.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/UPDATE-First-Steps-With-Python_Watermarked.256721df5607.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/UPDATE-First-Steps-With-Python_Watermarked.256721df5607.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/UPDATE-First-Steps-With-Python_Watermarked.256721df5607.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 43, "kind": "post", "title": "C for Python Programmers", "description": "In this tutorial, you'll learn the basics of the C language, which is used in the source code for CPython, the most popular Python implementation. Learning C is important for Python programmers interested in contributing to CPython.", "url": "/c-for-python-programmers/", "pub_date": "2021-01-20T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Introduction-to-C-for-Python-Programmers_Watermarked.94e5e6d8e7cb.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Introduction-to-C-for-Python-Programmers_Watermarked.94e5e6d8e7cb.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Introduction-to-C-for-Python-Programmers_Watermarked.94e5e6d8e7cb.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Introduction-to-C-for-Python-Programmers_Watermarked.94e5e6d8e7cb.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Introduction-to-C-for-Python-Programmers_Watermarked.94e5e6d8e7cb.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 44, "kind": "post", "title": "Make Your First Python Game: Rock, Paper, Scissors!", "description": "In this tutorial, you'll learn to program rock paper scissors in Python from scratch. You'll learn how to take in user input, make the computer choose a random action, determine a winner, and split your code into functions.", "url": "/python-rock-paper-scissors/", "pub_date": "2021-01-18T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Rock-Paper-Scissors-Make-Your-First-Python-Game_Watermarked.107e6ff4060c.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Rock-Paper-Scissors-Make-Your-First-Python-Game_Watermarked.107e6ff4060c.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Rock-Paper-Scissors-Make-Your-First-Python-Game_Watermarked.107e6ff4060c.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Rock-Paper-Scissors-Make-Your-First-Python-Game_Watermarked.107e6ff4060c.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Rock-Paper-Scissors-Make-Your-First-Python-Game_Watermarked.107e6ff4060c.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["gamedev", "basics", "projects"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 45, "kind": "post", "title": "NumPy Tutorial: Your First Steps Into Data Science in Python", "description": "In this tutorial, you'll learn everything you need to know to get up and running with NumPy, Python's de facto standard for multidimensional data arrays. NumPy is the foundation for most data science in Python, so if you're interested in that field, then this is a great place to start.", "url": "/numpy-tutorial/", "pub_date": "2021-01-11T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Intro-to-NumPy_Watermarked.7beebf1cc93e.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Intro-to-NumPy_Watermarked.7beebf1cc93e.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Intro-to-NumPy_Watermarked.7beebf1cc93e.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Intro-to-NumPy_Watermarked.7beebf1cc93e.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Intro-to-NumPy_Watermarked.7beebf1cc93e.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["data-science", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 46, "kind": "post", "title": "Python's .append(): Add Items to Your Lists in Place", "description": "In this step-by-step tutorial, you'll learn how Python's .append() works and how to use it for adding items to your list in place. You'll also learn how to code your own stacks and queues using .append() and .pop().", "url": "/python-append/", "pub_date": "2021-01-04T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Use-the-Python-append-Method_Watermarked.4e39826bc6f5.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Use-the-Python-append-Method_Watermarked.4e39826bc6f5.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Use-the-Python-append-Method_Watermarked.4e39826bc6f5.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Use-the-Python-append-Method_Watermarked.4e39826bc6f5.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Use-the-Python-append-Method_Watermarked.4e39826bc6f5.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 47, "kind": "post", "title": "The pass Statement: How to Do Nothing in Python", "description": "In this tutorial, you'll learn about the Python pass statement, which tells the interpreter to do nothing. Even though pass has no effect on program execution, it can be useful. You'll see several use cases for pass as well as some alternative ways to do nothing in your code.", "url": "/python-pass/", "pub_date": "2020-12-16T14:00:00+00:00", "image_url": "https://files.realpython.com/media/The-Python-pass-statement-With-Examples_Watermarked.fa3be5d1bf65.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/The-Python-pass-statement-With-Examples_Watermarked.fa3be5d1bf65.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/The-Python-pass-statement-With-Examples_Watermarked.fa3be5d1bf65.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/The-Python-pass-statement-With-Examples_Watermarked.fa3be5d1bf65.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/The-Python-pass-statement-With-Examples_Watermarked.fa3be5d1bf65.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 48, "kind": "post", "title": "What Is Data Engineering and Is It Right for You?", "description": "In this article, you'll get an overview of the discipline of data engineering. You'll learn what is and isn't part of a data engineer's job, who data engineers work with, and why data engineers play a crucial role in many industries.", "url": "/python-data-engineer/", "pub_date": "2020-12-14T14:00:00+00:00", "image_url": "https://files.realpython.com/media/What-is-Data-Engineering_Watermarked.607e761a3c0e.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/What-is-Data-Engineering_Watermarked.607e761a3c0e.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/What-is-Data-Engineering_Watermarked.607e761a3c0e.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/What-is-Data-Engineering_Watermarked.607e761a3c0e.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/What-is-Data-Engineering_Watermarked.607e761a3c0e.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 49, "kind": "post", "title": "Python enumerate(): Simplify Looping With Counters", "description": "Once you learn about for loops in Python, you know that using an index to access items in a sequence isn't very Pythonic. So what do you do when you need that index value? In this tutorial, you'll learn all about Python's built-in enumerate(), where it's used, and how you can emulate its behavior.", "url": "/python-enumerate/", "pub_date": "2020-11-18T14:00:00+00:00", "image_url": "https://files.realpython.com/media/The-Python-enumerate-Function-Guide_Watermarked.c803ed002afa.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/The-Python-enumerate-Function-Guide_Watermarked.c803ed002afa.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/The-Python-enumerate-Function-Guide_Watermarked.c803ed002afa.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/The-Python-enumerate-Function-Guide_Watermarked.c803ed002afa.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/The-Python-enumerate-Function-Guide_Watermarked.c803ed002afa.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 50, "kind": "post", "title": "Python Modulo in Practice: How to Use the % Operator", "description": "In this tutorial, you'll learn about the Python modulo operator (%). You'll look at the mathematical concepts behind the modulo operation and how the modulo operator is used with Python's numeric types. You'll also see ways to use the modulo operator in your own code.", "url": "/python-modulo-operator/", "pub_date": "2020-10-26T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-Modulo-in-Practice-How-to-Use-the--Operator_Watermarked.e2c969c91ddc.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Modulo-in-Practice-How-to-Use-the--Operator_Watermarked.e2c969c91ddc.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Modulo-in-Practice-How-to-Use-the--Operator_Watermarked.e2c969c91ddc.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Modulo-in-Practice-How-to-Use-the--Operator_Watermarked.e2c969c91ddc.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Modulo-in-Practice-How-to-Use-the--Operator_Watermarked.e2c969c91ddc.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 51, "kind": "post", "title": "Python's map(): Processing Iterables Without a Loop", "description": "In this step-by-step tutorial, you'll learn how Python's map() works and how to use it effectively in your programs. You'll also learn how to use list comprehension and generator expressions to replace map() in a Pythonic and efficient way.", "url": "/python-map-function/", "pub_date": "2020-09-30T14:00:00+00:00", "image_url": "https://files.realpython.com/media/The-Python-map-Function-Guide_Watermarked.2b0943edf4b8.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/The-Python-map-Function-Guide_Watermarked.2b0943edf4b8.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/The-Python-map-Function-Guide_Watermarked.2b0943edf4b8.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/The-Python-map-Function-Guide_Watermarked.2b0943edf4b8.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/The-Python-map-Function-Guide_Watermarked.2b0943edf4b8.jpg 1920w", "image_placeholder_color": "#ffc873", "categories": ["python", "best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 52, "kind": "post", "title": "The Python return Statement: Usage and Best Practices", "description": "In this step-by-step tutorial, you'll learn how to use the Python return statement when writing functions. Additionally, you'll cover some good programming practices related to the use of return. With this knowledge, you'll be able to write readable, robust, and maintainable functions in Python.", "url": "/python-return-statement/", "pub_date": "2020-09-28T14:00:00+00:00", "image_url": "https://files.realpython.com/media/The-Python-return-Statement_Watermarked.42392feb6973.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/The-Python-return-Statement_Watermarked.42392feb6973.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/The-Python-return-Statement_Watermarked.42392feb6973.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/The-Python-return-Statement_Watermarked.42392feb6973.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/The-Python-return-Statement_Watermarked.42392feb6973.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["python", "best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 53, "kind": "post", "title": "Numbers in Python", "description": "In this tutorial, you'll learn about numbers and basic math in Python. You'll explore integer, floating-point numbers, and complex numbers and see how perform calculations using Python's arithmetic operators, math functions, and number methods.", "url": "/python-numbers/", "pub_date": "2020-09-16T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-Basics-Chapter-Numbers-in-Python_Watermarked.70cee8925cbf.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Basics-Chapter-Numbers-in-Python_Watermarked.70cee8925cbf.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Basics-Chapter-Numbers-in-Python_Watermarked.70cee8925cbf.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Basics-Chapter-Numbers-in-Python_Watermarked.70cee8925cbf.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Basics-Chapter-Numbers-in-Python_Watermarked.70cee8925cbf.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 54, "kind": "post", "title": "Find & Fix Code Bugs in Python: Debug With IDLE", "description": "In this tutorial, you'll learn how to identify and fix logic errors, or bugs, in your Python code. You'll use the built-in debugging tools in Python's Integrated Development and Learning Environment to practice locating and resolving bugs in an example function.", "url": "/python-debug-idle/", "pub_date": "2020-09-09T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-Basics-Chapter-Finding-and-Fixing-Code-Bugs_Watermarked.eeaac9d5247f.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Basics-Chapter-Finding-and-Fixing-Code-Bugs_Watermarked.eeaac9d5247f.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Basics-Chapter-Finding-and-Fixing-Code-Bugs_Watermarked.eeaac9d5247f.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Basics-Chapter-Finding-and-Fixing-Code-Bugs_Watermarked.eeaac9d5247f.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Basics-Chapter-Finding-and-Fixing-Code-Bugs_Watermarked.eeaac9d5247f.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 55, "kind": "post", "title": "Python 3 Installation & Setup Guide", "description": "The first step to getting started with Python is to install it on your machine. In this tutorial, you'll learn how to check which version of Python, if any, you have on your Windows, Mac, or Linux computer and the best way to install the most recent version in any environment.", "url": "/installing-python/", "pub_date": "2020-08-31T16:15:29+00:00", "image_url": "https://files.realpython.com/media/Python-3-Installation--Setup-Guide_Watermarked.62f654dcab67.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-3-Installation--Setup-Guide_Watermarked.62f654dcab67.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-3-Installation--Setup-Guide_Watermarked.62f654dcab67.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-3-Installation--Setup-Guide_Watermarked.62f654dcab67.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-3-Installation--Setup-Guide_Watermarked.62f654dcab67.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["best-practices", "basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 56, "kind": "post", "title": "Common Python Data Structures (Guide)", "description": "In this tutorial, you'll learn about Python's data structures. You'll look at several implementations of abstract data types and learn which implementations are best for your specific use cases.", "url": "/python-data-structures/", "pub_date": "2020-08-26T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-Tricks-Chapter-on-Data-Structures_Watermarked.b5d9d86333c3.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Tricks-Chapter-on-Data-Structures_Watermarked.b5d9d86333c3.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Tricks-Chapter-on-Data-Structures_Watermarked.b5d9d86333c3.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Tricks-Chapter-on-Data-Structures_Watermarked.b5d9d86333c3.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Tricks-Chapter-on-Data-Structures_Watermarked.b5d9d86333c3.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 57, "kind": "post", "title": "Namespaces and Scope in Python", "description": "In this tutorial, you'll learn about Python namespaces, the structures used to store and organize the symbolic names created during execution of a Python program. You'll learn when namespaces are created, how they are implemented, and how they define variable scope.", "url": "/python-namespaces-scope/", "pub_date": "2020-07-29T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Namespaces-and-Scope-in-Python_Watermarked.cb9ad9d896cb.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Namespaces-and-Scope-in-Python_Watermarked.cb9ad9d896cb.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Namespaces-and-Scope-in-Python_Watermarked.cb9ad9d896cb.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Namespaces-and-Scope-in-Python_Watermarked.cb9ad9d896cb.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Namespaces-and-Scope-in-Python_Watermarked.cb9ad9d896cb.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 58, "kind": "post", "title": "Python Keywords: An Introduction", "description": "Python keywords make up the fundamental building blocks of any Python program. In this tutorial, you'll learn the basic syntax and usage for each of Python's thirty-five keywords so you can write more efficient and readable code.", "url": "/python-keywords/", "pub_date": "2020-06-15T14:00:00+00:00", "image_url": "https://files.realpython.com/media/A-Guide-to-Python-Keywords_Watermarked.dfca88c24b1d.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/A-Guide-to-Python-Keywords_Watermarked.dfca88c24b1d.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/A-Guide-to-Python-Keywords_Watermarked.dfca88c24b1d.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/A-Guide-to-Python-Keywords_Watermarked.dfca88c24b1d.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/A-Guide-to-Python-Keywords_Watermarked.dfca88c24b1d.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 59, "kind": "post", "title": "Regular Expressions: Regexes in Python (Part 2)", "description": "In the previous tutorial in this series, you learned how to perform sophisticated pattern matching using regular expressions, or regexes, in Python.  This tutorial explores more regex tools and techniques that are available in Python.", "url": "/regex-python-part-2/", "pub_date": "2020-06-03T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Regular-Expressions-Regexes-in-Python-Part-2_Watermarked.769dc3d59efa.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Regular-Expressions-Regexes-in-Python-Part-2_Watermarked.769dc3d59efa.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Regular-Expressions-Regexes-in-Python-Part-2_Watermarked.769dc3d59efa.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Regular-Expressions-Regexes-in-Python-Part-2_Watermarked.769dc3d59efa.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Regular-Expressions-Regexes-in-Python-Part-2_Watermarked.769dc3d59efa.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 60, "kind": "post", "title": "Regular Expressions: Regexes in Python (Part 1)", "description": "In previous tutorials in this series, you've seen several different ways to compare string values with direct character-by-character comparison. In this tutorial, you'll learn how to perform more complex string pattern matching using regular expressions, or regexes, in Python.", "url": "/regex-python/", "pub_date": "2020-04-29T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Regular-Expressions-Regexes-in-Python-Part-1_Watermarked.0423050c5371.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Regular-Expressions-Regexes-in-Python-Part-1_Watermarked.0423050c5371.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Regular-Expressions-Regexes-in-Python-Part-1_Watermarked.0423050c5371.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Regular-Expressions-Regexes-in-Python-Part-1_Watermarked.0423050c5371.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Regular-Expressions-Regexes-in-Python-Part-1_Watermarked.0423050c5371.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 61, "kind": "post", "title": "How to Use any() in Python", "description": "If you've ever wondered how to simplify complex conditionals by determining if at least one in a series of conditions is true, then look no further. This tutorial will teach you all about how to use any() in Python to do just that.", "url": "/any-python/", "pub_date": "2020-03-30T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 62, "kind": "post", "title": "Using the Python defaultdict Type for Handling Missing Keys", "description": "In this step-by-step tutorial, you'll learn how the Python defaultdict type works and how to use it for handling missing keys when you're working with dictionaries. You'll also learn how to use a defaultdict to solve problems like grouping or counting the items in a sequence or collection.", "url": "/python-defaultdict/", "pub_date": "2020-03-11T14:00:00+00:00", "image_url": "https://files.realpython.com/media/The-Python-defaultdict-Type_Watermarked.f6e14d903857.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/The-Python-defaultdict-Type_Watermarked.f6e14d903857.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/The-Python-defaultdict-Type_Watermarked.f6e14d903857.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/The-Python-defaultdict-Type_Watermarked.f6e14d903857.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/The-Python-defaultdict-Type_Watermarked.f6e14d903857.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 63, "kind": "post", "title": "Defining Your Own Python Function", "description": "In this tutorial, you'll learn how to define and call your own Python function.  You'll also learn about passing data to your function, and returning data from your function back to its calling environment.", "url": "/defining-your-own-python-function/", "pub_date": "2020-03-09T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Defining-Your-Own-Python-Function_Watermarked.d18ffb243c6e.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Defining-Your-Own-Python-Function_Watermarked.d18ffb243c6e.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Defining-Your-Own-Python-Function_Watermarked.d18ffb243c6e.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Defining-Your-Own-Python-Function_Watermarked.d18ffb243c6e.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Defining-Your-Own-Python-Function_Watermarked.d18ffb243c6e.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 64, "kind": "post", "title": "The Beginner's Guide to Python Turtle", "description": "In this step-by-step tutorial, you'll learn the basics of Python programming with the help of a simple and interactive Python library called turtle. If you're a beginner to Python, then this tutorial will definitely help you on your journey as you take your first steps into the world of programming.", "url": "/beginners-guide-python-turtle/", "pub_date": "2020-02-26T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Your-First-Python-Turtle-Program_Watermarked.f90d109114fb.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Your-First-Python-Turtle-Program_Watermarked.f90d109114fb.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Your-First-Python-Turtle-Program_Watermarked.f90d109114fb.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Your-First-Python-Turtle-Program_Watermarked.f90d109114fb.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Your-First-Python-Turtle-Program_Watermarked.f90d109114fb.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 65, "kind": "post", "title": "Introduction to Python SQL Libraries", "description": "In this step-by-step tutorial, you'll learn how to connect to different database management systems by using various Python SQL libraries. You'll interact with SQLite, MySQL, and PostgreSQL databases and perform common database queries using a Python application.", "url": "/python-sql-libraries/", "pub_date": "2020-02-24T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-and-SQL_Watermarked.d677ab534011.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-and-SQL_Watermarked.d677ab534011.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-and-SQL_Watermarked.d677ab534011.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-and-SQL_Watermarked.d677ab534011.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-and-SQL_Watermarked.d677ab534011.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["databases", "basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 66, "kind": "post", "title": "Null in Python: Understanding Python's NoneType Object", "description": "In this tutorial, you'll learn about the NoneType object None, which acts as the null in Python. This object represents emptiness, and you can use it to mark default parameters and even show when you have no result. None is a tool for doing everything with nothing!", "url": "/null-in-python/", "pub_date": "2020-02-19T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Pythons-None-Type-Null-in-Python_Watermarked.9d48d487f417.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Pythons-None-Type-Null-in-Python_Watermarked.9d48d487f417.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Pythons-None-Type-Null-in-Python_Watermarked.9d48d487f417.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Pythons-None-Type-Null-in-Python_Watermarked.9d48d487f417.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Pythons-None-Type-Null-in-Python_Watermarked.9d48d487f417.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 67, "kind": "post", "title": "A Guide to the Newer Python String Format Techniques", "description": "In the last tutorial in this series, you learned how to format string data using the string modulo operator.  In this tutorial, you'll see two more items to add to your Python string formatting toolkit. You'll learn about Python's string format method and the formatted string literal, or f-string.", "url": "/python-formatted-output/", "pub_date": "2020-02-17T14:00:00+00:00", "image_url": "https://files.realpython.com/media/A-Guide-to-the-Newer-Python-String-Format-Techniques_Watermarked.52c033817b79.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/A-Guide-to-the-Newer-Python-String-Format-Techniques_Watermarked.52c033817b79.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/A-Guide-to-the-Newer-Python-String-Format-Techniques_Watermarked.52c033817b79.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/A-Guide-to-the-Newer-Python-String-Format-Techniques_Watermarked.52c033817b79.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/A-Guide-to-the-Newer-Python-String-Format-Techniques_Watermarked.52c033817b79.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 68, "kind": "post", "title": "Using pandas and Python to Explore Your Dataset", "description": "In this step-by-step tutorial, you'll learn how to start exploring a dataset with pandas and Python. You'll learn how to access specific rows and columns to answer questions about your data. You'll also see how to handle missing values and prepare to visualize your dataset in a Jupyter notebook.", "url": "/pandas-python-explore-dataset/", "pub_date": "2020-01-06T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Intro-to-Exploratory-Data-Analysis-With-Pandas_Watermarked.81a7d7df468f.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Intro-to-Exploratory-Data-Analysis-With-Pandas_Watermarked.81a7d7df468f.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Intro-to-Exploratory-Data-Analysis-With-Pandas_Watermarked.81a7d7df468f.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Intro-to-Exploratory-Data-Analysis-With-Pandas_Watermarked.81a7d7df468f.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Intro-to-Exploratory-Data-Analysis-With-Pandas_Watermarked.81a7d7df468f.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["data-science", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 69, "kind": "post", "title": "Invalid Syntax in Python: Common Reasons for SyntaxError", "description": "In this step-by-step tutorial, you'll see common examples of invalid syntax in Python and learn how to resolve the issue. If you've ever received a SyntaxError when trying to run your Python code, then this is the guide for you!", "url": "/invalid-syntax-python/", "pub_date": "2019-11-20T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Common-Syntax-Problems-Invalid-Syntax-in-Python_Watermarked.f2542f224bb4.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Common-Syntax-Problems-Invalid-Syntax-in-Python_Watermarked.f2542f224bb4.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Common-Syntax-Problems-Invalid-Syntax-in-Python_Watermarked.f2542f224bb4.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Common-Syntax-Problems-Invalid-Syntax-in-Python_Watermarked.f2542f224bb4.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Common-Syntax-Problems-Invalid-Syntax-in-Python_Watermarked.f2542f224bb4.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 70, "kind": "post", "title": "Getting Started With Python IDLE", "description": "In this tutorial, you'll learn how to use the development environment included with your Python installation. Python IDLE is a small program that packs a big punch!  You'll learn how to use Python IDLE to interact with Python directly, work with Python files, and improve your development workflow.", "url": "/python-idle/", "pub_date": "2019-11-13T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Getting-Started-With-Python-IDLE_Watermarked.fc401edede69.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Getting-Started-With-Python-IDLE_Watermarked.fc401edede69.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Getting-Started-With-Python-IDLE_Watermarked.fc401edede69.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Getting-Started-With-Python-IDLE_Watermarked.fc401edede69.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Getting-Started-With-Python-IDLE_Watermarked.fc401edede69.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 71, "kind": "post", "title": "When to Use a List Comprehension in Python", "description": "Python list comprehensions make it easy to create lists while performing sophisticated filtering, mapping, and conditional logic on their members. In this tutorial, you'll learn when to use a list comprehension in Python and how to create them effectively.", "url": "/list-comprehension-python/", "pub_date": "2019-11-06T14:00:00+00:00", "image_url": "https://files.realpython.com/media/List-Comprehensions-in-Python_Watermarked.39cf85bdd5d0.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/List-Comprehensions-in-Python_Watermarked.39cf85bdd5d0.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/List-Comprehensions-in-Python_Watermarked.39cf85bdd5d0.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/List-Comprehensions-in-Python_Watermarked.39cf85bdd5d0.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/List-Comprehensions-in-Python_Watermarked.39cf85bdd5d0.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 72, "kind": "post", "title": "Using the Python zip() Function for Parallel Iteration", "description": "In this step-by-step tutorial, you'll learn how to use the Python zip() function to solve common programming problems. You'll learn how to traverse multiple iterables in parallel and create dictionaries with just a few lines of code.", "url": "/python-zip-function/", "pub_date": "2019-10-02T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Use-Python-Zip-with-Examples_Watermarked.3020903367b6.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Use-Python-Zip-with-Examples_Watermarked.3020903367b6.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Use-Python-Zip-with-Examples_Watermarked.3020903367b6.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Use-Python-Zip-with-Examples_Watermarked.3020903367b6.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Use-Python-Zip-with-Examples_Watermarked.3020903367b6.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 73, "kind": "post", "title": "How to Convert a Python String to int", "description": "There are several ways to represent integers in Python. In this quick and practical tutorial, you'll learn how you can store integers using int and str as well as how you can convert a Python string to an int and vice versa.", "url": "/convert-python-string-to-int/", "pub_date": "2019-09-18T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 74, "kind": "post", "title": "MATLAB vs Python: Why and How to Make the Switch", "description": "In this step-by-step tutorial, you'll learn about MATLAB vs Python, why you should switch from MATLAB to Python, the packages you'll need to make a smooth transition, and the bumps you'll most likely encounter along the way.", "url": "/matlab-vs-python/", "pub_date": "2019-09-09T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Matlab-vs-Python_Watermarked.78d19c0990ea.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Matlab-vs-Python_Watermarked.78d19c0990ea.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Matlab-vs-Python_Watermarked.78d19c0990ea.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Matlab-vs-Python_Watermarked.78d19c0990ea.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Matlab-vs-Python_Watermarked.78d19c0990ea.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["best-practices", "data-science", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 75, "kind": "post", "title": "An Effective Python Environment: Making Yourself at Home", "description": "This guide will walk you through the decisions you need to make when customizing your development environment for working with Python.", "url": "/effective-python-environment/", "pub_date": "2019-08-14T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Setting-Up-an-Effective-Terminal-Environment-for-Python-Development_Watermarked.856435b7bcb0.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Setting-Up-an-Effective-Terminal-Environment-for-Python-Development_Watermarked.856435b7bcb0.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Setting-Up-an-Effective-Terminal-Environment-for-Python-Development_Watermarked.856435b7bcb0.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Setting-Up-an-Effective-Terminal-Environment-for-Python-Development_Watermarked.856435b7bcb0.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Setting-Up-an-Effective-Terminal-Environment-for-Python-Development_Watermarked.856435b7bcb0.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 76, "kind": "post", "title": "Your Guide to the Python print() Function", "description": "In this step-by-step tutorial, you'll learn about the print() function in Python and discover some of its lesser-known features. Avoid common mistakes, take your \"hello world\" to the next level, and know when to use a better alternative.", "url": "/python-print/", "pub_date": "2019-08-12T14:00:00+00:00", "image_url": "https://files.realpython.com/media/The-Python-Print-Function_Watermarked.26066d64ad82.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/The-Python-Print-Function_Watermarked.26066d64ad82.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/The-Python-Print-Function_Watermarked.26066d64ad82.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/The-Python-Print-Function_Watermarked.26066d64ad82.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/The-Python-Print-Function_Watermarked.26066d64ad82.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 77, "kind": "post", "title": "Understanding the Python Traceback", "description": "In this step-by-step tutorial, you'll learn how to read and understand the information you can get from a Python traceback. You'll walk through several examples of tracebacks and see some of the most common tracebacks in Python.", "url": "/python-traceback/", "pub_date": "2019-07-29T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Understanding-Pythons-Traceback_Watermarked.138741dabfeb.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Understanding-Pythons-Traceback_Watermarked.138741dabfeb.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Understanding-Pythons-Traceback_Watermarked.138741dabfeb.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Understanding-Pythons-Traceback_Watermarked.138741dabfeb.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Understanding-Pythons-Traceback_Watermarked.138741dabfeb.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 78, "kind": "post", "title": "The Python Square Root Function", "description": "In this quick and practical tutorial, you'll learn what a square root is and how to calculate one in Python. You'll even see how you can use the Python square root function to solve a real-world problem.", "url": "/python-square-root-function/", "pub_date": "2019-07-08T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Pit-Stop-Articles_Red_Watermarked.868eed0ee07e.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 79, "kind": "post", "title": "Using the \"or\" Boolean Operator in Python", "description": "In this step-by-step tutorial, you'll learn how the Python \"or\" operator works and how to use it. You'll get to know its special features and see what kind of programming problems you can solve by using \"or\" in Python.", "url": "/python-or-operator/", "pub_date": "2019-07-03T14:00:00+00:00", "image_url": "https://files.realpython.com/media/The-Python-OR-Keyword_Watermarked.18e16a4721d8.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/The-Python-OR-Keyword_Watermarked.18e16a4721d8.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/The-Python-OR-Keyword_Watermarked.18e16a4721d8.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/The-Python-OR-Keyword_Watermarked.18e16a4721d8.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/The-Python-OR-Keyword_Watermarked.18e16a4721d8.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 80, "kind": "post", "title": "Basic Input, Output, and String Formatting in Python", "description": "In this step-by-step Python tutorial, you'll learn how to take user input from the keyboard with the built-in function input(), how to display output to the console with the built-in function print(), and how to format string data with Python f-strings.", "url": "/python-input-output/", "pub_date": "2019-06-24T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Basic-Input-Output-and-String-Formatting-in-Python_Watermarked.65ba5b535841.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Basic-Input-Output-and-String-Formatting-in-Python_Watermarked.65ba5b535841.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Basic-Input-Output-and-String-Formatting-in-Python_Watermarked.65ba5b535841.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Basic-Input-Output-and-String-Formatting-in-Python_Watermarked.65ba5b535841.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Basic-Input-Output-and-String-Formatting-in-Python_Watermarked.65ba5b535841.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 81, "kind": "post", "title": "How to Implement a Python Stack", "description": "In this tutorial, you'll learn how to implement a Python stack. You'll see how to recognize when a stack is a good choice for data structures, how to decide which implementation is best for a program, and what extra considerations to make about stacks in a threading or multiprocessing environment.", "url": "/how-to-implement-python-stack/", "pub_date": "2019-06-05T14:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Use-Stacks-in-Python_Watermarked.d22262707558.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Use-Stacks-in-Python_Watermarked.d22262707558.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Use-Stacks-in-Python_Watermarked.d22262707558.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Use-Stacks-in-Python_Watermarked.d22262707558.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Use-Stacks-in-Python_Watermarked.d22262707558.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 82, "kind": "post", "title": "Playing and Recording Sound in Python", "description": "In this tutorial, you'll learn about libraries that can be used for playing and recording sound in Python, such as PyAudio and python-sounddevice. You'll also see code snippets for playing and recording sound files and arrays, as well as for converting between different sound file formats.", "url": "/playing-and-recording-sound-python/", "pub_date": "2019-05-13T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Playing-and-Recording-Sound-in-Python_Watermarked.e9aac7628df3.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Playing-and-Recording-Sound-in-Python_Watermarked.e9aac7628df3.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Playing-and-Recording-Sound-in-Python_Watermarked.e9aac7628df3.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Playing-and-Recording-Sound-in-Python_Watermarked.e9aac7628df3.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Playing-and-Recording-Sound-in-Python_Watermarked.e9aac7628df3.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 83, "kind": "post", "title": "How to Use sorted() and sort() in Python", "description": "In this step-by-step tutorial, you\u2019ll learn how to sort in Python. You'll know how to sort various types of data in different data structures, customize the order, and work with two different ways of sorting in Python.", "url": "/python-sort/", "pub_date": "2019-05-06T14:00:00+00:00", "image_url": "https://files.realpython.com/media/The-Python-Sort-Function-Guide_Watermarked.394963ad7eff.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/The-Python-Sort-Function-Guide_Watermarked.394963ad7eff.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/The-Python-Sort-Function-Guide_Watermarked.394963ad7eff.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/The-Python-Sort-Function-Guide_Watermarked.394963ad7eff.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/The-Python-Sort-Function-Guide_Watermarked.394963ad7eff.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 84, "kind": "post", "title": "Python KeyError Exceptions and How to Handle Them", "description": "In this tutorial, you'll learn how to handle Python KeyError exceptions. They are often caused by a bad key lookup in a dictionary, but there are a few other situations when a KeyError can be raised as well. Knowing how to handle these exceptions is essential to writing good Python code.", "url": "/python-keyerror/", "pub_date": "2019-04-24T14:00:00+00:00", "image_url": "https://files.realpython.com/media/What-is-A-Python-KeyError_Watermarked.6bd397b3a5e9.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/What-is-A-Python-KeyError_Watermarked.6bd397b3a5e9.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/What-is-A-Python-KeyError_Watermarked.6bd397b3a5e9.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/What-is-A-Python-KeyError_Watermarked.6bd397b3a5e9.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/What-is-A-Python-KeyError_Watermarked.6bd397b3a5e9.jpg 1920w", "image_placeholder_color": "#ffc873", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 85, "kind": "post", "title": "How to Run Your Python Scripts", "description": "This step-by-step tutorial will guide you through a series of ways to run Python scripts, depending on your environment, platform, needs, and skills as a programmer.", "url": "/run-python-scripts/", "pub_date": "2019-02-18T06:00:00+00:00", "image_url": "https://files.realpython.com/media/How-to-Run-A-Python-Script_Watermarked.65fe32bf5487.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Run-A-Python-Script_Watermarked.65fe32bf5487.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Run-A-Python-Script_Watermarked.65fe32bf5487.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Run-A-Python-Script_Watermarked.65fe32bf5487.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Run-A-Python-Script_Watermarked.65fe32bf5487.jpg 1920w", "image_placeholder_color": "#e6c7ab", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 86, "kind": "post", "title": "Python \"for\" Loops (Definite Iteration)", "description": "In this introductory tutorial, you'll learn all about how to perform definite iteration with Python for loops. You\u2019ll see how other programming languages implement definite iteration, learn about iterables and iterators, and tie it all together to learn about Python\u2019s for loop.", "url": "/python-for-loop/", "pub_date": "2019-01-30T06:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-for-Loops-Definite-Iteration_Watermarked.9c0d36b6de30.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-for-Loops-Definite-Iteration_Watermarked.9c0d36b6de30.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-for-Loops-Definite-Iteration_Watermarked.9c0d36b6de30.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-for-Loops-Definite-Iteration_Watermarked.9c0d36b6de30.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-for-Loops-Definite-Iteration_Watermarked.9c0d36b6de30.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 87, "kind": "post", "title": "Working With Files in Python", "description": "In this tutorial, you'll learn how you can work with files in Python by using built-in modules to perform practical tasks that involve groups of files, like renaming them, moving them around, archiving them, and getting their metadata.", "url": "/working-with-files-in-python/", "pub_date": "2019-01-21T06:00:00+00:00", "image_url": "https://files.realpython.com/media/Practical-Recipes-for-Working-With-Multiple-Files-in-Python_Watermarked.4ff8c72dc712.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Practical-Recipes-for-Working-With-Multiple-Files-in-Python_Watermarked.4ff8c72dc712.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Practical-Recipes-for-Working-With-Multiple-Files-in-Python_Watermarked.4ff8c72dc712.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Practical-Recipes-for-Working-With-Multiple-Files-in-Python_Watermarked.4ff8c72dc712.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Practical-Recipes-for-Working-With-Multiple-Files-in-Python_Watermarked.4ff8c72dc712.jpg 1920w", "image_placeholder_color": "#e6c7ab", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 88, "kind": "post", "title": "Django Migrations: A Primer", "description": "In this tutorial, you\u2019ll get comfortable with Django migrations and learn how to create database tables without writing any SQL, how to automatically modify your database after you changed your models, and how to revert changes made to your database.", "url": "/django-migrations-a-primer/", "pub_date": "2019-01-09T12:10:21+00:00", "image_url": "https://files.realpython.com/media/Django-Migrations---A-Primer-Update_Watermarked.798eade8f3df.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Django-Migrations---A-Primer-Update_Watermarked.798eade8f3df.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Django-Migrations---A-Primer-Update_Watermarked.798eade8f3df.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Django-Migrations---A-Primer-Update_Watermarked.798eade8f3df.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Django-Migrations---A-Primer-Update_Watermarked.798eade8f3df.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["databases", "web-dev", "basics", "django"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 89, "kind": "post", "title": "Thonny: The Beginner-Friendly Python Editor", "description": "In this tutorial, you\u2019ll learn all about Thonny, a free Python Integrated Development Environment (IDE) that was especially designed with the beginner Pythonista in mind. It has a built-in debugger and allows you to do step-through expression evaluation.", "url": "/python-thonny/", "pub_date": "2018-12-12T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-Development-in-Thonny---In-Depth_Watermarked.411337d5c6ec.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Development-in-Thonny---In-Depth_Watermarked.411337d5c6ec.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Development-in-Thonny---In-Depth_Watermarked.411337d5c6ec.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Development-in-Thonny---In-Depth_Watermarked.411337d5c6ec.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Development-in-Thonny---In-Depth_Watermarked.411337d5c6ec.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 90, "kind": "post", "title": "Python \"while\" Loops (Indefinite Iteration)", "description": "In this tutorial, you'll learn about indefinite iteration using the Python while loop. You\u2019ll be able to construct basic and complex while loops, interrupt loop execution with break and continue, use the else clause with a while loop, and deal with infinite loops.", "url": "/python-while-loop/", "pub_date": "2018-11-07T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-while-Loops-Indefinite-Iteration_Watermarked.2dfa40d8e92c.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-while-Loops-Indefinite-Iteration_Watermarked.2dfa40d8e92c.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-while-Loops-Indefinite-Iteration_Watermarked.2dfa40d8e92c.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-while-Loops-Indefinite-Iteration_Watermarked.2dfa40d8e92c.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-while-Loops-Indefinite-Iteration_Watermarked.2dfa40d8e92c.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 91, "kind": "post", "title": "Writing Comments in Python (Guide)", "description": "Learn how to write Python comments that are clean, concise, and useful. Quickly get up to speed on what the best practices are, which types of comments it's best to avoid, and how you can practice writing cleaner comments.", "url": "/python-comments-guide/", "pub_date": "2018-11-05T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Writing-Comments-in-Python_Watermarked.7965c56060bc.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Writing-Comments-in-Python_Watermarked.7965c56060bc.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Writing-Comments-in-Python_Watermarked.7965c56060bc.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Writing-Comments-in-Python_Watermarked.7965c56060bc.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Writing-Comments-in-Python_Watermarked.7965c56060bc.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 92, "kind": "post", "title": "Setting Up Python for Machine Learning on Windows", "description": "In this step-by-step tutorial, you\u2019ll cover the basics of setting up a Python numerical computation environment for machine learning on a Windows machine using the Anaconda Python distribution.", "url": "/python-windows-machine-learning-setup/", "pub_date": "2018-10-31T14:00:00+00:00", "image_url": "https://files.realpython.com/media/A-Basic-Python-Setup-for-Machine-Learning-on-Windows_Watermarked.74516636f737.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/A-Basic-Python-Setup-for-Machine-Learning-on-Windows_Watermarked.74516636f737.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/A-Basic-Python-Setup-for-Machine-Learning-on-Windows_Watermarked.74516636f737.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/A-Basic-Python-Setup-for-Machine-Learning-on-Windows_Watermarked.74516636f737.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/A-Basic-Python-Setup-for-Machine-Learning-on-Windows_Watermarked.74516636f737.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["machine-learning", "data-science", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 93, "kind": "post", "title": "The Python range() Function (Guide)", "description": "Master the Python range() function, learn how its implementation differs in Python 3 vs 2, and see how you can use it to write faster and more Pythonic code.", "url": "/python-range/", "pub_date": "2018-10-15T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Pythons-range-function_Watermark.5e8ea929167e.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Pythons-range-function_Watermark.5e8ea929167e.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Pythons-range-function_Watermark.5e8ea929167e.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Pythons-range-function_Watermark.5e8ea929167e.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Pythons-range-function_Watermark.5e8ea929167e.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 94, "kind": "post", "title": "Splitting, Concatenating, and Joining Strings in Python", "description": "In this beginner-friendly article, you\u2019ll learn some of the most fundamental string operations: splitting, concatenating, and joining. Not only will you learn how to use these tools, but you\u2019ll walk away with a deeper understanding of how they work under the hood in Python.", "url": "/python-string-split-concatenate-join/", "pub_date": "2018-10-01T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Pythons-split-function--string-concatenation_Watermark.7eade0c24cf0.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Pythons-split-function--string-concatenation_Watermark.7eade0c24cf0.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Pythons-split-function--string-concatenation_Watermark.7eade0c24cf0.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Pythons-split-function--string-concatenation_Watermark.7eade0c24cf0.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Pythons-split-function--string-concatenation_Watermark.7eade0c24cf0.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 95, "kind": "post", "title": "The Best Python Books", "description": "Find the right books to help you get started with Python or take your coding to the next level with this detailed guide to the best Python books out there.", "url": "/best-python-books/", "pub_date": "2018-09-10T14:00:00+00:00", "image_url": "https://files.realpython.com/media/The-Best-Books-for-Python-Beginners_Watermarked.530f76514c63.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/The-Best-Books-for-Python-Beginners_Watermarked.530f76514c63.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/The-Best-Books-for-Python-Beginners_Watermarked.530f76514c63.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/The-Best-Books-for-Python-Beginners_Watermarked.530f76514c63.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/The-Best-Books-for-Python-Beginners_Watermarked.530f76514c63.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["intermediate", "basics", "community"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 96, "kind": "post", "title": "Conditional Statements in Python", "description": "In this step-by-step tutorial you'll learn how to work with conditional (\"if\") statements in Python. Master if-statements and see how to write complex decision making code in your programs.", "url": "/python-conditional-statements/", "pub_date": "2018-09-05T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Conditional-Statements-in-Python_Watermarked.b6b7d30ff62b.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Conditional-Statements-in-Python_Watermarked.b6b7d30ff62b.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Conditional-Statements-in-Python_Watermarked.b6b7d30ff62b.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Conditional-Statements-in-Python_Watermarked.b6b7d30ff62b.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Conditional-Statements-in-Python_Watermarked.b6b7d30ff62b.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 97, "kind": "post", "title": "Python Program Lexical Structure", "description": "In this tutorial you'll dig deeper into Python's lexical structure and start arranging code into more complex groupings. You'll learn about the syntactic elements that comprise statements, the basic units that make up a Python program.", "url": "/python-program-structure/", "pub_date": "2018-09-03T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-Program-Lexical-Structure_Watermarked.b21712995f2a.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Program-Lexical-Structure_Watermarked.b21712995f2a.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Program-Lexical-Structure_Watermarked.b21712995f2a.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Program-Lexical-Structure_Watermarked.b21712995f2a.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Program-Lexical-Structure_Watermarked.b21712995f2a.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 98, "kind": "post", "title": "Sets in Python", "description": "In this tutorial you'll learn how to work effectively with Python's set data type. You'll see how to define set objects in Python and discover the operations that they support and by the end of the tutorial you'll have a good feel for when a set is an appropriate choice in your own programs.", "url": "/python-sets/", "pub_date": "2018-08-20T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Sets-in-Python_Watermarked.cd8d2e9563c3.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Sets-in-Python_Watermarked.cd8d2e9563c3.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Sets-in-Python_Watermarked.cd8d2e9563c3.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Sets-in-Python_Watermarked.cd8d2e9563c3.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Sets-in-Python_Watermarked.cd8d2e9563c3.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 99, "kind": "post", "title": "Dictionaries in Python", "description": "In this Python dictionaries tutorial, you'll cover the basic characteristics and learn how to access and manage dictionary data. Once you have finished this tutorial, you should have a good sense of when a dictionary is the appropriate data type to use, and how to do so.", "url": "/python-dicts/", "pub_date": "2018-08-06T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Dictionaries-in-Python_Watermarked.3656a2293c00.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Dictionaries-in-Python_Watermarked.3656a2293c00.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Dictionaries-in-Python_Watermarked.3656a2293c00.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Dictionaries-in-Python_Watermarked.3656a2293c00.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Dictionaries-in-Python_Watermarked.3656a2293c00.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 100, "kind": "post", "title": "Lists and Tuples in Python", "description": "You'll cover the important characteristics of lists and tuples in Python 3. You'll learn how to define them and how to manipulate them. When you're finished, you should have a good feel for when and how to use these object types in a Python program.", "url": "/python-lists-tuples/", "pub_date": "2018-07-18T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Lists-and-Tuples-in-Python_Watermarked.4d655c81a78b.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Lists-and-Tuples-in-Python_Watermarked.4d655c81a78b.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Lists-and-Tuples-in-Python_Watermarked.4d655c81a78b.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Lists-and-Tuples-in-Python_Watermarked.4d655c81a78b.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Lists-and-Tuples-in-Python_Watermarked.4d655c81a78b.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 101, "kind": "post", "title": "Strings and Character Data in Python", "description": "In this tutorial you'll learn how to use Python's rich set of operators, functions, and methods for working with strings. You'll learn how to access and extract portions of strings, and also become familiar with the methods that are available to manipulate and modify string data in Python 3.", "url": "/python-strings/", "pub_date": "2018-07-09T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Strings-and-Character-Data-in-Python_Watermarked.797803948b10.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Strings-and-Character-Data-in-Python_Watermarked.797803948b10.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Strings-and-Character-Data-in-Python_Watermarked.797803948b10.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Strings-and-Character-Data-in-Python_Watermarked.797803948b10.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Strings-and-Character-Data-in-Python_Watermarked.797803948b10.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 102, "kind": "post", "title": "Python String Formatting Best Practices", "description": "Learn the four main approaches to string formatting in Python, as well as their strengths and weaknesses. You'll also get a simple rule of thumb for how to pick the best general purpose string formatting approach in your own programs.", "url": "/python-string-formatting/", "pub_date": "2018-07-04T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-String-Formatting-Tutorial_Watermarked.91a5ecc29d33.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-String-Formatting-Tutorial_Watermarked.91a5ecc29d33.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-String-Formatting-Tutorial_Watermarked.91a5ecc29d33.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-String-Formatting-Tutorial_Watermarked.91a5ecc29d33.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-String-Formatting-Tutorial_Watermarked.91a5ecc29d33.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["python", "best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 103, "kind": "post", "title": "Python Histogram Plotting: NumPy, Matplotlib, pandas & Seaborn", "description": "In this tutorial, you'll be equipped to make production-quality, presentation-ready Python histogram plots with a range of choices and features. It's your one-stop shop for constructing & manipulating histograms with Python's scientific stack.", "url": "/python-histograms/", "pub_date": "2018-07-02T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python_Histograms_Watermark.c4daed2c983b.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python_Histograms_Watermark.c4daed2c983b.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python_Histograms_Watermark.c4daed2c983b.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python_Histograms_Watermark.c4daed2c983b.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python_Histograms_Watermark.c4daed2c983b.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["data-science", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 104, "kind": "post", "title": "Operators and Expressions in Python", "description": "You'll see how calculations can be performed on objects in Python. By the end of this tutorial, you will be able to create complex expressions by combining Python objects and operators.", "url": "/python-operators-expressions/", "pub_date": "2018-06-20T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Operators-and-Expressions-in-Python_Watermarked.651045da4031.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Operators-and-Expressions-in-Python_Watermarked.651045da4031.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Operators-and-Expressions-in-Python_Watermarked.651045da4031.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Operators-and-Expressions-in-Python_Watermarked.651045da4031.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Operators-and-Expressions-in-Python_Watermarked.651045da4031.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 105, "kind": "post", "title": "Variables in Python", "description": "Learn how every item of data in a Python program can be described by the abstract term \"object,\" and how to manipulate objects using symbolic names called \"variables.\"", "url": "/python-variables/", "pub_date": "2018-06-12T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Variables-in-Python_Watermarked.3868fbf92e1d.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Variables-in-Python_Watermarked.3868fbf92e1d.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Variables-in-Python_Watermarked.3868fbf92e1d.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Variables-in-Python_Watermarked.3868fbf92e1d.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Variables-in-Python_Watermarked.3868fbf92e1d.jpg 1920w", "image_placeholder_color": "#ffc873", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 106, "kind": "post", "title": "Basic Data Types in Python", "description": "Learn the basic data types that are built into Python, like numbers, strings, and Booleans. You'll also get an overview of Python's built-in functions.", "url": "/python-data-types/", "pub_date": "2018-06-05T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Basic-Data-Types-in-Python_Watermarked.e3dd34457952.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Basic-Data-Types-in-Python_Watermarked.e3dd34457952.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Basic-Data-Types-in-Python_Watermarked.e3dd34457952.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Basic-Data-Types-in-Python_Watermarked.e3dd34457952.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Basic-Data-Types-in-Python_Watermarked.e3dd34457952.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 107, "kind": "post", "title": "Python Application Layouts: A Reference", "description": "A reference guide to common Python application layouts and project structures for command-line applications, web applications, and more.", "url": "/python-application-layouts/", "pub_date": "2018-06-04T14:00:00+00:00", "image_url": "https://files.realpython.com/media/python_application_layout_watermark.31a037620d92.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/python_application_layout_watermark.31a037620d92.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/python_application_layout_watermark.31a037620d92.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/python_application_layout_watermark.31a037620d92.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/python_application_layout_watermark.31a037620d92.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["best-practices", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 108, "kind": "post", "title": "Interacting With Python", "description": "How to actually execute Python code and run Python programs using the CPython REPL, executing script files, and integrated development environments.", "url": "/interacting-with-python/", "pub_date": "2018-05-28T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Interacting-with-Python_Watermarked.0007ad8964b8.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Interacting-with-Python_Watermarked.0007ad8964b8.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Interacting-with-Python_Watermarked.0007ad8964b8.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Interacting-with-Python_Watermarked.0007ad8964b8.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Interacting-with-Python_Watermarked.0007ad8964b8.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 109, "kind": "post", "title": "Introduction to Python 3", "description": "An overview of the Python programming language, including a brief history of the development of Python\r\nand reasons why you might select Python as your language of choice.", "url": "/python-introduction/", "pub_date": "2018-05-21T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Introduction-to-Python-3_Watermarked.9d8dfef30c96.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Introduction-to-Python-3_Watermarked.9d8dfef30c96.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Introduction-to-Python-3_Watermarked.9d8dfef30c96.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Introduction-to-Python-3_Watermarked.9d8dfef30c96.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Introduction-to-Python-3_Watermarked.9d8dfef30c96.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 110, "kind": "post", "title": "Python 3's f-Strings: An Improved String Formatting Syntax (Guide)", "description": "As of Python 3.6, f-strings are a great new way to format strings. Not only are they more readable, more concise, and less prone to error than other ways of formatting, but they are also faster! By the end of this article, you will learn how and why to start using f-strings today.", "url": "/python-f-strings/", "pub_date": "2018-05-14T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-f-Strings-Guide_Watermark.2c8be8b1d392.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-f-Strings-Guide_Watermark.2c8be8b1d392.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-f-Strings-Guide_Watermark.2c8be8b1d392.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-f-Strings-Guide_Watermark.2c8be8b1d392.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-f-Strings-Guide_Watermark.2c8be8b1d392.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 111, "kind": "post", "title": "Python Exceptions: An Introduction", "description": "In this beginner tutorial you'll learn what exceptions are good for in Python. You'll see how to raise exceptions and how to handle them with \"try/except\" blocks.", "url": "/python-exceptions/", "pub_date": "2018-04-30T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python_Exceptions_Watermark.47f814fbeced.jpg 1920w", "image_placeholder_color": "#ffc873", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 112, "kind": "post", "title": "Python Modules and Packages \u2013 An Introduction", "description": "This article explores Python modules and Python packages, two mechanisms that facilitate modular programming.", "url": "/python-modules-packages/", "pub_date": "2018-04-17T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-Modules-and-Packages-An-Introduction_Watermarked.20936240a94d.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Modules-and-Packages-An-Introduction_Watermarked.20936240a94d.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Modules-and-Packages-An-Introduction_Watermarked.20936240a94d.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Modules-and-Packages-An-Introduction_Watermarked.20936240a94d.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Modules-and-Packages-An-Introduction_Watermarked.20936240a94d.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["python", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 113, "kind": "post", "title": "Introduction to Git and GitHub for Python Developers", "description": "What is Git,  what is GitHub, and what's the difference? Learn the basics of Git and GitHub from the perspective of a Pythonista in this tutorial.", "url": "/python-git-github-intro/", "pub_date": "2018-04-04T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Introduction-to-Git-and-GitHub-for-Python-Developers_Watermarked.bac76b62671a.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Introduction-to-Git-and-GitHub-for-Python-Developers_Watermarked.bac76b62671a.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Introduction-to-Git-and-GitHub-for-Python-Developers_Watermarked.bac76b62671a.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Introduction-to-Git-and-GitHub-for-Python-Developers_Watermarked.bac76b62671a.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Introduction-to-Git-and-GitHub-for-Python-Developers_Watermarked.bac76b62671a.jpg 1920w", "image_placeholder_color": "#ffc873", "categories": ["basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 114, "kind": "post", "title": "11 Beginner Tips for Learning Python Programming", "description": "In this article, you'll see several learning strategies and tips that will help jump start your journey of becoming a rockstar Python programmer.", "url": "/python-beginner-tips/", "pub_date": "2018-04-03T14:00:00+00:00", "image_url": "https://files.realpython.com/media/python-beginner-tips.50f5f0c4e739.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/python-beginner-tips.50f5f0c4e739.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/python-beginner-tips.50f5f0c4e739.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/python-beginner-tips.50f5f0c4e739.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/python-beginner-tips.50f5f0c4e739.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 115, "kind": "post", "title": "Python IDEs and Code Editors (Guide)", "description": "Find your perfect Python development setup with this review of Python IDEs and code editors, including recommendations and screen shots.", "url": "/python-ides-code-editors-guide/", "pub_date": "2018-03-13T21:40:51+00:00", "image_url": "https://files.realpython.com/media/editors_art.ecb35ec44fce.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/editors_art.ecb35ec44fce.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/editors_art.ecb35ec44fce.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/editors_art.ecb35ec44fce.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/editors_art.ecb35ec44fce.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 116, "kind": "post", "title": "Python Project for Beginners: Bitcoin Price Notifications", "description": "Build your own Bitcoin price notification service with Python and IFTTT. This tutorial is a project-based exercise for beginners looking to improve their Python coding skills by building a small real-world app.", "url": "/python-bitcoin-ifttt/", "pub_date": "2018-03-08T07:00:00+00:00", "image_url": "https://files.realpython.com/media/Python-Project-for-Beginners-Bitcoin-Price-Notifications_Watermarked.d4aea70af900.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Project-for-Beginners-Bitcoin-Price-Notifications_Watermarked.d4aea70af900.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Project-for-Beginners-Bitcoin-Price-Notifications_Watermarked.d4aea70af900.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Project-for-Beginners-Bitcoin-Price-Notifications_Watermarked.d4aea70af900.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Project-for-Beginners-Bitcoin-Price-Notifications_Watermarked.d4aea70af900.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["web-dev", "basics", "projects"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 117, "kind": "post", "title": "Python Plotting With Matplotlib (Guide)", "description": "This article is a beginner-to-intermediate-level walkthrough on Python and matplotlib that mixes theory with example.", "url": "/python-matplotlib-guide/", "pub_date": "2018-02-28T14:00:00+00:00", "image_url": "https://files.realpython.com/media/Python_Plotting_With_Matplotlib_Watermark.610acdacc476.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python_Plotting_With_Matplotlib_Watermark.610acdacc476.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python_Plotting_With_Matplotlib_Watermark.610acdacc476.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python_Plotting_With_Matplotlib_Watermark.610acdacc476.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python_Plotting_With_Matplotlib_Watermark.610acdacc476.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["data-science", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 118, "kind": "post", "title": "Python Programming Challenge \u2013 First to Five", "description": "Come take part in a programming challenge to test your logic skills and abilities.", "url": "/python-programming-contest-first-to-five/", "pub_date": "2015-09-21T13:47:22+00:00", "image_url": "/static/real-python-placeholder-4.d9524cd39927.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/static/real-python-placeholder-4.d9524cd39927.jpg 480w, /cdn-cgi/image/width=640,format=auto/static/real-python-placeholder-4.d9524cd39927.jpg 640w, /cdn-cgi/image/width=960,format=auto/static/real-python-placeholder-4.d9524cd39927.jpg 960w, /static/real-python-placeholder-4.d9524cd39927.jpg 1920w", "image_placeholder_color": "#e6e6e6", "categories": ["community", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 119, "kind": "post", "title": "Scaffold a Flask Project", "description": "This article details how to build a scaffolding tool used to generate a Flask boilerplate.", "url": "/scaffold-a-flask-project/", "pub_date": "2015-04-27T13:52:16+00:00", "image_url": "https://files.realpython.com/media/Scaffold-a-Flask-Project_Watermarked.43914994c9ec.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Scaffold-a-Flask-Project_Watermarked.43914994c9ec.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Scaffold-a-Flask-Project_Watermarked.43914994c9ec.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Scaffold-a-Flask-Project_Watermarked.43914994c9ec.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Scaffold-a-Flask-Project_Watermarked.43914994c9ec.jpg 1920w", "image_placeholder_color": "#ff7e74", "categories": ["web-dev", "basics", "flask"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 120, "kind": "post", "title": "Analyzing Obesity in England With Python", "description": "Let's look at using Python and Pandas to perform data analysis on obesity in England.", "url": "/analyzing-obesity-in-england-with-python/", "pub_date": "2015-03-13T13:36:19+00:00", "image_url": "/static/real-python-placeholder-4.d9524cd39927.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/static/real-python-placeholder-4.d9524cd39927.jpg 480w, /cdn-cgi/image/width=640,format=auto/static/real-python-placeholder-4.d9524cd39927.jpg 640w, /cdn-cgi/image/width=960,format=auto/static/real-python-placeholder-4.d9524cd39927.jpg 960w, /static/real-python-placeholder-4.d9524cd39927.jpg 1920w", "image_placeholder_color": "#e6e6e6", "categories": ["data-science", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 121, "kind": "post", "title": "Flask by Example \u2013 Updating the UI", "description": "In this part of the Flask by Example series, we'll update the user interface to make it more user friendly.", "url": "/flask-by-example-updating-the-ui/", "pub_date": "2015-02-24T15:50:42+00:00", "image_url": "https://files.realpython.com/media/Flask-by-Example-Updating-the-UI_Watermarked.c466bb5f8ac3.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Flask-by-Example-Updating-the-UI_Watermarked.c466bb5f8ac3.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Flask-by-Example-Updating-the-UI_Watermarked.c466bb5f8ac3.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Flask-by-Example-Updating-the-UI_Watermarked.c466bb5f8ac3.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Flask-by-Example-Updating-the-UI_Watermarked.c466bb5f8ac3.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["web-dev", "basics", "front-end", "flask"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 122, "kind": "post", "title": "Setting Up Sublime Text 3 for Full Stack Python Development", "description": "This article details how to set up Sublime Text for full stack Python development.", "url": "/setting-up-sublime-text-3-for-full-stack-python-development/", "pub_date": "2014-08-11T13:24:04+00:00", "image_url": "https://files.realpython.com/media/Setting-Up-Sublime-Text-3-for-Full-Stack-Python-Development_Watermarked.2cf294b0b61e.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Setting-Up-Sublime-Text-3-for-Full-Stack-Python-Development_Watermarked.2cf294b0b61e.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Setting-Up-Sublime-Text-3-for-Full-Stack-Python-Development_Watermarked.2cf294b0b61e.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Setting-Up-Sublime-Text-3-for-Full-Stack-Python-Development_Watermarked.2cf294b0b61e.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Setting-Up-Sublime-Text-3-for-Full-Stack-Python-Development_Watermarked.2cf294b0b61e.jpg 1920w", "image_placeholder_color": "#abe0e6", "categories": ["basics", "tools"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 123, "kind": "post", "title": "Discover Flask, Part 2 \u2013 Creating a Login Page", "description": "In Part 2 of this series on the Flask framework, we'll set up a basic login page.", "url": "/introduction-to-flask-part-2-creating-a-login-page/", "pub_date": "2014-06-06T19:52:26+00:00", "image_url": "https://files.realpython.com/media/Discover-Flask-Part-2-Creating-a-Login-Page_Watermarked.bb23a84a8760.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Discover-Flask-Part-2-Creating-a-Login-Page_Watermarked.bb23a84a8760.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Discover-Flask-Part-2-Creating-a-Login-Page_Watermarked.bb23a84a8760.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Discover-Flask-Part-2-Creating-a-Login-Page_Watermarked.bb23a84a8760.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Discover-Flask-Part-2-Creating-a-Login-Page_Watermarked.bb23a84a8760.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["web-dev", "basics", "flask"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 124, "kind": "post", "title": "Discover Flask, Part 1 \u2013 Setting Up a Static Site", "description": "In Part 1 of this series on the Flask framework, we'll set up a basic project structure then develop a static site, styled with Bootstrap.", "url": "/introduction-to-flask-part-1-setting-up-a-static-site/", "pub_date": "2014-06-04T19:22:03+00:00", "image_url": "https://files.realpython.com/media/Discover-Flask-Part-1-Setting-Up-a-Static-Site_Watermarked.dede921fbe78.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Discover-Flask-Part-1-Setting-Up-a-Static-Site_Watermarked.dede921fbe78.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Discover-Flask-Part-1-Setting-Up-a-Static-Site_Watermarked.dede921fbe78.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Discover-Flask-Part-1-Setting-Up-a-Static-Site_Watermarked.dede921fbe78.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Discover-Flask-Part-1-Setting-Up-a-Static-Site_Watermarked.dede921fbe78.jpg 1920w", "image_placeholder_color": "#e5c5ac", "categories": ["web-dev", "basics", "flask"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 125, "kind": "post", "title": "Django 1.6 Test Driven Development", "description": "In this tutorial, we look at test driven development in Django", "url": "/django-1-6-test-driven-development/", "pub_date": "2013-12-20T17:38:18+00:00", "image_url": "https://files.realpython.com/media/tdd.0904607f8ec9.png", "image_srcset": "/cdn-cgi/image/width=101,format=auto/https://files.realpython.com/media/tdd.0904607f8ec9.png 101w, /cdn-cgi/image/width=135,format=auto/https://files.realpython.com/media/tdd.0904607f8ec9.png 135w, /cdn-cgi/image/width=203,format=auto/https://files.realpython.com/media/tdd.0904607f8ec9.png 203w, /cdn-cgi/image/width=407,format=auto/https://files.realpython.com/media/tdd.0904607f8ec9.png 407w", "image_placeholder_color": "#ffffff", "categories": ["web-dev", "basics", "django", "testing"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 126, "kind": "post", "title": "An Effective Sales Page with Bootstrap 3", "description": "In this tutorial, we'll be looking at Bootstrap 3 and how to customize it to create a nice landing page.", "url": "/an-effective-sales-page-with-bootstrap-3/", "pub_date": "2013-10-01T15:05:14+00:00", "image_url": "/static/real-python-placeholder-1.909137364508.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/static/real-python-placeholder-1.909137364508.jpg 480w, /cdn-cgi/image/width=640,format=auto/static/real-python-placeholder-1.909137364508.jpg 640w, /cdn-cgi/image/width=960,format=auto/static/real-python-placeholder-1.909137364508.jpg 960w, /static/real-python-placeholder-1.909137364508.jpg 1920w", "image_placeholder_color": "#e6e6e6", "categories": ["web-dev", "basics", "front-end"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 127, "kind": "post", "title": "Getting Started with Bootstrap 3", "description": "In this tutorial, we'll be looking at Bootstrap 3 and how to customize it using HTML and CSS.", "url": "/getting-started-with-bootstrap-3/", "pub_date": "2013-09-13T14:04:00+00:00", "image_url": "/static/real-python-placeholder-4.d9524cd39927.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/static/real-python-placeholder-4.d9524cd39927.jpg 480w, /cdn-cgi/image/width=640,format=auto/static/real-python-placeholder-4.d9524cd39927.jpg 640w, /cdn-cgi/image/width=960,format=auto/static/real-python-placeholder-4.d9524cd39927.jpg 960w, /static/real-python-placeholder-4.d9524cd39927.jpg 1920w", "image_placeholder_color": "#e6e6e6", "categories": ["web-dev", "basics", "front-end"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 128, "kind": "post", "title": "Python Web Applications with Flask \u2013 Part I", "description": "In this part of our series on Building a Web Application with Flask we'll set up our application.", "url": "/python-web-applications-with-flask-part-i/", "pub_date": "2013-08-14T03:22:01+00:00", "image_url": "https://files.realpython.com/media/Python-Web-Applications-with-Flask--Part-I_Watermarked.954de142326a.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Python-Web-Applications-with-Flask--Part-I_Watermarked.954de142326a.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Python-Web-Applications-with-Flask--Part-I_Watermarked.954de142326a.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Python-Web-Applications-with-Flask--Part-I_Watermarked.954de142326a.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Python-Web-Applications-with-Flask--Part-I_Watermarked.954de142326a.jpg 1920w", "image_placeholder_color": "#b9abe6", "categories": ["web-dev", "basics", "flask"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 129, "kind": "post", "title": "Testing in Django (Part 1) \u2013 Best Practices and Examples", "description": "In this tutorial, we look at the basics of unit testing in Django", "url": "/testing-in-django-part-1-best-practices-and-examples/", "pub_date": "2013-08-06T02:33:56+00:00", "image_url": "https://files.realpython.com/media/Testing-in-Django-Part-1-Best-Practices-and-Examples_Watermarked.f8e9ef995a32.jpg", "image_srcset": "/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Testing-in-Django-Part-1-Best-Practices-and-Examples_Watermarked.f8e9ef995a32.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Testing-in-Django-Part-1-Best-Practices-and-Examples_Watermarked.f8e9ef995a32.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Testing-in-Django-Part-1-Best-Practices-and-Examples_Watermarked.f8e9ef995a32.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Testing-in-Django-Part-1-Best-Practices-and-Examples_Watermarked.f8e9ef995a32.jpg 1920w", "image_placeholder_color": "#abe5b2", "categories": ["best-practices", "web-dev", "django", "testing", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}, {"key": 130, "kind": "post", "title": "Developing with Bottle", "description": "Let's look at how to create a basic application with Bottle", "url": "/developing-with-bottle-part-1/", "pub_date": "2013-06-18T02:33:19+00:00", "image_url": "https://files.realpython.com/media/bottle-logo.4c5ab3d2ae78.png", "image_srcset": "/cdn-cgi/image/width=50,format=auto/https://files.realpython.com/media/bottle-logo.4c5ab3d2ae78.png 50w, /cdn-cgi/image/width=66,format=auto/https://files.realpython.com/media/bottle-logo.4c5ab3d2ae78.png 66w, /cdn-cgi/image/width=100,format=auto/https://files.realpython.com/media/bottle-logo.4c5ab3d2ae78.png 100w, /cdn-cgi/image/width=200,format=auto/https://files.realpython.com/media/bottle-logo.4c5ab3d2ae78.png 200w", "image_placeholder_color": "#ffffff", "categories": ["web-dev", "basics"], "rank": 0.0, "bookmarked": false, "progress": 0.0, "viewed_at": "1970-01-01T00:00:01+00:00", "completed": false, "in_progress": false}]