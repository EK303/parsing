[
  {
    "id": 1,
    "title": "Python's del: Remove References From Scopes and Containers",
    "url": "https://realpython.com/python-del-statement/",
    "pub_date": null,
    "tags": [
      "python",
      "best-practices",
      "basics"
    ],
    "description": "In this tutorial, you'll learn how Python's del statement works and how to use it in your code. This statement will allow you to remove references from different scopes, items from lists, keys from dictionaries, and members from classes. This will lead to potentially memory-efficient code.",
    "text": "Getting to Know Python\u2019s del Statement\n Python\u2019s del statement allows you to remove references to objects from a given namespace or container type. It performs an operation that\u2019s the opposite of what an assignment statement does. It\u2019s sort of an unassignment statement that allows you to unbind one or more names from their referenced objects.This is a natural feature to have in Python. If you can create a variable by writing variable = value, then you must have the option to undo this operation by deleting variable. That\u2019s where del comes on the scene.The del statement can come in handy in different coding situations, such as:Of course, this list is incomplete. You may find some other appropriate use cases for this statement. In this tutorial, you\u2019ll learn how the del statement works and how to use it in your code. To kick things off, you\u2019ll start by learning the general syntax of del in Python.A Python del statement consists of the del keyword, followed by a comma-separated series of references.Note: In this tutorial, you\u2019ll use the term reference to generically designate names or identifiers that can hold references to objects in Python.Here\u2019s the general syntax of the del statement in Python:The del statement allows you to remove one or more references from a given namespace. It also lets you delete data from mutable container types, such as lists and dictionaries.You\u2019ll often use this statement with a single argument. However, it also supports a series of arguments separated by commas.In the above construct, reference_* represents any kind of identifier that can hold references to concrete objects stored in memory. In practice, these references can include:You can use any of these references as arguments to del. If you use a comma-separated series of arguments, then keep in mind that del operates on every argument sequentially from left to right. This behavior can be risky when you\u2019re removing items from lists, as you\u2019ll learn later in this tutorial.Here\u2019s a quick example of using del to remove a variable:Once you\u2019ve run the del statement, the variable greeting is no longer available. If you try to access greeting, then you get a NameError because that variable doesn\u2019t exist anymore.Removing reference holders like variables is the primary goal of del. This statement doesn\u2019t remove objects. In the following section, you\u2019ll dive deeper into the actual and immediate effects of running a del statement.Unlock This Article\nAlready a member? Sign-In\n",
    "preview": false,
    "links": [
      "#getting-to-know-pythons-del-statement",
      "#learning-the-del-syntax",
      "#understanding-the-effects-of-del",
      "#unraveling-del-vs-garbage-collection",
      "#using-del-vs-assigning-none",
      "#deleting-names-from-a-scope",
      "#removing-items-from-mutable-collections",
      "#deleting-items-from-a-list",
      "#deleting-a-slice-from-a-list",
      "#removing-keys-from-dictionaries",
      "#removing-items-from-mutable-nested-collections",
      "#deleting-members-from-custom-classes",
      "#removing-class-members-a-generic-example",
      "#removing-an-instance-attribute-a-practical-example",
      "#preventing-attribute-deletion-in-custom-classes",
      "#conclusion",
      "https://realpython.com/python-data-types/",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python3-object-oriented-programming/",
      "https://realpython.com/bonus/python-del-statement-code/",
      "#getting-to-know-pythons-del-statement",
      "https://docs.python.org/3/reference/simple_stmts.html#the-del-statement",
      "https://realpython.com/python-namespaces-scope/",
      "https://realpython.com/python-assignment-operator/",
      "https://realpython.com/python-variables/",
      "#learning-the-del-syntax",
      "https://realpython.com/python-keywords/",
      "https://realpython.com/python-mutable-vs-immutable-types/#mutable-built-in-data-types-in-python",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/python-modules-packages/",
      "https://docs.python.org/3/glossary.html#term-sequence",
      "#deleting-items-from-a-list",
      "/account/join/?utm_source=rp_article_preview&utm_content=python-del-statement",
      "/account/login/",
      "/account/join/?utm_source=rp_article_preview&utm_content=python-del-statement",
      "/account/login/"
    ]
  },
  {
    "id": 2,
    "title": "How to Read Python Input as Integers",
    "url": "https://realpython.com/python-input-integer/",
    "pub_date": null,
    "tags": [
      "basics"
    ],
    "description": "In this tutorial, you'll learn how to use Python to get integer input from the user while handling any errors resulting from non-numeric input. This will involve coding your own reusable function built around input().",
    "text": "Dealing With Invalid Input\n You\u2019ve probably already noticed that the above code is hopelessly optimistic. You can\u2019t always rely on users to provide the kind of input that you expect. You can help a lot by providing an explicit prompt message, but through confusion, carelessness, or malice, there\u2019ll always be users who provide invalid input. Your program should be ready to deal with any kind of text.Unlock This Article\nAlready a member? Sign-In\n",
    "preview": false,
    "links": [
      "#how-to-get-integer-input-values-in-python",
      "#dealing-with-invalid-input",
      "#filtering-your-input-for-valid-integers",
      "#creating-a-utility-function-to-read-valid-integers",
      "#conclusion",
      "#next-steps",
      "https://realpython.com/bonus/python-input-integer-code/",
      "#how-to-get-integer-input-values-in-python",
      "https://realpython.com/python-input-output/#reading-input-from-the-keyboard",
      "https://realpython.com/python-exec/#avoiding-input-from-untrusted-sources",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-numbers/#integers",
      "https://realpython.com/python-print/",
      "https://docs.python.org/3/library/functions.html#int",
      "#dealing-with-invalid-input",
      "/account/join/?utm_source=rp_article_preview&utm_content=python-input-integer",
      "/account/login/",
      "/account/join/?utm_source=rp_article_preview&utm_content=python-input-integer",
      "/account/login/"
    ]
  },
  {
    "id": 3,
    "title": "The Terminal: First Steps and Useful Commands",
    "url": "https://realpython.com/terminal-commands/",
    "pub_date": "2023-02-22T14:00:00+00:00",
    "tags": [
      "basics",
      "tools"
    ],
    "description": "The terminal is an essential tool in your journey as a Python developer.\r\nThis tutorial helps you to get started with the terminal, pip, and Git by showcasing interesting commands that you can incorporate into your workflow.",
    "text": "Conclusion\n When you\u2019re comfortable using the terminal, then you\u2019ll probably be able to navigate your file system faster and with more control than when using your mouse and clicking buttons.In this tutorial, you\u2019ve learned how to:You\u2019ve boosted your programming skills by learning how to do three really important tasks in the terminal: navigate the file system, manage Python packages with pip, and make commits to Git. Learning terminal commands is a great investment for you as a Python developer. Just take your time and get to know this powerful tool step by step. Soon enough, it\u2019ll be an important tool in your repertoire that you can\u2019t live without.How important is the terminal for your workflow as a Python developer? Are there any essential commands that you would add to the tutorial? Let the Real Python community know in the comments below!Free Download: Click here to get a free cheat sheet of useful commands to get you started working with the terminal.",
    "preview": false,
    "links": [
      "#install-and-open-the-terminal",
      "#windows",
      "#linux",
      "#macos",
      "#learn-basic-terminal-commands",
      "#navigate-your-file-system",
      "#create-files-and-folders",
      "#manage-packages-with-pip",
      "#create-a-virtual-environment",
      "#install-a-package",
      "#interact-with-git",
      "#initiate-a-git-repository",
      "#track-files-with-git",
      "#next-steps",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/bonus/terminal-commands-cheat-sheet/",
      "#install-and-open-the-terminal",
      "https://en.wikipedia.org/wiki/Computer_terminal",
      "https://en.wikipedia.org/wiki/terminal_emulator",
      "https://en.wikipedia.org/wiki/Cmd.exe",
      "/account/join/",
      "#windows",
      "https://apps.microsoft.com/store/detail/windows-terminal/9N0DX20HK701",
      "https://github.com/microsoft/terminal",
      "https://realpython.com/python-coding-setup-windows/",
      "https://realpython.com/python-coding-setup-windows/#installing-windows-terminal",
      "https://files.realpython.com/media/win-10-setup-14-windows-powershell_-_cropped.f114376b1071.png",
      "#linux",
      "https://files.realpython.com/media/linux-terminal.28e537154512.png",
      "#macos",
      "https://support.apple.com/en-us/guide/mac-help/mchlp1008/mac",
      "https://files.realpython.com/media/macos-terminal.9764cd36cc33.png",
      "https://realpython.com/python-input-output/",
      "#learn-basic-terminal-commands",
      "https://en.wikipedia.org/wiki/Bash_(Unix_shell)",
      "https://en.wikipedia.org/wiki/Z_shell",
      "https://en.wikipedia.org/wiki/PowerShell",
      "https://learn.microsoft.com/en-us/powershell/scripting/powershell-commands?view=powershell-7.3",
      "#windows-1",
      "#linux-macos-1",
      "https://realpython.com/command-line-interfaces-python-argparse/",
      "/account/join/",
      "#navigate-your-file-system",
      "#windows-2",
      "#linux-macos-2",
      "https://en.wikipedia.org/wiki/File-system_permissions#Notation_of_traditional_Unix_permissions",
      "#windows-3",
      "#linux-macos-3",
      "/account/join/",
      "#create-files-and-folders",
      "#windows-4",
      "#linux-macos-4",
      "#windows-5",
      "#linux-macos-5",
      "https://realpython.com/python-print/",
      "https://realpython.com/run-python-scripts/",
      "https://realpython.com/add-python-to-path/",
      "https://realpython.com/interacting-with-python/",
      "https://realpython.com/python-repl/",
      "https://realpython.com/python311-error-messages/",
      "/account/join/",
      "#manage-packages-with-pip",
      "https://realpython.com/what-is-pip/",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "#create-a-virtual-environment",
      "https://docs.python.org/3/library/venv.html",
      "#windows-6",
      "#linux-macos-6",
      "#install-a-package",
      "https://rich.readthedocs.io/en/stable/introduction.html",
      "https://realpython.com/interview-will-mcgugan/",
      "https://files.realpython.com/media/python-rich-example.a5212b91d9b6.png",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://realpython.com/what-is-pip/",
      "/account/join/",
      "#interact-with-git",
      "https://git-scm.com",
      "https://git-scm.com/downloads/guis",
      "#initiate-a-git-repository",
      "https://git-scm.com/downloads",
      "https://github.com/github/gitignore",
      "https://github.com/github/gitignore/blob/main/Python.gitignore",
      "/account/join/",
      "#track-files-with-git",
      "https://realpython.com/python-git-github-intro/",
      "https://realpython.com/advanced-git-for-pythonistas/",
      "#next-steps",
      "https://realpython.com/python-quiz-application/",
      "https://realpython.com/site-connectivity-checker-python/",
      "https://realpython.com/python-typer-cli/",
      "https://realpython.com/directory-tree-generator-python/",
      "https://realpython.com/build-a-python-weather-app-cli/",
      "https://realpython.com/python-wordle-clone/",
      "https://realpython.com/tutorials/django/",
      "https://realpython.com/tutorials/flask/",
      "https://realpython.com/dependency-management-python-poetry/",
      "https://realpython.com/python-testing/",
      "https://realpython.com/django-hosting-on-heroku/",
      "https://realpython.com/python-print/",
      "https://realpython.com/python-logging/",
      "https://realpython.com/python-debugging-pdb/",
      "https://realpython.com/pyspark-intro/",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/bonus/terminal-commands-cheat-sheet/",
      "/feedback/survey/article/terminal-commands/liked/?from=article-footer",
      "/feedback/survey/article/terminal-commands/disliked/?from=article-footer"
    ]
  },
  {
    "id": 4,
    "title": "Build a Wordle Clone With Python and Rich",
    "url": "https://realpython.com/python-wordle-clone/",
    "pub_date": "2023-02-06T14:00:00+00:00",
    "tags": [
      "basics",
      "projects"
    ],
    "description": "In this step-by-step project, you'll build your own Wordle clone with Python. Your game will run in the terminal, and you'll use Rich to ensure your word-guessing app looks good. Learn how to build a command-line application from scratch and then challenge your friends to a wordly competition!",
    "text": "Next Steps\n While your Wordle clone already has the most important features in place, there are many ways in which you can change or improve the project. You\u2019ve already noted some of these in the tutorial:Only allow guesses from a list of valid words: This will make the game extra challenging because you can\u2019t just throw some letters together to check if they appear in the secret word. To implement this, you need a comprehensive word list.Create a topical Wordle clone: The word list that you\u2019ve downloaded in this tutorial is based on the words in the tutorial itself. It might be more interesting to create a word list based on a theme that interests you. Maybe you can create a list of programming terms, people\u2019s names, or Shakespearean plays.Add a splash screen: A splash\u2014or intro\u2014screen is a nice way to prepare your user for what they\u2019re in for. To make your application easier to use, you can also add some in-game instructions\u2014for example, to explain the aim of the game and what the different colors represent.Have fun exploring your own Wordle variants. Also, remember that you can use most of the principles you\u2019ve learned in this tutorial when you build other command-line applications. So, what will you make next?",
    "preview": false,
    "links": [
      "#demo-your-python-wordle-clone",
      "#project-overview",
      "#prerequisites",
      "#step-1-guess-a-word",
      "#get-user-information-with-input",
      "#use-loops-to-avoid-repetitive-code",
      "#check-letters-with-sets",
      "#step-2-use-a-word-list",
      "#create-a-word-list-manually",
      "#choose-a-random-word-from-a-word-list",
      "#convert-a-text-into-a-list-of-words",
      "#step-3-organize-your-code-with-functions",
      "#set-up-your-main-loop",
      "#create-supporting-functions",
      "#test-your-code",
      "#step-4-style-your-game-with-rich",
      "#get-to-know-the-rich-console-printer",
      "#keep-track-of-previous-guesses-and-color-them",
      "#wrap-up-the-game-in-style",
      "#step-5-add-validation-and-user-feedback",
      "#make-sure-the-word-list-isnt-empty",
      "#think-about-which-words-to-accept",
      "#validate-the-words-that-the-user-guesses",
      "#step-6-clean-up-the-game-and-your-code",
      "#use-constants-to-name-your-concepts",
      "#add-an-overview-of-used-letters",
      "#exit-the-game-cleanly",
      "#conclusion",
      "#next-steps",
      "/account/join/",
      "https://en.wikipedia.org/wiki/Wordle",
      "https://realpython.com/bonus/python-wordle-clone-code/",
      "#demo-your-python-wordle-clone",
      "https://www.nytimes.com/games/wordle/",
      "/account/join/",
      "#project-overview",
      "https://www.protocol.com/bulletins/josh-wardle-wordle-gdc-2022",
      "#prerequisites",
      "https://realpython.com/python-input-output/",
      "https://realpython.com/terminal-commands/",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/python-data-structures/",
      "https://realpython.com/python-lists-tuples/#python-lists",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/defining-your-own-python-function/",
      "#step-1-guess-a-word",
      "https://realpython.com/bonus/python-wordle-clone-code/",
      "#get-user-information-with-input",
      "https://realpython.com/python-input-output/#reading-input-from-the-keyboard",
      "https://realpython.com/interacting-with-python/",
      "https://realpython.com/python-repl/",
      "https://realpython.com/python-testing/",
      "https://realpython.com/python-debugging-pdb/",
      "/account/join/",
      "#use-loops-to-avoid-repetitive-code",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/python-recursion/",
      "#validate-the-words-that-the-user-guesses",
      "http://neopythonic.blogspot.com/2009/04/tail-recursion-elimination.html",
      "https://realpython.com/python-range/",
      "https://realpython.com/python-while-loop/#the-python-break-and-continue-statements",
      "#check-letters-with-sets",
      "https://realpython.com/python-zip-function/",
      "https://realpython.com/list-comprehension-python/#using-set-and-dictionary-comprehensions",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/python-sets/",
      "https://realpython.com/python-sets/#operating-on-a-set",
      "https://en.wikipedia.org/wiki/Set_theory",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-and-operator/",
      "https://realpython.com/python-or-operator/",
      "https://realpython.com/python-not-operator/",
      "https://realpython.com/python-numbers/#arithmetic-operators-and-expressions",
      "https://realpython.com/python-constants/",
      "#step-2-use-a-word-list",
      "https://twitter.com/ramalhoorg",
      "https://www.youtube.com/watch?v=tGAngdU_8D8",
      "#step-4-style-your-game-with-rich",
      "/account/join/",
      "#step-2-use-a-word-list",
      "https://realpython.com/bonus/python-wordle-clone-code/",
      "#create-a-word-list-manually",
      "https://en.wikipedia.org/wiki/Words_(Unix)",
      "https://realpython.com/python-pathlib/",
      "#choose-a-random-word-from-a-word-list",
      "https://realpython.com/python-random/",
      "https://realpython.com/python-for-loop/#altering-for-loop-behavior",
      "/account/join/",
      "#convert-a-text-into-a-list-of-words",
      "https://github.com/dwyl/english-words",
      "https://realpython.com/python-command-line-arguments/",
      "https://en.wikipedia.org/wiki/ASCII",
      "https://realpython.com/regex-python/",
      "https://docs.python.org/3/library/re.html#regular-expression-syntax",
      "https://realpython.com/sorting-algorithms-python/",
      "https://realpython.com/python-sort/#sorted-with-a-key-argument",
      "https://www.gutenberg.org/ebooks/100",
      "https://www.gutenberg.org/ebooks/11",
      "https://www.gutenberg.org/ebooks/19551",
      "/account/join/",
      "#step-3-organize-your-code-with-functions",
      "https://realpython.com/defining-your-own-python-function/#abstraction-and-reusability",
      "https://realpython.com/bonus/python-wordle-clone-code/",
      "#set-up-your-main-loop",
      "https://realpython.com/python-refactoring/",
      "https://files.realpython.com/media/wyrdl-main-loop.c38295e0a1e4.png",
      "#create-supporting-functions",
      "https://realpython.com/python-ellipsis/",
      "#create-supporting-functions",
      "https://realpython.com/defining-your-own-python-function/#argument-passing",
      "https://realpython.com/python-return-statement/",
      "https://realpython.com/python-f-strings/",
      "https://realpython.com/if-name-main-python/",
      "/account/join/",
      "#test-your-code",
      "https://realpython.com/python-testing/#unit-tests-vs-integration-tests",
      "https://realpython.com/python-hash-table/",
      "https://realpython.com/python-doctest/",
      "https://realpython.com/documenting-python-code/#documenting-your-python-code-base-using-docstrings",
      "https://realpython.com/advanced-visual-studio-code-python/",
      "https://realpython.com/python-project-documentation-with-mkdocs/",
      "https://realpython.com/python-doctest/",
      "https://davidamos.dev/stop-using-implicit-inputs-and-outputs/",
      "https://realpython.com/python-random/#how-random-is-random",
      "https://realpython.com/pytest-python-testing/",
      "https://realpython.com/pytest-python-testing/",
      "/account/join/",
      "#step-4-style-your-game-with-rich",
      "https://rich.readthedocs.io/",
      "https://realpython.com/bonus/python-wordle-clone-code/",
      "#get-to-know-the-rich-console-printer",
      "https://realpython.com/interview-will-mcgugan/",
      "https://www.textualize.io/",
      "https://textual.textualize.io/",
      "https://textual.textualize.io/tutorial/",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "#windows-1",
      "#linux-macos-1",
      "https://realpython.com/what-is-pip/",
      "https://realpython.com/python-print/",
      "https://rich.readthedocs.io/en/stable/markup.html",
      "https://en.wikipedia.org/wiki/BBCode",
      "https://unicode.org/emoji/charts/emoji-list.html",
      "https://realpython.com/python-coding-setup-windows/#discovering-the-windows-terminal",
      "https://rich.readthedocs.io/en/stable/console.html",
      "https://rich.readthedocs.io/en/stable/style.html#style-themes",
      "https://files.realpython.com/media/wyrdl-warning.d87ec03950a6.png",
      "/account/join/",
      "#keep-track-of-previous-guesses-and-color-them",
      "https://realpython.com/python-lists-tuples/#python-lists",
      "https://realpython.com/python-zip-function/",
      "https://en.wikipedia.org/wiki/Web_colors#Hex_triplet",
      "https://files.realpython.com/media/wyrdl-rich.5fa1a37ad999.png",
      "#wrap-up-the-game-in-style",
      "/account/join/",
      "#step-5-add-validation-and-user-feedback",
      "https://realpython.com/bonus/python-wordle-clone-code/",
      "#make-sure-the-word-list-isnt-empty",
      "https://realpython.com/python-walrus-operator/",
      "https://realpython.com/python-assignment-operator/#assignment-expressions-with-the-walrus-operator",
      "https://realpython.com/python-boolean/#sequences-as-boolean-values",
      "https://realpython.com/python-traceback/",
      "/account/join/",
      "#think-about-which-words-to-accept",
      "#validate-the-words-that-the-user-guesses",
      "https://realpython.com/any-python/",
      "https://realpython.com/python-walrus-operator/#witnesses-and-counterexamples",
      "#step-6-clean-up-the-game-and-your-code",
      "https://realpython.com/bonus/python-wordle-clone-code/",
      "#use-constants-to-name-your-concepts",
      "https://realpython.com/python-constants/",
      "https://realpython.com/python-constants/#user-defined-constants",
      "#add-an-overview-of-used-letters",
      "https://files.realpython.com/media/wyrdl-guesses.9d0413381bdb.png",
      "#exit-the-game-cleanly",
      "#make-sure-the-word-list-isnt-empty",
      "https://docs.python.org/3/library/contextlib.html#contextlib.suppress",
      "https://realpython.com/python-with-statement/",
      "#conclusion",
      "#next-steps",
      "/feedback/survey/article/python-wordle-clone/liked/?from=article-footer",
      "/feedback/survey/article/python-wordle-clone/disliked/?from=article-footer"
    ]
  },
  {
    "id": 5,
    "title": "The Python Standard REPL: Try Out Code and Ideas Quickly",
    "url": "https://realpython.com/python-repl/",
    "pub_date": "2023-01-25T14:00:00+00:00",
    "tags": [
      "basics",
      "tools"
    ],
    "description": "In this tutorial, you'll learn how to use the Python standard REPL (Read-Eval-Print Loop) to run your code interactively. This tool will allow you to test new ideas, explore and experiment with new tools and libraries, refactor and debug your code, try out examples, and more.",
    "text": "Conclusion\n You\u2019ve learned how to work with Python in interactive mode using the standard shell, or REPL (Read-Eval-Print Loop). This tool comes in every Python installation so that you can use it at any moment to test new ideas, explore and experiment with new tools and libraries, refactor and debug your code, try out examples, and more.In this tutorial, you\u2019ve learned how to:You\u2019ve also learned about alternative and feature-rich REPLs, such as IDLE, IPython, bpython, and ptpython, which provide IDE-like features that can highly improve your user experience and productivity while working in interactive mode.Free Sample Code: Click here to download the free sample code that you\u2019ll use to explore the capabilities of Python\u2019s standard REPL.",
    "preview": false,
    "links": [
      "#getting-to-know-the-python-standard-repl",
      "#what-is-pythons-interactive-shell-or-repl",
      "#why-use-a-python-repl",
      "#starting-and-ending-repl-interactive-sessions",
      "#running-the-python-command",
      "#passing-command-line-options-to-the-python-command",
      "#exiting-the-current-python-repl-session",
      "#running-code-in-a-repl-session",
      "#evaluating-expressions-and-simple-statements",
      "#running-compound-statements",
      "#dealing-with-explicit-and-implicit-line-continuations",
      "#printing-vs-evaluating",
      "#flagging-and-understanding-errors",
      "#using-the-_-special-variable",
      "#reloading-imported-modules",
      "#editing-code-in-the-standard-repl",
      "#code-history",
      "#code-completion",
      "#useful-keyboard-shortcuts",
      "#getting-help-and-introspecting-code-in-the-repl",
      "#using-pythons-built-in-help-system",
      "#introspecting-your-code-dynamically",
      "#customizing-the-standard-repl",
      "#providing-a-startup-file",
      "#colorizing-repl-output-with-rich",
      "#uncovering-missing-features-in-the-standard-repl",
      "#using-an-alternative-repl",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/python-idle/",
      "https://ipython.readthedocs.io/en/stable/#ipython-documentation",
      "https://realpython.com/bpython-alternative-python-repl/",
      "https://github.com/jonathanslenders/ptpython/",
      "https://realpython.com/python-command-line-arguments/",
      "https://realpython.com/bonus/python-repl-code/",
      "#getting-to-know-the-python-standard-repl",
      "https://realpython.com/c-for-python-programmers/",
      "https://realpython.com/python-vs-cpp/",
      "https://en.wikipedia.org/wiki/Compiler",
      "https://en.wikipedia.org/wiki/Machine_code",
      "https://en.wikipedia.org/wiki/Interpreter_(computing)",
      "https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop",
      "https://realpython.com/cpython-source-code-guide/",
      "https://realpython.com/installing-python/",
      "https://realpython.com/run-python-scripts/",
      "https://realpython.com/interacting-with-python/",
      "/account/join/",
      "#what-is-pythons-interactive-shell-or-repl",
      "https://en.wikipedia.org/wiki/Shell_(computing)",
      "https://docs.python.org/3/glossary.html#term-expression",
      "https://docs.python.org/3/glossary.html#term-statement",
      "https://en.wikipedia.org/wiki/Side_effect_(computer_science)",
      "#why-use-a-python-repl",
      "https://realpython.com/python-refactoring/",
      "https://en.wikipedia.org/wiki/Type_introspection",
      "https://realpython.com/python-modules-packages/",
      "https://en.wikipedia.org/wiki/API",
      "https://docs.python.org/3/index.html",
      "#running-the-python-command",
      "#starting-and-ending-repl-interactive-sessions",
      "https://en.wikipedia.org/wiki/Shell_(computing)",
      "#running-the-python-command",
      "https://realpython.com/installing-python/",
      "https://en.wikipedia.org/wiki/Syntax_highlighting",
      "#running-compound-statements",
      "#dealing-with-explicit-and-implicit-line-continuations",
      "/account/join/",
      "#passing-command-line-options-to-the-python-command",
      "https://docs.python.org/3/using/cmdline.html#cmdoption-c",
      "https://realpython.com/python-scope-legb-rule/#globals",
      "https://realpython.com/len-python-function/",
      "https://docs.python.org/3/using/cmdline.html#envvar-PYTHONSTARTUP",
      "#providing-a-startup-file",
      "https://realpython.com/python-data-structures/#bytes-immutable-arrays-of-single-bytes",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-numbers/#integers",
      "https://realpython.com/python-command-line-arguments/",
      "/account/join/",
      "#exiting-the-current-python-repl-session",
      "https://realpython.com/command-line-interfaces-python-argparse/",
      "https://docs.python.org/3/library/constants.html#quit",
      "https://docs.python.org/3/library/constants.html?highlight=quit#exit",
      "https://docs.python.org/3/library/exceptions.html#SystemExit",
      "#running-code-in-a-repl-session",
      "#evaluating-expressions-and-simple-statements",
      "https://realpython.com/python-sum-function/",
      "https://realpython.com/python-return-statement/",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-assignment-operator/",
      "https://realpython.com/python-variables/",
      "/account/join/",
      "#running-compound-statements",
      "https://docs.python.org/3/reference/simple_stmts.html",
      "https://docs.python.org/3/reference/compound_stmts.html",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-with-statement/",
      "https://realpython.com/python-pep8/#indentation",
      "#dealing-with-explicit-and-implicit-line-continuations",
      "https://docs.python.org/3/reference/lexical_analysis.html#explicit-line-joining",
      "https://docs.python.org/3/reference/lexical_analysis.html#physical-lines",
      "https://docs.python.org/3/reference/lexical_analysis.html#logical-lines",
      "https://realpython.com/python-assert-statement/",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/python-assert-statement/#the-assertionerror-exception",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-dicts/",
      "https://docs.python.org/3/reference/lexical_analysis.html#implicit-line-joining",
      "https://realpython.com/python-operators-expressions/#logical-expressions-involving-boolean-operands",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "#printing-vs-evaluating",
      "https://realpython.com/python-print/",
      "https://realpython.com/null-in-python/",
      "https://realpython.com/python-lists-tuples/#methods-that-modify-a-list",
      "https://realpython.com/python-append/",
      "https://realpython.com/python-sort/",
      "https://en.wikipedia.org/wiki/In-place_algorithm",
      "/account/join/",
      "#flagging-and-understanding-errors",
      "https://realpython.com/python-traceback/",
      "https://realpython.com/invalid-syntax-python/",
      "#using-the-_-special-variable",
      "https://realpython.com/null-in-python/",
      "https://docs.python.org/3/library/functions.html#pow",
      "https://realpython.com/python-assignment-operator/",
      "https://realpython.com/len-python-function/",
      "/account/join/",
      "#reloading-imported-modules",
      "https://realpython.com/python-modules-packages/",
      "https://realpython.com/python-import/#reloading-modules",
      "https://docs.python.org/3/library/importlib.html#importlib.reload",
      "https://docs.python.org/3/library/importlib.html?highlight=reload#module-importlib",
      "https://realpython.com/python-ides-code-editors-guide/",
      "#editing-code-in-the-standard-repl",
      "https://docs.python.org/3/tutorial/interactive.html",
      "https://en.wikipedia.org/wiki/Bash_(Unix_shell)",
      "https://en.wikipedia.org/wiki/KornShell",
      "https://tiswww.case.edu/php/chet/readline/rltop.html",
      "#code-history",
      "/account/join/",
      "#code-completion",
      "https://realpython.com/python-keywords/",
      "https://realpython.com/python-variables/",
      "https://realpython.com/defining-your-own-python-function/",
      "#useful-keyboard-shortcuts",
      "https://docs.python.org/3/library/exceptions.html#KeyboardInterrupt",
      "https://realpython.com/python-while-loop/#infinite-loops",
      "https://tiswww.case.edu/php/chet/readline/rluserman.html#Readline-Bare-Essentials",
      "/account/join/",
      "#getting-help-and-introspecting-code-in-the-repl",
      "#using-pythons-built-in-help-system",
      "https://docs.python.org/3/library/functions.html#help",
      "https://docs.python.org/3/library/stdtypes.html#str",
      "https://realpython.com/python-namespaces-scope/",
      "https://realpython.com/python-pathlib/",
      "/account/join/",
      "#introspecting-your-code-dynamically",
      "https://docs.python.org/3/library/functions.html#dir",
      "https://realpython.com/python-scope-legb-rule/#functions-the-local-scope",
      "https://docs.python.org/3/library/functions.html#vars",
      "https://docs.python.org/3/library/stdtypes.html#object.__dict__",
      "https://docs.python.org/3/library/functions.html#locals",
      "https://docs.python.org/3/library/functions.html#globals",
      "https://docs.python.org/3/library/functions.html#type",
      "#customizing-the-standard-repl",
      "https://pypi.org/project/rich/",
      "#providing-a-startup-file",
      "https://docs.python.org/3/using/cmdline.html#envvar-PYTHONSTARTUP",
      "#linux-1",
      "#macos-1",
      "https://realpython.com/python-coding-setup-windows/#configuring-environment-variables",
      "https://realpython.com/python-coding-setup-windows/",
      "https://realpython.com/python-pretty-print/",
      "https://docs.python.org/3/library/sys.html#sys.ps1",
      "https://docs.python.org/3/library/sys.html#sys.ps2",
      "/account/join/",
      "#colorizing-repl-output-with-rich",
      "https://en.wikipedia.org/wiki/Formatted_text",
      "https://github.com/willmcgugan/rich",
      "https://realpython.com/what-is-pip/",
      "https://realpython.com/pypi-publish-python-package/",
      "https://files.realpython.com/media/1234-python-repl-colorized-output.7373c74c210f.png",
      "#uncovering-missing-features-in-the-standard-repl",
      "https://docs.python.org/3/glossary.html#term-IDLE",
      "https://en.wikipedia.org/wiki/Indentation_(typesetting)",
      "https://en.wikipedia.org/wiki/Syntax_highlighting",
      "https://en.wikipedia.org/wiki/Command_history",
      "https://en.wikipedia.org/wiki/Bracket_matching",
      "https://en.wikipedia.org/wiki/Autocomplete#In_source_code_editors",
      "https://en.wikipedia.org/wiki/Type_introspection",
      "https://realpython.com/bpython-alternative-python-repl/#share-your-repl-session",
      "#using-an-alternative-repl",
      "https://realpython.com/python-idle/",
      "https://ipython.readthedocs.io/en/stable/#ipython-documentation",
      "https://realpython.com/bpython-alternative-python-repl/",
      "https://github.com/jonathanslenders/ptpython/",
      "https://www.python.org/shell/",
      "https://replit.com/",
      "https://www.pythonmorsels.com/repl/",
      "#conclusion",
      "https://realpython.com/bonus/python-repl-code/",
      "/feedback/survey/article/python-repl/liked/?from=article-footer",
      "/feedback/survey/article/python-repl/disliked/?from=article-footer"
    ]
  },
  {
    "id": 6,
    "title": "Python's \"in\" and \"not in\" Operators: Check for Membership",
    "url": "https://realpython.com/python-in-operator/",
    "pub_date": "2022-12-19T14:00:00+00:00",
    "tags": [
      "python",
      "best-practices",
      "basics"
    ],
    "description": "In this tutorial, you'll learn how to check if a given value is present or absent in a collection of values using Python's in and not in operators, respectively. This type of check is known as membership test in Python.",
    "text": "Conclusion\n Now you know how to perform membership tests using Python\u2019s in and not in operators. This type of test allows you to check if a given value is present in a collection of values, which is a pretty common operation in programming.In this tutorial, you\u2019ve learned how to:With this knowledge, you\u2019re good to go with membership tests using Python\u2019s in and not in operators in your code.Source Code: Click here to download the free source code that you\u2019ll use to perform membership tests in Python with in and not in.",
    "preview": false,
    "links": [
      "#getting-started-with-membership-tests-in-python",
      "#pythons-in-operator",
      "#pythons-not-in-operator",
      "#using-in-and-not-in-with-different-python-types",
      "#lists-tuples-and-ranges",
      "#strings",
      "#generators",
      "#dictionaries-and-sets",
      "#putting-pythons-in-and-not-in-operators-into-action",
      "#replacing-chained-or-operators",
      "#writing-efficient-membership-tests",
      "#using-operatorcontains-for-membership-tests",
      "#supporting-membership-tests-in-user-defined-classes",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-range/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-sets/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/introduction-to-python-generators/",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/python3-object-oriented-programming/#define-a-class-in-python",
      "https://realpython.com/bonus/python-in-operator-code/",
      "#getting-started-with-membership-tests-in-python",
      "https://docs.python.org/3/reference/expressions.html#membership-test-operations",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-is-identity-vs-equality/#comparing-identity-with-the-python-is-and-is-not-operators",
      "https://realpython.com/python-is-identity-vs-equality/#comparing-equality-with-the-python-and-operators",
      "https://realpython.com/python-return-statement/",
      "https://realpython.com/python-return-statement/#short-circuiting-loops",
      "https://docs.python.org/3/reference/expressions.html#in",
      "https://docs.python.org/3/reference/expressions.html#not-in",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-keywords/",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-sets/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-traceback/#typeerror",
      "#using-in-and-not-in-with-different-python-types",
      "https://realpython.com/python-and-operator/",
      "https://realpython.com/python-or-operator/",
      "https://realpython.com/python-not-operator/",
      "/account/join/",
      "#pythons-in-operator",
      "https://docs.python.org/3/reference/expressions.html#in",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "https://realpython.com/any-python/",
      "#pythons-not-in-operator",
      "#using-in-and-not-in-with-different-python-types",
      "https://docs.python.org/3/glossary.html#term-sequence",
      "https://realpython.com/python-range/",
      "#lists-tuples-and-ranges",
      "https://en.wikipedia.org/wiki/Big_O_notation",
      "https://wiki.python.org/moin/TimeComplexity",
      "https://realpython.com/python-random/",
      "https://realpython.com/python-traceback/#valueerror",
      "/account/join/",
      "#strings",
      "https://en.wikipedia.org/wiki/File-system_permissions",
      "https://realpython.com/python-string-contains-substring/",
      "https://docs.python.org/3/library/stdtypes.html#str.upper",
      "https://docs.python.org/3/library/stdtypes.html?highlight=lower#str.lower",
      "#generators",
      "https://realpython.com/introduction-to-python-generators/",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "https://docs.python.org/3/glossary.html#term-iterator",
      "https://docs.python.org/3/glossary.html#term-generator-iterator",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/python-keywords/#the-yield-keyword",
      "https://docs.python.org/3/library/functions.html#next",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/python-variables/",
      "https://en.wikipedia.org/wiki/Hang_(computing)",
      "/account/join/",
      "#dictionaries-and-sets",
      "https://realpython.com/python-dicts/#dkeys",
      "https://realpython.com/python-dicts/#dvalues",
      "https://realpython.com/python-dicts/#ditems",
      "https://docs.python.org/3/library/stdtypes.html#dict-views",
      "#putting-pythons-in-and-not-in-operators-into-action",
      "https://realpython.com/python-or-operator/",
      "#replacing-chained-or-operators",
      "https://en.wikipedia.org/wiki/RGB_color_model",
      "/account/join/",
      "#writing-efficient-membership-tests",
      "https://en.wikipedia.org/wiki/Data_structure",
      "https://realpython.com/python-hash-table/",
      "https://realpython.com/run-python-scripts/",
      "#using-operatorcontains-for-membership-tests",
      "https://docs.python.org/3/library/operator.html#module-operator",
      "https://docs.python.org/3/library/index.html",
      "https://docs.python.org/3/library/operator.html#operator.contains",
      "https://realpython.com/python-map-function/",
      "https://realpython.com/python-filter-function/",
      "https://realpython.com/python-lambda/",
      "/account/join/",
      "#supporting-membership-tests-in-user-defined-classes",
      "https://docs.python.org/3/reference/datamodel.html#object.__contains__",
      "https://docs.python.org/3/glossary.html#term-special-method",
      "https://realpython.com/how-to-implement-python-stack/",
      "https://realpython.com/queue-in-python/#stack-last-in-first-out-lifo",
      "https://docs.python.org/3/reference/datamodel.html#object.__iter__",
      "https://docs.python.org/3/reference/datamodel.html#object.__getitem__",
      "https://docs.python.org/3/glossary.html#term-iterable",
      "https://realpython.com/python-lists-tuples/#list-elements-can-be-accessed-by-index",
      "#conclusion",
      "https://realpython.com/bonus/python-in-operator-code/",
      "/feedback/survey/article/python-in-operator/liked/?from=article-footer",
      "/feedback/survey/article/python-in-operator/disliked/?from=article-footer"
    ]
  },
  {
    "id": 7,
    "title": "Advent of Code: Solving Your Puzzles With Python",
    "url": "https://realpython.com/python-advent-of-code/",
    "pub_date": "2022-11-30T14:00:00+00:00",
    "tags": [
      "basics",
      "testing"
    ],
    "description": "Advent of Code is an online advent calendar that shares new programming puzzles each day from December 1 to the 25. In this tutorial, you'll learn why solving programming puzzles can be beneficial and how you can get started with Advent of Code using Python.",
    "text": "Conclusion\n Advent of Code is a great resource of fun programming puzzles! You can use it to practice your problem-solving skills and challenge your friends to a fun competition and common learning experience. You can hear even more about Advent of Code in the following episode of the Real Python Podcast: Solving Advent of Code Puzzles With Python.If you haven\u2019t already done so, then head over to the Advent of Code website and try out some of the new puzzles.In this tutorial, you\u2019ve learned:Real Python hosts a private leaderboard and a community forum about Advent of Code. Become a Real Python member and join the #advent-of-code Slack channel to access it.Source Code: Click here to download the free source code that shows you how to solve Advent of Code puzzles with Python.",
    "preview": false,
    "links": [
      "#puzzling-in-programming",
      "#exploring-options-for-solving-programming-puzzles-online",
      "#preparing-for-advent-of-code-25-fresh-puzzles-for-christmas",
      "#advent-of-code-puzzles",
      "#how-to-participate-in-advent-of-code",
      "#solving-advent-of-code-with-python",
      "#the-anatomy-of-a-puzzle",
      "#the-structure-of-a-solution",
      "#a-starting-template",
      "#solution-strategies",
      "#practicing-advent-of-code-day-1-2019",
      "#part-1-puzzle-description",
      "#part-1-solution",
      "#part-1-solution-using-templates",
      "#part-2-puzzle-description",
      "#part-2-solution",
      "#practicing-advent-of-code-day-5-2020",
      "#part-1-puzzle-description_1",
      "#part-1-solution_1",
      "#part-2-puzzle-description_1",
      "#part-2-solution_1",
      "#practicing-advent-of-code-day-5-2021",
      "#part-1-puzzle-description_2",
      "#part-1-input-parsing",
      "#part-1-solution_2",
      "#part-2-puzzle-description_2",
      "#part-2-solution_2",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/bonus/python-advent-of-code-code/",
      "#puzzling-in-programming",
      "https://realpython.com/python311-new-features/",
      "/account/join/",
      "#exploring-options-for-solving-programming-puzzles-online",
      "https://adventofcode.com/about",
      "https://exercism.org/",
      "https://projecteuler.net/",
      "https://www.codewars.com/",
      "https://en.wikipedia.org/wiki/Kata",
      "https://www.hackerrank.com/",
      "#preparing-for-advent-of-code-25-fresh-puzzles-for-christmas",
      "https://realpython.com/interview-eric-wastl/",
      "https://adventofcode.com/2021/stats",
      "https://en.wikipedia.org/wiki/Advent_calendar",
      "https://en.wikipedia.org/wiki/Advent",
      "https://www.lego.com/en-us/search?q=advent",
      "https://perchs.dk/vare/a-c-perchs-julekalender-2022-peach/?lang=en",
      "https://www.elfcosmetics.com/shine-bright-24-day-advent-calendar/70898.html",
      "#solving-advent-of-code-with-python",
      "#advent-of-code-puzzles",
      "https://www.timeanddate.com/time/zones/et",
      "https://adventofcode.com/leaderboard",
      "https://jeroenheijmans.github.io/advent-of-code-surveys/",
      "https://adventofcode.com/2020/day/1",
      "/account/join/",
      "#how-to-participate-in-advent-of-code",
      "https://adventofcode.com/auth/login",
      "https://twitter.com/ericwastl",
      "https://www.youtube.com/watch?v=gibVyxpi-qA",
      "https://adventofcode.com/leaderboard",
      "https://adventofcode.com/leaderboard/private",
      "https://github.com/",
      "https://www.reddit.com/r/adventofcode/",
      "https://adventofcode.com/leaderboard/private",
      "https://adventofcode.com/support",
      "https://github.com/Bogdanp/awesome-advent-of-code",
      "#solving-advent-of-code-with-python",
      "https://adventofcode.com/2021/stats",
      "https://twitter.com/ericwastl/status/1474765035071315968",
      "https://github.com/search?q=advent+of+code",
      "https://adventofcode.com/",
      "#the-anatomy-of-a-puzzle",
      "https://realpython.com/python-refactoring/",
      "https://pypi.org/project/advent-of-code-data/",
      "https://realpython.com/what-is-pip/",
      "https://github.com/wimglenn/advent-of-code-wim/issues/1",
      "https://github.com/wimglenn/advent-of-code-data#quickstart",
      "https://realpython.com/python-testing/",
      "https://realpython.com/pytest-python-testing/",
      "https://realpython.com/python-hash-table/",
      "#practicing-advent-of-code-day-1-2019",
      "https://pypi.org/project/advent-of-code-data/",
      "https://pypi.org/project/advent-of-code-ocr/",
      "https://realpython.com/pytest-python-testing/",
      "https://realpython.com/python-packages/#parse-for-matching-strings",
      "https://realpython.com/regex-python/",
      "https://realpython.com/numpy-tutorial/",
      "https://pypi.org/project/colorama/",
      "https://rich.readthedocs.io/",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "#solution-strategies",
      "/account/join/",
      "#the-structure-of-a-solution",
      "#advent-of-code-puzzles",
      "https://adventofcode.com/2020/day/1",
      "https://en.wikipedia.org/wiki/Joe_Armstrong_(programmer)",
      "https://henrikwarne.com/2021/04/16/more-good-programming-quotes-part-5/",
      "https://realpython.com/python-pathlib/",
      "https://realpython.com/python-command-line-arguments/#the-sysargv-array",
      "https://adventofcode.com/2020/",
      "/account/join/",
      "#a-starting-template",
      "#part-1-solution-using-templates",
      "https://cookiecutter.readthedocs.io/",
      "https://copier.readthedocs.io/",
      "https://github.com/gahjelle/template-aoc-python",
      "/account/join/",
      "#solution-strategies",
      "https://realpython.com/python-strings/",
      "https://docs.python.org/library/re.html",
      "https://realpython.com/python-packages/#parse-for-matching-strings",
      "https://adventofcode.com/2020/day/7",
      "https://realpython.com/python-f-strings/",
      "https://en.wikipedia.org/wiki/Assembly_language",
      "https://en.wikipedia.org/wiki/Finite-state_machine",
      "https://realpython.com/python3-object-oriented-programming/",
      "https://realpython.com/python-data-classes/",
      "https://realpython.com/python-type-checking/",
      "https://realpython.com/python39-new-features/#type-hint-lists-and-dictionaries-directly",
      "https://realpython.com/python39-new-features/",
      "https://realpython.com/numpy-tutorial/",
      "https://pypi.org/project/colorama/",
      "https://realpython.com/terminal-commands/",
      "/account/join/",
      "#practicing-advent-of-code-day-1-2019",
      "https://adventofcode.com/2019/day/1",
      "#part-1-puzzle-description",
      "#part-1-solution",
      "https://realpython.com/python-rounding/",
      "https://realpython.com/python-numbers/#integer-division",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "https://realpython.com/python-sum-function/",
      "#a-starting-template",
      "#part-1-solution-using-templates",
      "#a-starting-template",
      "https://en.wikipedia.org/wiki/Test-driven_development",
      "https://realpython.com/python-print/#calling-print",
      "https://realpython.com/python-coding-interview-tips/#use-list-comprehensions-instead-of-map-and-filter",
      "#part-2-puzzle-description",
      "https://realpython.com/python-recursion/",
      "/account/join/",
      "#part-2-solution",
      "#part-1-solution-using-templates",
      "https://realpython.com/python-recursion/",
      "https://realpython.com/python-doctest/",
      "https://realpython.com/python-walrus-operator/",
      "https://realpython.com/python-while-loop/",
      "#practicing-advent-of-code-day-5-2020",
      "https://adventofcode.com/2020/day/5",
      "#part-1-puzzle-description_1",
      "https://en.wikipedia.org/wiki/Binary_space_partitioning",
      "https://realpython.com/python-bitwise-operators/#binary-system-in-five-minutes",
      "#part-1-solution_1",
      "https://realpython.com/python-bitwise-operators/#binary-system-in-five-minutes",
      "https://docs.python.org/3/library/stdtypes.html#str.translate",
      "https://docs.python.org/3/library/stdtypes.html#str.maketrans",
      "https://realpython.com/python-min-and-max/",
      "#part-2-puzzle-description_1",
      "/account/join/",
      "#part-2-solution_1",
      "https://realpython.com/python-sets/",
      "#practicing-advent-of-code-day-5-2021",
      "https://adventofcode.com/2021/day/5",
      "#part-1-puzzle-description_2",
      "https://en.wikipedia.org/wiki/Hydrothermal_vent",
      "https://adventofcode.com/2021/day/5",
      "#part-1-input-parsing",
      "https://realpython.com/python-data-classes/",
      "https://realpython.com/regex-python/",
      "#part-1-solution_2",
      "https://realpython.com/python310-new-features/#structural-pattern-matching",
      "https://realpython.com/python310-new-features/",
      "https://realpython.com/python-range/",
      "https://realpython.com/python-counter/",
      "/account/join/",
      "#part-2-puzzle-description_2",
      "#part-2-solution_2",
      "https://adventofcode.com/events",
      "#conclusion",
      "https://realpython.com/podcasts/rpp/89/",
      "https://adventofcode.com/",
      "https://realpython.com/join/",
      "https://realpython.com/community/",
      "https://realpython.com/bonus/python-advent-of-code-code/",
      "/feedback/survey/article/python-advent-of-code/liked/?from=article-footer",
      "/feedback/survey/article/python-advent-of-code/disliked/?from=article-footer"
    ]
  },
  {
    "id": 8,
    "title": "How to Add Python to PATH",
    "url": "https://realpython.com/add-python-to-path/",
    "pub_date": "2022-09-26T14:00:00+00:00",
    "tags": [
      "best-practices",
      "devops",
      "basics"
    ],
    "description": "In this tutorial, you'll learn about how to add Python, or any other program, to your PATH environment variable. You'll be covering the procedure in Windows, macOS, and Linux and find out what PATH is and why it's important.",
    "text": "Conclusion\n In this tutorial, you\u2019ve learned how to add Python, or any other program, to your PATH environment variable on Windows, Linux, and macOS. You also learned a bit more about what PATH is and why its internal order is vital to consider. Finally, you also discovered how you might manage your PATH on a UNIX-based system, seeing as it\u2019s more complex than managing your PATH on Windows.Supplemental Code: Click here to download free supplemental code that\u2019ll walk you through changing PATH across operating systems.",
    "preview": false,
    "links": [
      "#how-to-add-python-to-path-on-windows",
      "#how-to-add-python-to-path-on-linux-and-macos",
      "#understanding-what-path-is",
      "#understanding-the-importance-of-order-within-path",
      "#managing-your-path-on-unix-based-systems",
      "#conclusion",
      "/account/join/",
      "https://en.wikipedia.org/wiki/Environment_variable",
      "https://en.wikipedia.org/wiki/Path_(computing)",
      "https://realpython.com/bonus/add-python-to-path-code/",
      "#how-to-add-python-to-path-on-windows",
      "https://realpython.com/python-repl/",
      "https://www.voidtools.com/",
      "https://files.realpython.com/media/which_python_exe.b88dfad1cfb4.png",
      "https://realpython.com/python-coding-setup-windows/#configuring-environment-variables",
      "https://realpython.com/python-coding-setup-windows/",
      "https://realpython.com/bonus/add-python-to-path-code/",
      "https://ubuntu.com/wsl",
      "/account/join/",
      "#how-to-add-python-to-path-on-linux-and-macos",
      "#understanding-the-importance-of-order-within-path",
      "https://github.com/junegunn/fzf",
      "#managing-your-path-on-unix-based-systems",
      "https://en.wikipedia.org/wiki/Hidden_file_and_hidden_directory#Unix_and_Unix-like_environments",
      "https://en.wikipedia.org/wiki/RUNCOM",
      "/account/join/",
      "#understanding-what-path-is",
      "#understanding-the-importance-of-order-within-path",
      "#managing-your-path-on-unix-based-systems",
      "https://en.wikipedia.org/wiki/Tr_(Unix)",
      "https://realpython.com/python-lists-tuples/",
      "https://www.gnu.org/software/grep/manual/grep.html#index-_002dv",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/bonus/add-python-to-path-code/",
      "/feedback/survey/article/add-python-to-path/liked/?from=article-footer",
      "/feedback/survey/article/add-python-to-path/disliked/?from=article-footer"
    ]
  },
  {
    "id": 9,
    "title": "How to Replace a String in Python",
    "url": "https://realpython.com/replace-string-python/",
    "pub_date": "2022-09-14T14:00:00+00:00",
    "tags": [
      "best-practices",
      "basics"
    ],
    "description": "In this tutorial, you'll learn how to remove or replace a string or substring. You'll go from the basic string method .replace() all the way up to a multi-layer regex pattern using the sub() function from Python's re module.",
    "text": "Conclusion\n In this tutorial, you\u2019ve learned how to replace strings in Python. Along the way, you\u2019ve gone from using the basic Python .replace() string method to using callbacks with re.sub() for absolute control. You\u2019ve also explored some regex patterns and deconstructed them into a better architecture to manage a replacement script.With all that knowledge, you\u2019ve successfully cleaned a chat transcript, which is now ready for independent review. Not only that, but your transcript-sanitizing script has plenty of room to grow.Sample Code: Click here to download the free sample code that you\u2019ll use to replace strings in Python.",
    "preview": false,
    "links": [
      "#how-to-remove-or-replace-a-python-string-or-substring",
      "#set-up-multiple-replacement-rules",
      "#leverage-resub-to-make-complex-rules",
      "#use-a-callback-with-resub-for-even-more-control",
      "#apply-the-callback-to-the-script",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/python-strings/",
      "https://en.wikipedia.org/wiki/Sanitization_(classified_information)",
      "https://en.wikipedia.org/wiki/Personal_data",
      "https://en.wikipedia.org/wiki/ISO_8601",
      "https://realpython.com/bonus/replace-string-python-code/",
      "#how-to-remove-or-replace-a-python-string-or-substring",
      "https://realpython.com/python-data-types/#triple-quoted-strings",
      "/account/join/",
      "#set-up-multiple-replacement-rules",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-csv/",
      "https://realpython.com/python-lists-tuples/#tuple-assignment-packing-and-unpacking",
      "#leverage-resub-to-make-complex-rules",
      "https://en.wikipedia.org/wiki/Wildcard_character",
      "https://realpython.com/regex-python/",
      "https://xkcd.com/208/",
      "https://docs.python.org/3/library/re.html#re.sub",
      "https://www.regular-expressions.info/characters.html",
      "https://en.wikipedia.org/wiki/Alphanumericals",
      "https://www.regular-expressions.info/refrepeat.html",
      "https://www.regular-expressions.info/charclass.html",
      "https://en.wikipedia.org/wiki/Escape_character",
      "https://realpython.com/regex-python/",
      "https://regexr.com/",
      "/account/join/",
      "#use-a-callback-with-resub-for-even-more-control",
      "https://en.wikipedia.org/wiki/Callback_(computer_programming)",
      "https://docs.python.org/3/library/re.html#match-objects",
      "#apply-the-callback-to-the-script",
      "https://realpython.com/python-f-strings/",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/bonus/replace-string-python-code/",
      "/feedback/survey/article/replace-string-python/liked/?from=article-footer",
      "/feedback/survey/article/replace-string-python/disliked/?from=article-footer"
    ]
  },
  {
    "id": 10,
    "title": "HTML and CSS for Python Developers",
    "url": "https://realpython.com/html-css-python/",
    "pub_date": "2022-09-07T14:00:00+00:00",
    "tags": [
      "web-dev",
      "django",
      "flask",
      "front-end",
      "basics"
    ],
    "description": "There's no way around HTML and CSS when you want to build web apps.\r\nEven if you're not aiming to become a web developer, knowing the basics of HTML and CSS will help you understand the Web better.\r\nIn this tutorial, you'll get an introduction to HTML and CSS for Python programmers.",
    "text": "Conclusion\n No matter which path to becoming a Python web developer you choose, there\u2019s no way around HTML and CSS.\nBoth technologies are fundamental building blocks when you want to create websites.Throughout this tutorial, you built a boilerplate HTML document to give you a head-start in your upcoming web projects.Along the way, you learned how to:Python, HTML, and CSS are a powerful trio that enables you to create small HTML documents and big web projects.\nBut even if you\u2019re not aiming for a career as a web developer, knowing a thing or two about HTML and CSS will help you understand the Web better.Free Bonus: Click here to download the supplemental materials for this tutorial, including a time-saving HTML template file.",
    "preview": false,
    "links": [
      "#create-your-first-html-file",
      "#the-html-document",
      "#whitespace-and-text-formatting",
      "#links-images-and-tables",
      "#style-your-content-with-css",
      "#add-color-to-your-website",
      "#change-the-font",
      "#separate-your-concerns",
      "#use-classes-for-greater-flexibility",
      "#handle-html-with-python",
      "#programmatically-write-html",
      "#create-html-entities-with-python",
      "#parse-html-with-python",
      "#continue-with-html-and-css-in-python",
      "#javascript",
      "#jinja",
      "#flask",
      "#django",
      "#pyscript",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/bonus/html-css-python-code/",
      "#create-your-first-html-file",
      "https://en.wikipedia.org/wiki/Tim_Berners-Lee",
      "https://en.wikipedia.org/wiki/World_Wide_Web",
      "https://en.wikipedia.org/wiki/Screen_reader",
      "https://whatwg.org",
      "https://github.com/python/steering-council",
      "https://w3techs.com/technologies/details/ml-html5",
      "/account/join/",
      "#the-html-document",
      "https://www.example.com/",
      "https://www.example.com/index.html",
      "https://html.com/tags/comment-tag/",
      "https://files.realpython.com/media/01-index-no-html.70cf522ce5ff.png",
      "https://realpython.com/invalid-syntax-python/",
      "https://validator.w3.org",
      "https://realpython.com/python-code-quality/#linters",
      "https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry",
      "https://www.w3.org/wiki/Doctypes_and_markup_styles",
      "https://www.w3.org/TR/2011/WD-html-markup-20110113/syntax.html#void-element",
      "https://developer.mozilla.org/en-US/docs/Web/HTML/Element",
      "https://files.realpython.com/media/02-index-html.3618468cc2e7.png",
      "https://realpython.com/bonus/html-css-python-code/",
      "/account/join/",
      "#whitespace-and-text-formatting",
      "https://files.realpython.com/media/03-index-whitespace.1920593829ce.png",
      "https://realpython.com/python-pep8/",
      "https://www.w3.org/WAI/fundamentals/accessibility-intro/",
      "https://kushagra.dev/blog/strong-vs-em/",
      "https://files.realpython.com/media/04-index-default-styling.ba56dcefe632.png",
      "https://en.wikipedia.org/wiki/Speech_synthesis",
      "https://html5doctor.com",
      "https://web.dev/accessible/",
      "/account/join/",
      "#links-images-and-tables",
      "https://realpython.com/directory-tree-generator-python/",
      "https://realpython.com/python-web-applications/",
      "https://html.com/anchors-links/",
      "https://realpython.com/bonus/html-css-python-code/",
      "https://www.w3.org/WAI/tutorials/images/",
      "https://realpython.com/documenting-python-code/#documenting-your-python-code-base-using-docstrings",
      "https://axesslab.com/alt-texts/",
      "https://files.realpython.com/media/06-gallery-no-styling.e19041073914.png",
      "/account/join/",
      "#style-your-content-with-css",
      "https://developer.mozilla.org/en-US/docs/Learn/Accessibility/HTML#page_layouts",
      "#add-color-to-your-website",
      "https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_are_browser_developer_tools",
      "https://en.wikipedia.org/wiki/Flash_of_unstyled_content",
      "https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors",
      "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors",
      "https://realpython.com/image-processing-with-the-python-pillow-library/#bands-and-modes-of-an-image-in-the-python-pillow-library",
      "https://www.smashingmagazine.com/2021/11/guide-modern-css-colors/",
      "https://developer.mozilla.org/en-US/docs/Web/CSS/Reference",
      "https://www.w3.org/Style/LieBos3e/em",
      "https://en.wikipedia.org/wiki/Type_casting_(typography)",
      "https://www.w3.org/Style/Examples/007/units.en.html",
      "/account/join/",
      "#change-the-font",
      "https://en.wikipedia.org/wiki/Helvetica",
      "https://en.wikipedia.org/wiki/Sans-serif",
      "https://en.wikipedia.org/wiki/Arial",
      "https://www.toptal.com/designers/typography/web-typography-infographic",
      "https://css-tricks.com/poll-results-how-do-you-order-your-css-properties/",
      "https://files.realpython.com/media/07-index-first-styling.12974b80bb2a.png",
      "https://developer.chrome.com/blog/devtools-answers-what-font-is-that/",
      "https://css-tricks.com/snippets/css/using-font-face-in-css/",
      "https://developer.mozilla.org/en-US/docs/Web/CSS/Reference",
      "#separate-your-concerns",
      "https://realpython.com/python-modules-packages/",
      "https://developer.mozilla.org/en-US/docs/Web/CSS/Comments",
      "https://getbootstrap.com",
      "https://simplecss.org",
      "https://bulma.io",
      "https://realpython.com/django-todo-lists/",
      "https://realpython.com/django-flashcards-app/",
      "https://en.wikipedia.org/wiki/Reset_style_sheet",
      "https://files.realpython.com/media/09-external-css.a2eac66b17bd.png",
      "https://stackoverflow.com/questions/2612483/whats-so-bad-about-in-line-css",
      "/account/join/",
      "#use-classes-for-greater-flexibility",
      "https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors",
      "https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model",
      "https://developer.mozilla.org/en-US/docs/Learn/CSS",
      "/account/join/",
      "#handle-html-with-python",
      "#programmatically-write-html",
      "https://docs.python.org/3/library/unicodedata.html#module-unicodedata",
      "https://realpython.com/python-enumerate/",
      "https://realpython.com/terminal-commands/",
      "https://developer.mozilla.org/en-US/docs/Web/CSS/:nth-child",
      "https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables",
      "https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables",
      "/account/join/",
      "#create-html-entities-with-python",
      "https://html.spec.whatwg.org/multipage/named-characters.html#named-character-references",
      "https://en.wikipedia.org/wiki/UTF-8",
      "https://en.wikipedia.org/wiki/Whitespace_character",
      "https://en.wikipedia.org/wiki/Non-breaking_space",
      "https://files.realpython.com/media/12-nbsp.64c38a7ec439.png",
      "https://files.realpython.com/media/13-angle-brackets.56f9b437fc93.png",
      "https://docs.python.org/3.10/library/html.html",
      "#parse-html-with-python",
      "#links-images-and-tables",
      "https://realpython.com/bonus/html-css-python-code/",
      "https://realpython.com/python-web-scraping-practical-introduction/",
      "https://realpython.com/beautiful-soup-web-scraper-python/",
      "/account/join/",
      "#continue-with-html-and-css-in-python",
      "#javascript",
      "https://en.wikipedia.org/wiki/List_of_programming_languages_by_type#Interpreted_languages",
      "https://developer.mozilla.org/en-US/docs/Learn/JavaScript",
      "https://realpython.com/python-vs-javascript/",
      "#jinja",
      "https://realpython.com/python-strings/",
      "https://jinja.palletsprojects.com",
      "https://realpython.com/primer-on-jinja-templating/",
      "#flask",
      "https://flask.palletsprojects.com/",
      "https://realpython.com/what-is-pip/",
      "https://realpython.com/learning-paths/flask-by-example/",
      "#django",
      "https://www.djangoproject.com",
      "https://realpython.com/customize-django-admin-python/",
      "https://realpython.com/python-sql-libraries/",
      "https://realpython.com/tutorials/django/",
      "https://realpython.com/get-started-with-django-1/",
      "https://realpython.com/django-diary-project-python/",
      "https://realpython.com/django-social-network-1/",
      "/account/join/",
      "#pyscript",
      "https://pyscript.net",
      "https://pyscript.net",
      "https://realpython.com/pyscript-python-in-browser/",
      "#conclusion",
      "https://realpython.com/bonus/html-css-python-code/",
      "/feedback/survey/article/html-css-python/liked/?from=article-footer",
      "/feedback/survey/article/html-css-python/disliked/?from=article-footer"
    ]
  },
  {
    "id": 11,
    "title": "How to Check if a Python String Contains a Substring",
    "url": "https://realpython.com/python-string-contains-substring/",
    "pub_date": "2022-08-22T14:00:00+00:00",
    "tags": [
      "best-practices",
      "basics"
    ],
    "description": "In this tutorial, you'll learn the best way to check whether a Python string contains a substring. You'll also learn about idiomatic ways to inspect the substring further, match substrings with conditions using regular expressions, and search for substrings in pandas.",
    "text": "Conclusion\n Like a persistent treasure hunter, you found each \"secret\", no matter how well it was hidden! In the process, you learned that the best way to check whether a string contains a substring in Python is to use the in membership operator.You also learned how to descriptively use two other string methods, which are often misused to check for substrings:After that, you explored how to find substrings according to more advanced conditions with regular expressions and a few functions in Python\u2019s re module.Finally, you also learned how you can use the DataFrame method .str.contains() to check which entries in a pandas DataFrame contain a substring .You now know how to pick the most idiomatic approach when you\u2019re working with substrings in Python. Keep using the most descriptive method for the job, and you\u2019ll write code that\u2019s delightful to read and quick for others to understand.Free Download: Click here to download the sample code that you\u2019ll use to check if a string contains a substring.",
    "preview": false,
    "links": [
      "#how-to-confirm-that-a-python-string-contains-another-string",
      "#generalize-your-check-by-removing-case-sensitivity",
      "#learn-more-about-the-substring",
      "#find-a-substring-with-conditions-using-regex",
      "#find-a-substring-in-a-pandas-dataframe-column",
      "#conclusion",
      "/account/join/",
      "https://en.wikipedia.org/wiki/Substring",
      "https://realpython.com/read-write-files-python/",
      "https://realpython.com/python-input-output/",
      "#find-a-substring-in-a-pandas-dataframe-column",
      "https://realpython.com/bonus/python-string-contains-substring-code/",
      "#how-to-confirm-that-a-python-string-contains-another-string",
      "https://realpython.com/python-in-operator/",
      "https://realpython.com/python-in-operator/#pythons-not-in-operator",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/terminal-commands/",
      "https://docs.python.org/3.12/reference/expressions.html#membership-test-operations",
      "https://docs.python.org/3/library/stdtypes.html#truth-value-testing",
      "/account/join/",
      "#generalize-your-check-by-removing-case-sensitivity",
      "https://realpython.com/python-strings/#case-conversion",
      "#learn-more-about-the-substring",
      "https://realpython.com/python-exceptions/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-string-split-concatenate-join/",
      "/account/join/",
      "#find-a-substring-with-conditions-using-regex",
      "https://realpython.com/regex-python/",
      "https://realpython.com/regex-python/#metacharacters-that-match-a-single-character",
      "https://realpython.com/regex-python/#quantifiers",
      "https://realpython.com/regex-python-part-2/#match-object-methods-and-attributes",
      "https://docs.python.org/3/howto/regex.html#grouping",
      "https://docs.python.org/3/library/re.html#re.findall",
      "https://dbader.org/blog/python-iterators",
      "https://docs.python.org/3/library/re.html#match-objects",
      "https://docs.python.org/3/library/re.html#re.Match.group",
      "https://realpython.com/regex-python/",
      "/account/join/",
      "#find-a-substring-in-a-pandas-dataframe-column",
      "https://realpython.com/python-csv/",
      "https://realpython.com/openpyxl-excel-spreadsheets-python/",
      "https://realpython.com/bonus/python-string-contains-substring-code/",
      "https://realpython.com/pandas-dataframe/",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://realpython.com/pandas-read-write-files/#installing-pandas",
      "https://pandas.pydata.org/docs/reference/api/pandas.Series.str.contains.html",
      "https://pandas.pydata.org/docs/user_guide/10min.html#getting",
      "https://pandas.pydata.org/docs/user_guide/indexing.html#indexing-and-selecting-data",
      "#conclusion",
      "https://realpython.com/bonus/python-string-contains-substring-code/",
      "/feedback/survey/article/python-string-contains-substring/liked/?from=article-footer",
      "/feedback/survey/article/python-string-contains-substring/disliked/?from=article-footer"
    ]
  },
  {
    "id": 12,
    "title": "How to Find an Absolute Value in Python",
    "url": "https://realpython.com/python-absolute-value/",
    "pub_date": "2022-08-17T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn how to calculate the absolute value in Python using the built-in abs() function. You'll also implement the corresponding mathematical formulas from scratch. Finally, you'll change the behavior of abs() in your own classes by hooking into Python's interface.",
    "text": "Conclusion\n Implementing formulas for an absolute value in Python is a breeze. However, Python already comes with the versatile abs() function, which lets you calculate the absolute value of various types of numbers, including integers, floating-point numbers, complex numbers, and more. You can also use abs() on instances of custom classes and third-party library objects.In this tutorial, you learned how to:With this knowledge, you\u2019re equipped with an efficient tool to calculate absolute values in Python.Sample Code: Click here to download the sample code that you\u2019ll use to find absolute values in Python.",
    "preview": false,
    "links": [
      "#defining-the-absolute-value",
      "#implementing-the-absolute-value-function-in-python",
      "#using-the-built-in-abs-function-with-numbers",
      "#integers-and-floating-point-numbers",
      "#complex-numbers",
      "#fractions-and-decimals",
      "#calling-abs-on-other-python-objects",
      "#numpy-arrays-and-pandas-series",
      "#your-very-own-data-types",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/bonus/python-absolute-value-code/",
      "#defining-the-absolute-value",
      "https://en.wikipedia.org/wiki/Vector_(mathematics_and_physics)",
      "https://en.wikipedia.org/wiki/Real_number",
      "https://realpython.com/python-complex-numbers/",
      "https://en.wikipedia.org/wiki/Piecewise",
      "https://en.wikipedia.org/wiki/Number_line",
      "https://files.realpython.com/media/plot_number_line.293268c27c16.jpg",
      "https://en.wikipedia.org/wiki/Velocity",
      "https://en.wikipedia.org/wiki/Speed",
      "https://realpython.com/list-comprehension-python/",
      "https://en.wikipedia.org/wiki/Norm_(mathematics)#Euclidean_norm",
      "/account/join/",
      "#implementing-the-absolute-value-function-in-python",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-conditional-statements/#conditional-expressions-pythons-ternary-operator",
      "https://realpython.com/python-min-and-max/",
      "https://realpython.com/python-square-root-function/",
      "https://docs.python.org/3/library/functions.html#pow",
      "https://realpython.com/python-modules-packages/#the-import-statement",
      "https://realpython.com/python-numbers/#exponents",
      "https://en.wikipedia.org/wiki/Nth_root",
      "https://realpython.com/python-numbers/#floating-point-numbers",
      "https://realpython.com/python-numbers/#integers",
      "https://realpython.com/python-strings/",
      "#using-the-built-in-abs-function-with-numbers",
      "https://en.wikipedia.org/wiki/Machine_code",
      "/account/join/",
      "#integers-and-floating-point-numbers",
      "https://docs.python.org/3/library/functions.html",
      "#complex-numbers",
      "https://realpython.com/python-complex-numbers/",
      "https://files.realpython.com/media/complexn.580985f6c3a4.png",
      "#fractions-and-decimals",
      "https://realpython.com/python-fractions/",
      "https://realpython.com/python-rounding/#the-decimal-class",
      "https://docs.python.org/3/tutorial/floatingpoint.html#representation-error",
      "/account/join/",
      "#calling-abs-on-other-python-objects",
      "https://realpython.com/python-map-function/",
      "#numpy-arrays-and-pandas-series",
      "https://realpython.com/numpy-array-programming/",
      "https://realpython.com/python-lists-tuples/#modifying-multiple-list-values",
      "https://realpython.com/pandas-python-explore-dataset/",
      "https://realpython.com/pandas-dataframe/",
      "https://realpython.com/python-dicts/",
      "https://docs.python.org/3/library/calendar.html#module-calendar",
      "/account/join/",
      "#your-very-own-data-types",
      "https://realpython.com/c-for-python-programmers/",
      "https://pubs.opengroup.org/onlinepubs/000095399/functions/fabs.html",
      "https://pubs.opengroup.org/onlinepubs/000095399/functions/hypot.html",
      "https://docs.python.org/3/reference/datamodel.html#object.__abs__",
      "https://docs.python.org/3/glossary.html#term-special-method",
      "https://en.wikipedia.org/wiki/Euclidean_space",
      "https://en.wikipedia.org/wiki/Hypotenuse",
      "https://en.wikipedia.org/wiki/Variadic_function",
      "#conclusion",
      "https://realpython.com/bonus/python-absolute-value-code/",
      "/feedback/survey/article/python-absolute-value/liked/?from=article-footer",
      "/feedback/survey/article/python-absolute-value/disliked/?from=article-footer"
    ]
  },
  {
    "id": 13,
    "title": "Your Python Coding Environment on Windows: Setup Guide",
    "url": "https://realpython.com/python-coding-setup-windows/",
    "pub_date": "2022-07-25T14:00:00+00:00",
    "tags": [
      "basics",
      "tools"
    ],
    "description": "With this opinionated guide to setting up a basic, fully featured and flexible setup for Python coding and open source contributing when working from Windows, you'll go from a fresh install to ready to contribute, and even check out a PowerShell script to automate much of the process.",
    "text": "Other Nifty Windows Software\n Now that you have Windows all set up for Python coding, you may want to make your life even easier. Here are some great Windows utilities that can help you do just that:With these utilities installed, you\u2019re ready to tackle any coding challenge.",
    "preview": false,
    "links": [
      "#setting-up-your-basic-python-coding-environment-in-windows",
      "#updating-your-windows-installation",
      "#discovering-the-windows-terminal",
      "#installing-windows-terminal",
      "#configuring-general-windows-settings",
      "#managing-software-in-windows",
      "#loosening-your-execution-policy",
      "#installing-chocolatey",
      "#using-chocolatey",
      "#debloating-your-machine-and-uninstallating-software",
      "#navigating-the-windows-command-line",
      "#installing-powershell-core",
      "#getting-to-grips-with-powershell-basics",
      "#customizing-your-powershell-experience",
      "#discovering-powershell-modules",
      "#configuring-environment-variables",
      "#discovering-environment-variables-with-powershell",
      "#understanding-the-path-environment-variable",
      "#setting-and-changing-environment-variables",
      "#changing-the-path-environment-variable",
      "#setting-up-core-python-coding-software-in-windows",
      "#installing-python-with-pyenv-for-windows",
      "#installing-git-on-windows",
      "#using-ssh-to-connect-to-github",
      "#setting-up-vs-code",
      "#testing-out-your-setup",
      "#fast-tracking-your-windows-python-coding-setup",
      "#configuration-repository",
      "#running-a-setup-script",
      "#conclusion",
      "#other-nifty-windows-software",
      "/account/join/",
      "",
      "#fast-tracking-your-windows-python-coding-setup",
      "#setting-up-your-basic-python-coding-environment-in-windows",
      "#setting-up-your-basic-python-coding-environment-in-windows",
      "/account/join/",
      "#updating-your-windows-installation",
      "https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux",
      "https://lolnein.com/2018/01/26/updateandrestart/",
      "https://files.realpython.com/media/win-10-setup-10-check-for-updates-button_-_Copy.33c5d4db0630.png",
      "#discovering-the-windows-terminal",
      "https://realpython.com/python-subprocess/#introduction-to-the-shell-and-text-based-programs-with-subprocess",
      "https://github.com/microsoft/terminal",
      "https://files.realpython.com/media/win-10-setup_windows_terminal.a53e3d57c1ea.png",
      "https://conemu.github.io/",
      "#installing-windows-terminal",
      "https://apps.microsoft.com/store/detail/windows-terminal/9N0DX20HK701",
      "https://github.com/mkevenaar/chocolatey-packages/issues/124",
      "https://github.com/microsoft/terminal/releases/",
      "https://files.realpython.com/media/win-10-setup-14-windows-powershell_-_cropped.f114376b1071.png",
      "/account/join/",
      "#configuring-general-windows-settings",
      "#app-execution-aliases",
      "#installing-python-with-pyenv-for-windows",
      "https://files.realpython.com/media/win-10-setup-75-app-execution-alias.2667fc1df46d.png",
      "#configuring-environment-variables",
      "#windows-updates",
      "https://files.realpython.com/media/win-10-setup-11-advanced-options-cropped.f8ebcac892c3.png",
      "#windows-explorer",
      "https://files.realpython.com/media/win-10-setup-43-explorer_settings.66b8e45bee43.png",
      "/account/join/",
      "#managing-software-in-windows",
      "https://en.wikipedia.org/wiki/Windows_Installer",
      "https://docs.microsoft.com/en-us/windows/security/identity-protection/user-account-control/how-user-account-control-works",
      "https://files.realpython.com/media/win-10-setup-23-UAC_-_Copy.820d325c85cd.png",
      "https://en.wikipedia.org/wiki/Package_manager",
      "https://brew.sh/",
      "https://en.wikipedia.org/wiki/APT_(software)",
      "https://docs.fedoraproject.org/en-US/quick-docs/dnf/",
      "https://wiki.archlinux.org/title/pacman",
      "https://chocolatey.org/",
      "https://docs.microsoft.com/en-us/windows/package-manager/winget/",
      "#loosening-your-execution-policy",
      "#running-a-setup-script",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies",
      "#installing-chocolatey",
      "#running-a-setup-script",
      "https://realpython.com/python-subprocess/#introduction-to-pipes",
      "/account/join/",
      "#using-chocolatey",
      "https://www.sudo.ws/",
      "https://github.com/gerardog/gsudo",
      "https://community.chocolatey.org/packages",
      "https://www.7-zip.org/",
      "https://en.wikipedia.org/wiki/Software_bloat#Bloatware",
      "#debloating-your-machine-and-uninstallating-software",
      "https://en.wikipedia.org/wiki/Pre-installed_software",
      "https://en.wikipedia.org/wiki/Microsoft_Defender",
      "https://community.chocolatey.org/packages/bulk-crap-uninstaller",
      "https://files.realpython.com/media/2022-07-04_19_06_07-Window.04cfbf56077a.png",
      "https://community.chocolatey.org/packages/GeekUninstaller",
      "https://winaero.com/winaero-tweaker/",
      "https://en.wikipedia.org/wiki/Cortana_(virtual_assistant)",
      "https://www.microsoft.com/microsoft-365/onedrive/online-cloud-storage",
      "/account/join/",
      "#navigating-the-windows-command-line",
      "https://files.realpython.com/media/command_prompt.a97034040ae7.png",
      "https://github.com/PowerShell/PowerShell",
      "https://twitter.com/brucepayette",
      "https://en.wikipedia.org/wiki/DevOps",
      "https://github.com/PowerShell/PowerShell",
      "#installing-powershell-core",
      "https://files.realpython.com/media/win-10-setup-Powershell.adead2d055be.png",
      "#getting-to-grips-with-powershell-basics",
      "https://en.wikipedia.org/wiki/POSIX",
      "https://realpython.com/python3-object-oriented-programming/",
      "https://realpython.com/asins/1633430294/",
      "/account/join/",
      "#customizing-your-powershell-experience",
      "https://www.gnu.org/software/bash/manual/html_node/Bash-Startup-Files.html",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_variables",
      "https://en.wikipedia.org/wiki/Windows_Notepad",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/set-alias",
      "https://docs.microsoft.com/en-us/powershell/scripting/learn/ps101/09-functions",
      "https://man7.org/linux/man-pages/man1/grep.1.html",
      "https://scoop.sh/#/",
      "https://man7.org/linux/man-pages/man1/grep.1.html",
      "https://man7.org/linux/man-pages/man1/less.1.html",
      "https://en.wikipedia.org/wiki/Cowsay",
      "/account/join/",
      "#discovering-powershell-modules",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_modules",
      "https://github.com/vors/ZLocation",
      "https://ohmyposh.dev/",
      "https://github.com/kelleyma49/PSFzf",
      "https://github.com/junegunn/fzf",
      "https://github.com/dahlbyk/posh-git",
      "https://realpython.com/python-idle/#code-completion-and-call-tips",
      "https://realpython.com/python-git-github-intro/",
      "https://docs.microsoft.com/en-us/powershell/module/powershellget/install-module",
      "#configuring-environment-variables",
      "#discovering-environment-variables-with-powershell",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables",
      "https://en.wikipedia.org/wiki/User_space_and_kernel_space",
      "#understanding-the-path-environment-variable",
      "https://en.wikipedia.org/wiki/PATH_(variable)",
      "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_split?view=powershell-7.2",
      "/account/join/",
      "#setting-and-changing-environment-variables",
      "https://docs.microsoft.com/en-us/dotnet/api/system.environment.setenvironmentvariable?view=net-6.0",
      "#changing-the-path-environment-variable",
      "/account/join/",
      "#setting-up-core-python-coding-software-in-windows",
      "#installing-python-with-pyenv-for-windows",
      "https://github.com/pyenv-win/pyenv-win",
      "https://realpython.com/intro-to-pyenv/",
      "#app-execution-aliases",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://realpython.com/intro-to-pyenv/",
      "https://github.com/pyenv-win/pyenv-win",
      "#installing-git-on-windows",
      "https://realpython.com/python-git-github-intro/",
      "https://github.com/",
      "https://en.wikipedia.org/wiki/Configuration_file",
      "https://realpython.com/python-git-github-intro/#committing-changes",
      "/account/join/",
      "#using-ssh-to-connect-to-github",
      "https://en.wikipedia.org/wiki/Secure_Shell",
      "https://www.openssh.com/",
      "https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse",
      "https://community.chocolatey.org/packages/openssh/8.0.0.1",
      "https://github.com/signup",
      "#setting-up-vs-code",
      "https://realpython.com/python-development-visual-studio-code/",
      "https://insights.stackoverflow.com/survey/2021#section-most-popular-technologies-integrated-development-environment",
      "https://marketplace.visualstudio.com/items?itemName=ms-python.python",
      "https://files.realpython.com/media/2022-07-12_11_01_02-Visual_Studio_Code.6ebb0e5c321f.png",
      "https://code.visualstudio.com/docs/editor/intellisense",
      "https://code.visualstudio.com/docs/remote/wsl",
      "https://code.visualstudio.com/docs/editor/settings-sync",
      "#testing-out-your-setup",
      "#fast-tracking-your-windows-python-coding-setup",
      "https://boxstarter.org/",
      "https://www.ansible.com/",
      "#configuration-repository",
      "https://files.realpython.com/media/Github_raw_button.53b59120c681.png",
      "https://gist.github.com/",
      "https://bitly.com/",
      "#running-a-setup-script",
      "#loosening-your-execution-policy",
      "#app-execution-aliases",
      "#configuration-repository",
      "#configuring-general-windows-settings",
      "#debloating-your-machine-and-uninstallating-software",
      "#conclusion",
      "",
      "#other-nifty-windows-software",
      "https://www.voidtools.com/",
      "https://docs.microsoft.com/en-us/windows/wsl/install",
      "https://www.autohotkey.com/",
      "/feedback/survey/article/python-coding-setup-windows/liked/?from=article-footer",
      "/feedback/survey/article/python-coding-setup-windows/disliked/?from=article-footer"
    ]
  },
  {
    "id": 14,
    "title": "NumPy's max() and maximum(): Find Extreme Values in Arrays",
    "url": "https://realpython.com/numpy-max-maximum/",
    "pub_date": "2022-07-13T14:00:00+00:00",
    "tags": [
      "data-science",
      "basics"
    ],
    "description": "In this introduction to NumPy, you'll learn how to find extreme values using the max() and maximum() functions. This includes finding the maximum element in an array or along a given axis of an array, as well as comparing two arrays to find the larger element in each index position.",
    "text": "Conclusion\n In this tutorial, you\u2019ve explored the NumPy library\u2019s max() and maximum() operations to find the maximum values within or across arrays. Here\u2019s what you\u2019ve learned:Along the way, you\u2019ve learned or refreshed your knowledge of the basics of NumPy syntax. NumPy is a hugely popular library because of its powerful support for array operations.Now that you\u2019ve mastered the details of NumPy\u2019s max() and maximum(), you\u2019re ready to use them in your applications, or continue learning about more of the hundreds of array functions supported by NumPy.Free Bonus: Click here to get access to a free NumPy Resources Guide that points you to the best tutorials, videos, and books for improving your NumPy skills.If you\u2019re interested in using NumPy for data science, then you\u2019ll also want to investigate pandas, a  very popular data-science library built on top of NumPy. You can learn about it in The Pandas DataFrame: Make Working With Data Delightful. And if you want to produce compelling images from data, take a look at Python Plotting With Matplotlib (Guide).The applications of NumPy are limitless. Wherever your NumPy adventure takes you next, go forth and matrix-multiply!",
    "preview": false,
    "links": [
      "#numpy-numerical-python",
      "#introducing-numpy",
      "#creating-and-using-numpy-arrays",
      "#creating-arrays-in-other-ways",
      "#numpys-max-the-maximum-element-in-an-array",
      "#using-max",
      "#handling-missing-values-in-npmax",
      "#exploring-related-maximum-functions",
      "#numpys-maximum-maximum-elements-across-arrays",
      "#using-npmaximum",
      "#handling-missing-values-in-npmaximum",
      "#advanced-usage",
      "#reusing-memory",
      "#filtering-arrays",
      "#comparing-differently-shaped-arrays-with-broadcasting",
      "#following-broadcasting-rules",
      "#conclusion",
      "/account/join/",
      "#",
      "#numpy-numerical-python",
      "https://numpy.org",
      "https://en.wikipedia.org/wiki/Array_data_structure",
      "/account/join/",
      "#introducing-numpy",
      "https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy-ndarray",
      "https://realpython.com/c-for-python-programmers/",
      "https://realpython.com/python-lists-tuples/#python-lists",
      "https://realpython.com/python-scipy-fft/#the-fourier-transform",
      "https://realpython.com/python-linear-algebra/",
      "https://www.astropy.org/",
      "https://qiskit.org",
      "https://biopython.org/",
      "https://realpython.com/pandas-dataframe/",
      "https://realpython.com/python-scipy-cluster-optimize/",
      "https://realpython.com/python-matplotlib-guide/",
      "https://seaborn.pydata.org/",
      "https://realpython.com/what-is-pip/",
      "https://realpython.com/python-virtual-environments-a-primer/#the-conda-package-and-environment-manager",
      "https://realpython.com/numpy-tutorial/",
      "https://numpy.org/doc/stable/user/absolute_beginners.html",
      "#creating-and-using-numpy-arrays",
      "https://realpython.com/python-lists-tuples/",
      "https://numpy.org/doc/stable/reference/arrays.ndarray.html",
      "/account/join/",
      "#creating-arrays-in-other-ways",
      "https://realpython.com/how-to-use-numpy-arange/",
      "https://realpython.com/python-range/",
      "https://realpython.com/python-numbers/#floating-point-numbers",
      "https://numpy.org/devdocs/user/how-to-io.html",
      "https://numpy.org/devdocs/reference/generated/numpy.asarray.html",
      "https://numpy.org/devdocs/user/basics.creation.html#creating-arrays-from-raw-bytes-through-the-use-of-strings-or-buffers",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/python-strings/#string-slicing",
      "https://numpy.org/doc/stable/index.html",
      "#numpys-max-the-maximum-element-in-an-array",
      "https://realpython.com/python-min-and-max/",
      "#using-max",
      "/account/join/",
      "#handling-missing-values-in-npmax",
      "https://numpy.org/doc/stable/reference/constants.html#numpy.nan",
      "#exploring-related-maximum-functions",
      "/account/join/",
      "#numpys-maximum-maximum-elements-across-arrays",
      "#using-npmaximum",
      "#handling-missing-values-in-npmaximum",
      "#handling-missing-values-in-npmax",
      "/account/join/",
      "#advanced-usage",
      "#reusing-memory",
      "https://realpython.com/interacting-with-python/",
      "#filtering-arrays",
      "/account/join/",
      "#comparing-differently-shaped-arrays-with-broadcasting",
      "#following-broadcasting-rules",
      "https://realpython.com/numpy-reshape/",
      "https://numpy.org/doc/stable/reference/arrays.scalars.html",
      "#following-broadcasting-rules",
      "https://realpython.com/numpy-array-programming/#broadcasting",
      "https://numpy.org/doc/stable/user/basics.broadcasting.html",
      "/account/join/",
      "#conclusion",
      "#",
      "https://realpython.com/pandas-dataframe/",
      "https://realpython.com/python-matplotlib-guide/",
      "/feedback/survey/article/numpy-max-maximum/liked/?from=article-footer",
      "/feedback/survey/article/numpy-max-maximum/disliked/?from=article-footer"
    ]
  },
  {
    "id": 15,
    "title": "How Can You Emulate Do-While Loops in Python?",
    "url": "https://realpython.com/python-do-while/",
    "pub_date": "2022-06-20T14:00:00+00:00",
    "tags": [
      "python",
      "best-practices",
      "basics"
    ],
    "description": "In this tutorial, you'll learn how to emulate do-while loops in Python. The most common technique to do this is to create an infinite while loop with a conditional statement that controls the loop and jumps out of it using a break statement.",
    "text": "Conclusion\n In this tutorial, you\u2019ve learned to emulate a do-while loop in Python. The language doesn\u2019t have this loop construct, which you can find in languages like C, C++, Java, and JavaScript. You learned that you can always write a do-while loop with the help of a regular while loop, and you can use one of several different patterns to accomplish it.The most common technique to emulate do-while loops is to create an infinite while loop with a conditional statement at the end of the loop\u2019s body. This conditional controls the loop and jumps out of it using the break statement.You also learned how to use a couple of alternative techniques to provide the same functionality as a do-while loop. Your options include doing the first set of operations before the loop or using a Boolean variable initially set to True to control the loop.With all this knowledge, you\u2019re ready to start emulating do-while loops in your own Python code.Free Download: Get a sample chapter from Python Tricks: The Book that shows you Python\u2019s best practices with simple examples you can apply instantly to write more beautiful + Pythonic code.",
    "preview": false,
    "links": [
      "#in-short-use-a-while-loop-and-the-break-statement",
      "#how-do-do-while-loops-work-in-practice",
      "#what-are-the-differences-between-do-while-and-while-loops",
      "#what-alternative-can-you-use-to-emulate-do-while-loops-in-python",
      "#doing-the-first-operation-before-the-loop",
      "#using-an-initially-true-loop-condition",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/c-for-python-programmers/",
      "https://realpython.com/python-vs-cpp/",
      "https://realpython.com/java-vs-python/",
      "https://realpython.com/python-vs-javascript/",
      "https://en.wikipedia.org/wiki/Do_while_loop",
      "https://en.wikipedia.org/wiki/Control_flow",
      "https://en.wikipedia.org/wiki/While_loop",
      "https://twitter.com/gvanrossum",
      "https://mail.python.org/pipermail/python-ideas/2013-June/021610.html",
      "https://peps.python.org/pep-0315/",
      "https://twitter.com/raymondh/status/1528772337306419200",
      "https://realpython.com/bonus/python-tricks-sample-pdf/",
      "#in-short-use-a-while-loop-and-the-break-statement",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/python-keywords/#iteration-keywords-for-while-break-continue-else",
      "https://realpython.com/python-conditional-statements/",
      "https://twitter.com/raymondh/status/1528772339818717185",
      "https://docs.python.org/3/library/functions.html#input",
      "https://docs.python.org/3/library/functions.html#int",
      "/account/join/",
      "#how-do-do-while-loops-work-in-practice",
      "https://realpython.com/python-vs-javascript/",
      "https://realpython.com/python-variables/",
      "https://realpython.com/python-print/",
      "#what-are-the-differences-between-do-while-and-while-loops",
      "#what-alternative-can-you-use-to-emulate-do-while-loops-in-python",
      "#doing-the-first-operation-before-the-loop",
      "/account/join/",
      "#using-an-initially-true-loop-condition",
      "https://realpython.com/python-boolean/",
      "#conclusion",
      "https://realpython.com/python-while-loop/#infinite-loops",
      "https://realpython.com/python-keywords/#iteration-keywords-for-while-break-continue-else",
      "https://realpython.com/bonus/python-tricks-sample-pdf/",
      "/feedback/survey/article/python-do-while/liked/?from=article-footer",
      "/feedback/survey/article/python-do-while/disliked/?from=article-footer"
    ]
  },
  {
    "id": 16,
    "title": "Build Your Python Project Documentation With MkDocs",
    "url": "https://realpython.com/python-project-documentation-with-mkdocs/",
    "pub_date": "2022-06-15T14:00:00+00:00",
    "tags": [
      "basics",
      "projects",
      "tools"
    ],
    "description": "In this tutorial, you'll learn how to build professional documentation for a Python package using MkDocs and mkdocstrings. These tools allow you to generate nice-looking and modern documentation from Markdown files and, more importantly, from your code's docstrings.",
    "text": "Next Steps\n You can use the same approach outlined in this tutorial to document your own Python project. Follow the tutorial a second time, but instead of using the calculator module, write the documentation for your own package. This process will help train your understanding of how to create helpful documentation.Additionally, here are some ideas to take your project documentation to the next level:What other ideas can you come up with to improve your project documentation and make it less effort for you to keep it up-to-date? Be creative, have fun, and leave a comment below!",
    "preview": false,
    "links": [
      "#demo",
      "#project-overview",
      "#prerequisites",
      "#step-1-set-up-your-environment-for-building-documentation",
      "#step-2-create-the-sample-python-package",
      "#step-3-write-and-format-your-docstrings",
      "#understand-python-docstrings",
      "#add-function-docstrings-to-your-python-project",
      "#write-examples-and-test-them-using-doctest",
      "#use-type-hints-to-provide-automatic-type-information",
      "#add-module-docstrings",
      "#step-4-prepare-your-documentation-with-mkdocs",
      "#create-your-mkdocs-project-structure",
      "#adapt-your-project-settings-file",
      "#create-static-pages-from-markdown",
      "#insert-information-from-docstrings",
      "#step-5-build-your-documentation-with-mkdocs",
      "#step-6-host-your-documentation-on-github",
      "#create-a-github-repository",
      "#deploy-your-documentation-to-github",
      "#conclusion",
      "#next-steps",
      "/account/join/",
      "/courses/building-project-documentation-mkdocs/",
      "https://typer.tiangolo.com",
      "https://realpython.com/fastapi-python-web-apis/",
      "https://realpython.com/bonus/mkdocs-code/",
      "#demo",
      "/account/join/",
      "#project-overview",
      "https://diataxis.fr/",
      "https://diataxis.fr/adoption/",
      "https://www.djangoproject.com",
      "https://numpy.org",
      "https://diataxis.fr/tutorials/",
      "https://diataxis.fr/how-to-guides/",
      "https://diataxis.fr/reference/",
      "https://diataxis.fr/explanation/",
      "https://www.mkdocs.org",
      "http://mkdocstrings.github.io/",
      "https://github.com/squidfunk/mkdocs-material",
      "http://sphinx-autoapi.readthedocs.io/",
      "#prerequisites",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://realpython.com/what-is-pip/",
      "https://realpython.com/python-modules-packages/",
      "https://realpython.com/documenting-python-code/",
      "https://realpython.com/python-git-github-intro/",
      "#step-1-set-up-your-environment-for-building-documentation",
      "https://realpython.com/python-virtual-environments-a-primer/#why-do-you-need-virtual-environments",
      "#windows-1",
      "#linux-macos-1",
      "https://mkdocstrings.github.io/python/",
      "https://realpython.com/python-virtual-environments-a-primer/#pin-your-dependencies",
      "/account/join/",
      "#step-2-create-the-sample-python-package",
      "#step-3-write-and-format-your-docstrings",
      "https://realpython.com/python-ides-code-editors-guide/",
      "#step-3-write-and-format-your-docstrings",
      "https://realpython.com/documenting-python-code/#docstrings-background",
      "https://realpython.com/python-type-checking/#annotations",
      "#understand-python-docstrings",
      "https://peps.python.org/pep-0257/#multi-line-docstrings",
      "https://docs.python.org/3/library/functions.html#help",
      "https://docs.python.org/3/library/pydoc.html",
      "https://realpython.com/documenting-python-code/#package-and-module-docstrings",
      "https://peps.python.org/pep-0257/#multi-line-docstrings",
      "https://realpython.com/documenting-python-code/#class-docstrings",
      "https://www.python.org/dev/peps/pep-0257/",
      "https://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings",
      "https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard",
      "https://sphinx-rtd-tutorial.readthedocs.io/en/latest/docstrings.html#the-sphinx-docstring-format",
      "https://github.com/mkdocstrings/python/blob/e2719e6f6eb56d7031d97ab3e7718ec584c5299a/src/mkdocstrings_handlers/python/handler.py#L98",
      "/account/join/",
      "#add-function-docstrings-to-your-python-project",
      "https://peps.python.org/pep-0257/#one-line-docstrings",
      "#write-examples-and-test-them-using-doctest",
      "https://realpython.com/python-doctest/",
      "https://realpython.com/python-repl/",
      "#windows-2",
      "#linux-macos-2",
      "https://realpython.com/python-type-checking/#annotations",
      "/account/join/",
      "#use-type-hints-to-provide-automatic-type-information",
      "https://docs.python.org/3/library/typing.html#typing.Union",
      "https://docs.python.org/3/library/typing.html",
      "https://realpython.com/python310-new-features/#type-unions-aliases-and-guards",
      "https://mypy.readthedocs.io/en/stable/",
      "https://realpython.com/python-type-checking/",
      "https://en.wikipedia.org/wiki/Don%27t_repeat_yourself",
      "#add-module-docstrings",
      "https://en.wikipedia.org/wiki/Markdown",
      "https://realpython.com/python-import/#packages",
      "/account/join/",
      "#step-4-prepare-your-documentation-with-mkdocs",
      "#create-your-mkdocs-project-structure",
      "https://www.mkdocs.org/",
      "#adapt-your-project-settings-file",
      "https://realpython.com/python-yaml/",
      "https://material.io/design",
      "https://www.mkdocs.org/user-guide/configuration/#theme",
      "https://github.com/squidfunk/mkdocs-material",
      "https://files.realpython.com/media/mkdocs-material-default-welcome.2cd2f6fdb845.png",
      "/account/join/",
      "#create-static-pages-from-markdown",
      "#project-overview",
      "https://diataxis.fr/",
      "https://diataxis.fr/tutorials/",
      "https://diataxis.fr/how-to-guides/",
      "https://diataxis.fr/reference/",
      "https://diataxis.fr/explanation/",
      "/account/join/",
      "#insert-information-from-docstrings",
      "https://mkdocstrings.github.io/",
      "https://files.realpython.com/media/mkdocs-material-reference-filled.600851930c5f.png",
      "/account/join/",
      "#step-5-build-your-documentation-with-mkdocs",
      "#step-6-host-your-documentation-on-github",
      "https://pages.github.com/",
      "#create-a-github-repository",
      "#deploy-your-documentation-to-github",
      "https://docs.github.com/en/get-started/quickstart/create-a-repo",
      "https://files.realpython.com/media/mkdocs-new-gh-repo.a8d6f734c452.png",
      "https://files.realpython.com/media/mkdocs-gh-url.6431adfc78e4.png",
      "https://realpython.com/python-git-github-intro/#creating-a-new-repo",
      "/account/join/",
      "#deploy-your-documentation-to-github",
      "https://http.cat/404",
      "https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site",
      "#conclusion",
      "https://realpython.com/bonus/mkdocs-code/",
      "#next-steps",
      "https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/adding-a-code-of-conduct-to-your-project",
      "https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/adding-a-license-to-a-repository",
      "https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/setting-guidelines-for-repository-contributors",
      "https://squidfunk.github.io/mkdocs-material/creating-your-site/#advanced-configuration",
      "https://github.com/mkdocstrings/autorefs/",
      "https://squidfunk.github.io/mkdocs-material/customization/",
      "https://github.com/features/actions",
      "https://realpython.com/pypi-publish-python-package/",
      "/feedback/survey/article/python-project-documentation-with-mkdocs/liked/?from=article-footer",
      "/feedback/survey/article/python-project-documentation-with-mkdocs/disliked/?from=article-footer",
      "/courses/building-project-documentation-mkdocs/"
    ]
  },
  {
    "id": 17,
    "title": "Build a Quiz Application With Python",
    "url": "https://realpython.com/python-quiz-application/",
    "pub_date": "2022-06-08T14:00:00+00:00",
    "tags": [
      "basics",
      "projects"
    ],
    "description": "In this step-by-step project, you'll build a Python quiz application for the terminal. Your app will ask you multiple-choice questions that you can use to strengthen your own knowledge or challenge your friends to test theirs.",
    "text": "Next Steps\n As you\u2019ve followed along in this tutorial, you\u2019ve created a well-featured quiz application. However, there\u2019s still ample opportunity to improve on the project.Here are some ideas for additional features:You can also reuse the logic in this quiz application but change the front-end presentation layer. Maybe you can convert the project to a web application or create a flashcards app to help you prepare for your quizzes. Feel free to share your improvements in the comments below.",
    "preview": false,
    "links": [
      "#demo-your-python-quiz-application",
      "#project-overview",
      "#prerequisites",
      "#step-1-ask-questions",
      "#get-user-information-with-input",
      "#use-lists-and-tuples-to-avoid-repetitive-code",
      "#provide-multiple-choices",
      "#step-2-make-your-application-user-friendly",
      "#format-the-output-more-nicely",
      "#keep-score",
      "#handle-user-errors",
      "#add-variety-to-your-quiz",
      "#step-3-organize-your-code-with-functions",
      "#prepare-data",
      "#ask-questions",
      "#step-4-separate-data-into-its-own-file",
      "#move-questions-to-a-toml-file",
      "#add-flexibility-to-your-data-format",
      "#step-5-expand-your-quiz-functionality",
      "#allow-multiple-correct-answers",
      "#add-hints-to-help-the-user",
      "#add-explanations-to-reinforce-learning",
      "#step-6-support-several-quiz-topics",
      "#conclusion",
      "#next-steps",
      "/account/join/",
      "https://realpython.com/terminal-commands/",
      "https://www.merriam-webster.com/dictionary/quiz#first-known",
      "https://realpython.com/bonus/python-quiz-application-project-code/",
      "#demo-your-python-quiz-application",
      "/account/join/",
      "#project-overview",
      "https://en.wikipedia.org/wiki/Proof_of_concept",
      "#prerequisites",
      "https://realpython.com/python-input-output/",
      "https://realpython.com/python-data-structures/",
      "https://realpython.com/python-lists-tuples/#python-lists",
      "https://realpython.com/python-lists-tuples/#python-tuples",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/defining-your-own-python-function/",
      "#step-1-ask-questions",
      "https://realpython.com/bonus/python-quiz-application-project-code/",
      "#get-user-information-with-input",
      "https://realpython.com/python-input-output/#reading-input-from-the-keyboard",
      "https://realpython.com/interacting-with-python/",
      "https://realpython.com/python-assignment-operator/",
      "https://realpython.com/python-pyqt-gui-calculator/",
      "https://realpython.com/python-dice-roll/#parse-and-validate-the-users-input",
      "https://realpython.com/run-python-scripts/",
      "https://realpython.com/python-f-strings/",
      "https://realpython.com/python-formatted-output/#the-format_spec-component",
      "https://realpython.com/python-formatted-output/#the-conversion-component",
      "https://en.wikipedia.org/wiki/Don%27t_repeat_yourself",
      "/account/join/",
      "#use-lists-and-tuples-to-avoid-repetitive-code",
      "https://realpython.com/python-data-structures/",
      "https://realpython.com/python-lists-tuples/#python-tuples",
      "https://realpython.com/python-lists-tuples/#python-lists",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/python-refactoring/",
      "#provide-multiple-choices",
      "#step-2-make-your-application-user-friendly",
      "https://realpython.com/python-sort/",
      "https://realpython.com/python-enumerate/",
      "https://realpython.com/convert-python-string-to-int/",
      "/account/join/",
      "#step-2-make-your-application-user-friendly",
      "https://realpython.com/bonus/python-quiz-application-project-code/",
      "#format-the-output-more-nicely",
      "#provide-multiple-choices",
      "#keep-score",
      "/account/join/",
      "#handle-user-errors",
      "https://realpython.com/python-traceback/",
      "https://realpython.com/python-walrus-operator/",
      "https://realpython.com/python-walrus-operator/#while-loops",
      "https://realpython.com/invalid-syntax-python/",
      "https://realpython.com/python-walrus-operator/#while-loops",
      "#step-2-make-your-application-user-friendly",
      "#add-variety-to-your-quiz",
      "https://realpython.com/python-random/#the-random-module",
      "https://realpython.com/python-min-and-max/#clipping-values-to-the-edges-of-an-interval",
      "https://docs.python.org/3/library/random.html#random.shuffle",
      "https://docs.python.org/3/library/random.html#random.sample",
      "/account/join/",
      "#step-3-organize-your-code-with-functions",
      "https://realpython.com/python-refactoring/",
      "https://realpython.com/courses/refactoring-code-to-get-help/",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/bonus/python-quiz-application-project-code/",
      "#prepare-data",
      "https://realpython.com/python-git-github-intro/",
      "https://realpython.com/python-scope-legb-rule/#modules-the-global-scope",
      "/account/join/",
      "#ask-questions",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/if-name-main-python/",
      "https://realpython.com/python-import/#import-scripts-as-modules",
      "/account/join/",
      "#step-4-separate-data-into-its-own-file",
      "https://toml.io/",
      "https://realpython.com/python-json/",
      "https://realpython.com/python-yaml/",
      "https://realpython.com/python-mysql/",
      "https://realpython.com/introduction-to-mongodb-and-python/",
      "https://realpython.com/bonus/python-quiz-application-project-code/",
      "#move-questions-to-a-toml-file",
      "https://toml.io/",
      "https://realpython.com/python-hash-table/",
      "https://toml.io/en/v1.0.0",
      "https://github.com/toml-lang/toml/releases/tag/1.0.0",
      "https://pypi.org/project/tomli/",
      "https://peps.python.org/pep-0680/",
      "#windows-1",
      "#linux-macos-1",
      "https://realpython.com/what-is-pip/",
      "#windows-2",
      "#linux-macos-2",
      "https://realpython.com/python-repl/",
      "https://realpython.com/read-write-files-python/#buffered-binary-file-types",
      "https://realpython.com/python-encodings-guide/#enter-unicode",
      "https://github.com/hukkin/tomli#building-a-tomlitomllib-compatibility-layer",
      "https://realpython.com/python-pathlib/",
      "https://docs.python.org/3/reference/datamodel.html?highlight=__file__",
      "/account/join/",
      "#add-flexibility-to-your-data-format",
      "/account/join/",
      "#step-5-expand-your-quiz-functionality",
      "https://realpython.com/bonus/python-quiz-application-project-code/",
      "#allow-multiple-correct-answers",
      "https://realpython.com/python-sets/",
      "/account/join/",
      "#add-hints-to-help-the-user",
      "#add-explanations-to-reinforce-learning",
      "https://realpython.com/python-comments-guide/#python-multiline-comments",
      "https://realpython.com/python-return-statement/",
      "#step-6-support-several-quiz-topics",
      "https://realpython.com/bonus/python-quiz-application-project-code/",
      "https://realpython.com/bonus/python-quiz-application-project-code/",
      "#conclusion",
      "#next-steps",
      "https://realpython.com/python-mysql/",
      "https://realpython.com/django-setup/",
      "https://realpython.com/django-flashcards-app/",
      "/feedback/survey/article/python-quiz-application/liked/?from=article-footer",
      "/feedback/survey/article/python-quiz-application/disliked/?from=article-footer"
    ]
  },
  {
    "id": 18,
    "title": "Top Python Game Engines",
    "url": "https://realpython.com/top-python-game-engines/",
    "pub_date": "2022-05-04T14:00:00+00:00",
    "tags": [
      "gamedev",
      "basics"
    ],
    "description": "In this tutorial, you'll explore several Python game engines available to you. For each, you'll code simple examples and a more advanced game to learn the game engine's strengths and weaknesses.",
    "text": "Conclusion\n Congratulations, great game design is now within your reach! Thanks to Python and a buffet of highly capable Python game engines, you can create quality computer games much more easily than before. In this tutorial, you\u2019ve explored several such game engines, learning the information that you need to start crafting your own Python video games!By now, you\u2019ve seen some of the top Python game engines in action, and you\u2019ve:If you\u2019d like to review the code for the games in this tutorial, you can do so by clicking the link below:Get Source Code: Click here to get the source code you\u2019ll use to try out Python game engines.Now you can choose the best Python game engine for your purpose. So what are you waiting for? Get out there and write some games!",
    "preview": false,
    "links": [
      "#python-game-engines-overview",
      "#pygame",
      "#pygame-installation",
      "#basic-concepts",
      "#basic-application",
      "#advanced-application",
      "#pygame-zero",
      "#pygame-zero-installation",
      "#basic-concepts_1",
      "#sprites-and-images",
      "#advanced-application_1",
      "#arcade",
      "#arcade-installation",
      "#basic-concepts_2",
      "#advanced-application_2",
      "#adventurelib",
      "#adventurelib-installation",
      "#basic-concepts_3",
      "#advanced-application_3",
      "#renpy",
      "#renpy-installation",
      "#basic-concepts_4",
      "#advanced-application_4",
      "#other-notable-python-game-engines",
      "#sources-for-game-assets",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/python3-object-oriented-programming/",
      "https://realpython.com/bonus/top-python-game-engines-project-code/",
      "#python-game-engines-overview",
      "https://pypi.org/",
      "https://realpython.com/what-is-pip/",
      "https://www.unrealengine.com/",
      "https://unity.com/",
      "https://godotengine.org/",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://realpython.com/bonus/top-python-game-engines-project-code/",
      "/account/join/",
      "#pygame",
      "https://www.pygame.org",
      "https://realpython.com/pygame-a-primer/",
      "https://www.libsdl.org/",
      "#pygame-installation",
      "https://www.pygame.org/wiki/GettingStarted",
      "#basic-concepts",
      "https://realpython.com/pygame-a-primer/#processing-events",
      "https://realpython.com/pygame-a-primer/#sprites",
      "https://realpython.com/pygame-a-primer/#sprite-images",
      "https://realpython.com/pygame-a-primer/#sound-effects",
      "https://realpython.com/pygame-a-primer/#game-speed",
      "#basic-application",
      "https://files.realpython.com/media/pygame-basic.bbd1d3e0d9ea.png",
      "/account/join/",
      "#advanced-application",
      "https://files.realpython.com/media/pygame-game.94ec6e22001e.png",
      "#pygame-zero",
      "https://pygame-zero.readthedocs.io/en/stable/",
      "https://pygame-zero.readthedocs.io/en/stable/introduction.html",
      "https://scratch.mit.edu/",
      "https://pygame-zero.readthedocs.io/en/stable/from-scratch.html",
      "/account/join/",
      "#pygame-zero-installation",
      "https://www.raspberrypi.org/",
      "https://www.raspberrypi.com/news/raspbian-jessie-is-here/",
      "#basic-concepts_1",
      "https://files.realpython.com/media/pgzero-basic.03f85e5f089c.png",
      "https://realpython.com/bonus/top-python-game-engines-project-code/",
      "#sprites-and-images",
      "/account/join/",
      "#advanced-application_1",
      "https://files.realpython.com/media/pgzero-game.9b11812969b5.png",
      "#arcade",
      "https://realpython.com/arcade-python-game-framework/",
      "https://api.arcade.academy/en/latest/index.html",
      "https://twitter.com/professorcraven",
      "http://pyglet.org/",
      "https://realpython.com/python-type-checking/#hello-types",
      "https://api.arcade.academy/en/latest/index.html",
      "https://api.arcade.academy/en/latest/examples/index.html",
      "https://api.arcade.academy/en/latest/api/physics_engines.html",
      "/account/join/",
      "#arcade-installation",
      "https://realpython.com/what-is-pip/",
      "https://api.arcade.academy/en/latest/install/index.html",
      "https://api.arcade.academy/en/latest/install/windows.html",
      "https://api.arcade.academy/en/latest/install/mac.html",
      "https://api.arcade.academy/en/latest/install/linux.html",
      "https://api.arcade.academy/en/latest/install/source.html",
      "#basic-concepts_2",
      "https://files.realpython.com/media/arcade-basic.1b3f1f033717.png",
      "https://api.arcade.academy/en/latest/api/drawing_primitives.html",
      "https://api.arcade.academy/en/latest/arcade.color.html",
      "#advanced-application_2",
      "https://files.realpython.com/media/arcade-game.86aef9b5a501.png",
      "https://realpython.com/python-pathlib/",
      "/account/join/",
      "#adventurelib",
      "https://en.wikipedia.org/wiki/Zork",
      "https://en.wikipedia.org/wiki/Interactive_fiction",
      "https://adventurelib.readthedocs.io/en/stable/",
      "#adventurelib-installation",
      "https://github.com/lordmauve/adventurelib",
      "#basic-concepts_3",
      "https://realpython.com/primer-on-python-decorators/",
      "https://files.realpython.com/media/adventurelib_screenshot.776d25728ac7.png",
      "https://docs.python.org/3.7/library/stdtypes.html#textseq",
      "https://files.realpython.com/media/adventurelib_screenshot_2.da4c6a432924.png",
      "/account/join/",
      "#advanced-application_3",
      "https://realpython.com/bonus/top-python-game-engines-project-code/",
      "https://files.realpython.com/media/adventurelib-map.64ff7cbdea90.png",
      "https://files.realpython.com/media/adventurelib_screenshot_3.fb864208a1f9.png",
      "/account/join/",
      "#renpy",
      "https://en.wikipedia.org/wiki/Visual_novel",
      "https://www.renpy.org/",
      "#renpy-installation",
      "https://www.renpy.org/latest.html",
      "#windows-1",
      "#linux-1",
      "#macos-1",
      "https://files.realpython.com/media/renpy-launcher.fda3bd695f70.png",
      "#basic-concepts_4",
      "https://files.realpython.com/media/renpy-basic.c467db0e49e5.png",
      "/account/join/",
      "#advanced-application_4",
      "https://files.realpython.com/media/renpy-blacksmith.2c5137b779d4.png",
      "https://files.realpython.com/media/renpy-giant-fight.7fe536c52775.png",
      "https://www.renpy.org/doc/html/",
      "/account/join/",
      "#other-notable-python-game-engines",
      "https://wasabi2d.readthedocs.io/",
      "https://moderngl.readthedocs.io/en/latest/",
      "http://python.cocos2d.org/",
      "https://www.panda3d.org/",
      "https://www.ursinaengine.org/",
      "https://ppb.dev/",
      "#sources-for-game-assets",
      "https://opengameart.org/",
      "https://kenney.nl/",
      "https://kenney.itch.io/kenney-donation",
      "https://itch.io",
      "#conclusion",
      "https://realpython.com/bonus/top-python-game-engines-project-code/",
      "/feedback/survey/article/top-python-game-engines/liked/?from=article-footer",
      "/feedback/survey/article/top-python-game-engines/disliked/?from=article-footer"
    ]
  },
  {
    "id": 19,
    "title": "Python's min() and max(): Find Smallest and Largest Values",
    "url": "https://realpython.com/python-min-and-max/",
    "pub_date": "2022-05-02T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn how to use Python's built-in min() and max() functions to find the smallest and largest values. You'll also learn how to modify their standard behavior by providing a suitable key function. Finally, you'll code a few practical examples of using min() and max().",
    "text": "Conclusion\n Now you know how to use Python\u2019s built-in min() and max() functions to find the smallest and largest values in an iterable or in a series of two or more regular arguments. You also learned about a few other characteristics of min() and max() that can make them useful in your day-to-day programming.In this tutorial, you learned how to:Additionally, you\u2019ve coded a handful of practical examples using min() and max() to approach real-world problems that you might run into while coding. You\u2019ve also a written custom version of min() and max() in pure Python, a nice learning exercise that helped you understand the logic behind these built-in functions.Free Bonus: 5 Thoughts On Python Mastery, a free course for Python developers that shows you the roadmap and the mindset you\u2019ll need to take your Python skills to the next level.",
    "preview": false,
    "links": [
      "#getting-started-with-pythons-min-and-max-functions",
      "#calling-min-and-max-with-a-single-iterable-argument",
      "#calling-min-and-max-with-multiple-arguments",
      "#using-min-and-max-with-strings-and-iterables-of-strings",
      "#processing-dictionaries-with-min-and-max",
      "#tweaking-the-standard-behavior-of-min-and-max-with-key-and-default",
      "#using-min-and-max-with-comprehensions-and-generator-expressions",
      "#putting-pythons-min-and-max-into-action",
      "#removing-the-smallest-and-largest-numbers-in-a-list",
      "#building-lists-of-minimum-and-maximum-values",
      "#clipping-values-to-the-edges-of-an-interval",
      "#finding-the-closest-points",
      "#identifying-cheap-and-expensive-products",
      "#finding-coprime-integer-numbers",
      "#timing-different-implementations-of-your-code",
      "#exploring-the-role-of-__lt__-and-__gt__-in-min-and-max",
      "#emulating-pythons-min-and-max",
      "#understanding-the-code-behind-min-and-max",
      "#planning-your-custom-min-and-max-versions",
      "#standardizing-the-input-data-from-args",
      "#processing-the-default-argument",
      "#handling-the-optional-key-function",
      "#finding-minimum-and-maximum-values",
      "#coding-your-custom-min-and-max-functions",
      "#conclusion",
      "/account/join/",
      "https://docs.python.org/3/glossary.html#term-iterable",
      "https://realpython.com/bonus/python-mastery-course/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "#getting-started-with-pythons-min-and-max-functions",
      "https://docs.python.org/3/library/functions.html",
      "https://docs.python.org/3/glossary.html#term-iterable",
      "https://realpython.com/python-return-statement/",
      "/account/join/",
      "#calling-min-and-max-with-a-single-iterable-argument",
      "https://realpython.com/defining-your-own-python-function/#keyword-only-arguments",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/python-strings/",
      "#calling-min-and-max-with-multiple-arguments",
      "/account/join/",
      "#using-min-and-max-with-strings-and-iterables-of-strings",
      "https://docs.python.org/3/howto/unicode.html#the-string-type",
      "https://en.wikipedia.org/wiki/UTF-8",
      "https://en.wikipedia.org/wiki/ASCII",
      "https://en.wikipedia.org/wiki/ASCII#Control_code_chart",
      "https://realpython.com/python-encodings-guide/",
      "https://docs.python.org/3/library/functions.html#ord",
      "/account/join/",
      "#processing-dictionaries-with-min-and-max",
      "https://realpython.com/python-dicts/#dkeys",
      "https://realpython.com/python-dicts/#dvalues",
      "https://realpython.com/python-dicts/#ditems",
      "#tweaking-the-standard-behavior-of-min-and-max-with-key-and-default",
      "https://docs.python.org/3/library/functions.html#int",
      "https://docs.python.org/3/reference/datamodel.html#object.__call__",
      "https://docs.python.org/3/glossary.html#term-special-method",
      "/account/join/",
      "#using-min-and-max-with-comprehensions-and-generator-expressions",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "#putting-pythons-min-and-max-into-action",
      "#removing-the-smallest-and-largest-numbers-in-a-list",
      "https://en.wikipedia.org/wiki/Outlier",
      "#building-lists-of-minimum-and-maximum-values",
      "https://realpython.com/numpy-tutorial/",
      "/account/join/",
      "#clipping-values-to-the-edges-of-an-interval",
      "https://numpy.org/doc/stable/reference/generated/numpy.clip.html",
      "https://numpy.org/doc/stable/reference/generated/numpy.array.html",
      "#finding-the-closest-points",
      "https://en.wikipedia.org/wiki/Cartesian_coordinate_system",
      "https://realpython.com/python-math-module/",
      "https://docs.python.org/3/library/math.html#math.dist",
      "https://en.wikipedia.org/wiki/Euclidean_distance",
      "https://realpython.com/python-lambda/",
      "#identifying-cheap-and-expensive-products",
      "/account/join/",
      "#finding-coprime-integer-numbers",
      "https://en.wikipedia.org/wiki/Coprime_integers",
      "https://en.wikipedia.org/wiki/Boolean-valued_function",
      "https://realpython.com/python-range/",
      "#timing-different-implementations-of-your-code",
      "https://docs.python.org/3/library/timeit.html#timeit.repeat",
      "https://realpython.com/python-timer/",
      "https://realpython.com/python-map-function/",
      "#exploring-the-role-of-__lt__-and-__gt__-in-min-and-max",
      "https://en.wikipedia.org/wiki/Duck_typing",
      "https://docs.python.org/3/reference/datamodel.html#object.__lt__",
      "https://docs.python.org/3/reference/datamodel.html#object.__gt__",
      "https://docs.python.org/3/library/functools.html#functools.total_ordering",
      "https://realpython.com/primer-on-python-decorators/",
      "/account/join/",
      "#emulating-pythons-min-and-max",
      "#understanding-the-code-behind-min-and-max",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-operators-expressions/#comparison-operators",
      "https://realpython.com/python-namespaces-scope/#variable-scope",
      "https://en.wikipedia.org/wiki/Don%27t_repeat_yourself",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-exceptions/",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-kwargs-and-args/",
      "https://realpython.com/python-optional-arguments/",
      "/account/join/",
      "#planning-your-custom-min-and-max-versions",
      "#standardizing-the-input-data-from-args",
      "https://realpython.com/python-ides-code-editors-guide/",
      "https://realpython.com/len-python-function/",
      "https://docs.python.org/3/library/functions.html#func-list",
      "https://realpython.com/python-traceback/",
      "#processing-the-default-argument",
      "https://realpython.com/null-in-python/",
      "/account/join/",
      "#handling-the-optional-key-function",
      "https://docs.python.org/3/library/functions.html#callable",
      "#finding-minimum-and-maximum-values",
      "https://realpython.com/python-variables/",
      "https://realpython.com/python-zip-function/",
      "#coding-your-custom-min-and-max-functions",
      "https://docs.python.org/3/library/operator.html#operator.gt",
      "https://docs.python.org/3/library/operator.html?highlight=gt#operator.lt",
      "https://docs.python.org/3/library/operator.html",
      "https://realpython.com/python-boolean/",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/bonus/python-mastery-course/",
      "/feedback/survey/article/python-min-and-max/liked/?from=article-footer",
      "/feedback/survey/article/python-min-and-max/disliked/?from=article-footer"
    ]
  },
  {
    "id": 20,
    "title": "Python GUI Programming With Tkinter",
    "url": "https://realpython.com/python-gui-tkinter/",
    "pub_date": "2022-03-30T14:00:00+00:00",
    "tags": [
      "gui",
      "basics"
    ],
    "description": "In this tutorial, you'll learn the basics of GUI programming with Tkinter, the de facto Python GUI framework. Master GUI programming concepts such as widgets, geometry managers, and event handlers. Then, put it all together by building two applications: a temperature converter and a text editor.",
    "text": "Additional Resources\n In this tutorial, you touched on just the foundations of creating Python GUI applications with Tkinter. There are a number of additional topics that aren\u2019t covered here. In this section, you\u2019ll find some of the best resources available to help you continue on your journey.Tkinter ReferencesHere are some official resources to check out:Additional WidgetsIn this tutorial, you learned about the Label, Button, Entry, Text, and Frame widgets. There are several other widgets in Tkinter, all of which are essential for building real-world applications. Here are some resources to continue learning about widgets:Application DistributionOnce you\u2019ve created an application with Tkinter, you probably want to distribute it to your colleagues and friends. Here are some tutorials to get you going with that process:Other GUI FrameworksTkinter isn\u2019t your only choice for a Python GUI framework. If Tkinter doesn\u2019t meet the needs of your project, then here are some other frameworks to consider: Take the Quiz: Test your knowledge with our interactive \u201cPython GUI Programming With Tkinter\u201d quiz. Upon completion you will receive a score so you can track your learning progress over time:",
    "preview": false,
    "links": [
      "#building-your-first-python-gui-application-with-tkinter",
      "#adding-a-widget",
      "#check-your-understanding",
      "#working-with-widgets",
      "#displaying-text-and-images-with-label-widgets",
      "#displaying-clickable-buttons-with-button-widgets",
      "#getting-user-input-with-entry-widgets",
      "#getting-multiline-user-input-with-text-widgets",
      "#assigning-widgets-to-frames-with-frame-widgets",
      "#adjusting-frame-appearance-with-reliefs",
      "#understanding-widget-naming-conventions",
      "#check-your-understanding_1",
      "#controlling-layout-with-geometry-managers",
      "#the-pack-geometry-manager",
      "#the-place-geometry-manager",
      "#the-grid-geometry-manager",
      "#check-your-understanding_2",
      "#making-your-applications-interactive",
      "#using-events-and-event-handlers",
      "#using-bind",
      "#using-command",
      "#check-your-understanding_3",
      "#building-a-temperature-converter-example-app",
      "#building-a-text-editor-example-app",
      "#conclusion",
      "#additional-resources",
      "/account/join/",
      "http://wiki.python.org/moin/GuiProgramming",
      "https://wiki.python.org/moin/TkInter",
      "https://realpython.com/products/python-basics-book/",
      "https://realpython.com/python-idle/",
      "https://realpython.com/bonus/python-mastery-course/",
      "/quizzes/python-gui-programming-with-tkinter/",
      "#building-your-first-python-gui-application-with-tkinter",
      "https://realpython.com/interacting-with-python/#using-the-python-interpreter-interactively",
      "https://realpython.com/installing-python/",
      "https://www.python.org/downloads/windows/",
      "https://www.python.org/downloads/mac-osx/",
      "https://python.org",
      "https://github.com/Homebrew/homebrew-core/pull/34424",
      "https://www.tcl.tk/",
      "https://www.python.org/downloads/mac-osx/",
      "https://realpython.com/installing-python/#compiling-python-from-source",
      "https://realpython.com/intro-to-pyenv/",
      "https://realpython.com/python-variables/",
      "https://files.realpython.com/media/17_4_tk_window.662fec42e4f9.jpg",
      "/account/join/",
      "#adding-a-widget",
      "https://files.realpython.com/media/17_4_tk_hello_win10.724293a495ad.jpg",
      "https://en.wikipedia.org/wiki/Blocking_(computing)",
      "https://realpython.com/python-repl/",
      "#check-your-understanding",
      "https://files.realpython.com/media/tk_check_undersanding_1.b2fa6d154791.jpg",
      "#working-with-widgets",
      "https://en.wikipedia.org/wiki/Look_and_feel",
      "https://tkdocs.com/tutorial/morewidgets.html#progressbar",
      "https://en.wikipedia.org/wiki/Theme_(computing)",
      "https://en.wikipedia.org/wiki/CSS",
      "https://en.wikipedia.org/wiki/Separation_of_concerns",
      "https://tkdocs.com/tutorial/widgets.html",
      "https://tkdocs.com/tutorial/morewidgets.html",
      "https://tkdocs.com/tutorial/index.html",
      "https://en.wikipedia.org/wiki/Language_binding",
      "https://en.wikipedia.org/wiki/Tk_(software)",
      "https://en.wikipedia.org/wiki/Tcl",
      "/account/join/",
      "#displaying-text-and-images-with-label-widgets",
      "https://realpython.com/python-strings/",
      "https://htmlcolorcodes.com/color-names/",
      "https://www.tcl.tk/man/tcl/TkCmd/colors.html",
      "https://en.wikipedia.org/wiki/Web_colors#Hex_triplet",
      "https://htmlcolorcodes.com/",
      "https://files.realpython.com/media/17_5_tk_label.ce0f9500e539.jpg",
      "/account/join/",
      "#displaying-clickable-buttons-with-button-widgets",
      "https://files.realpython.com/media/17_5_tk_button.ce3900b68c42.jpg",
      "#getting-user-input-with-entry-widgets",
      "https://files.realpython.com/media/17_5_tk_entry.80eef52739f8.jpg",
      "https://files.realpython.com/media/17_5_tk_entry_1.35bce0b5e439.jpg",
      "https://files.realpython.com/media/17_5_tk_entry_2.31c04085cc0e.jpg",
      "https://realpython.com/python-strings/",
      "https://files.realpython.com/media/17_5_tk_entry_3.5d0e4ae44f1a.jpg",
      "https://realpython.com/python-strings/#string-slicing",
      "https://files.realpython.com/media/17_5_tk_entry.80eef52739f8.jpg",
      "https://files.realpython.com/media/17_5_tk_entry_3.5d0e4ae44f1a.jpg",
      "https://files.realpython.com/media/17_5_tk_entry_1.35bce0b5e439.jpg",
      "/account/join/",
      "#getting-multiline-user-input-with-text-widgets",
      "https://files.realpython.com/media/17_5_tk_text_box.5f015dd1a394.jpg",
      "https://files.realpython.com/media/17_5_tk_text_box_1.e9709c22033e.jpg",
      "https://realpython.com/python-exceptions/",
      "https://files.realpython.com/media/17_5_tk_text_box_2.985554457108.jpg",
      "https://files.realpython.com/media/17_5_tk_text_box_3.67faf1fda71e.jpg",
      "https://files.realpython.com/media/17_5_tk_text_box_4.01e407c75ef8.jpg",
      "https://files.realpython.com/media/17_5_tk_text_box.5f015dd1a394.jpg",
      "https://files.realpython.com/media/17_5_tk_text_box_5.c3837f3994aa.jpg",
      "https://files.realpython.com/media/17_5_tk_text_box_6.d7d7b727dfdc.jpg",
      "https://files.realpython.com/media/17_5_tk_text_box_1.e9709c22033e.jpg",
      "#additional-resources",
      "/account/join/",
      "#assigning-widgets-to-frames-with-frame-widgets",
      "https://files.realpython.com/media/17_5_tk_blank_frame_win10.82f9561c0d36.jpg",
      "https://files.realpython.com/media/17_5_tk_two_frames_win10.457151c8c834.jpg",
      "https://files.realpython.com/media/17_5_tk_two_frames_swapped_win10.d9fb1d7ddc83.jpg",
      "/account/join/",
      "#adjusting-frame-appearance-with-reliefs",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-for-loop/",
      "https://files.realpython.com/media/17_5_tk_frame_reliefs_win10.31d7bc5f4fe6.jpg",
      "#understanding-widget-naming-conventions",
      "https://realpython.com/python-memory-management/",
      "https://docs.python.org/3/glossary.html#term-garbage-collection",
      "#check-your-understanding_1",
      "https://files.realpython.com/media/tk_check_understanding_2.be35a125aad2.jpg",
      "/account/join/",
      "#controlling-layout-with-geometry-managers",
      "#the-pack-geometry-manager",
      "https://files.realpython.com/media/17_6_tk_pack_vertical_win10.2c0e13c90511.jpg",
      "https://files.realpython.com/media/17_6_tk_pack_vertical_full_width_win10.ffff0f85671e.jpg",
      "https://files.realpython.com/media/tk_horizontal_fill_responsive.76c441ecf737.gif",
      "https://files.realpython.com/media/17_6_tk_pack_horizontal_full_height_win10.639bb8a42f2a.jpg",
      "https://files.realpython.com/media/tk_vertical_fill_responsive.0bd13c880f26.gif",
      "https://files.realpython.com/media/tk_full_responsive.57f1ff6e53ab.gif",
      "/account/join/",
      "#the-place-geometry-manager",
      "https://files.realpython.com/media/17_6_tk_place_win10.676b862a7edd.jpg",
      "#the-grid-geometry-manager",
      "https://files.realpython.com/media/17_6_tk_grid_win10.57eb680e5e6e.jpg",
      "https://files.realpython.com/media/17_6_tk_grid_with_ext_padding_win10.20856fb630e9.jpg",
      "https://files.realpython.com/media/17_6_tk_grid_with_ext_and_int_padding_win10.9b58ecc7853a.jpg",
      "https://files.realpython.com/media/tk_grid_unresponsive.c9f491987957.gif",
      "https://files.realpython.com/media/tk_grid_responsive.02edef27aff4.gif",
      "https://files.realpython.com/media/17_6_tk_grid_col_and_row_size_win10.c6e03e9483bd.jpg",
      "https://files.realpython.com/media/17_6_tk_grid_stickty_n_win10.3d0cfb33e19f.jpg",
      "https://files.realpython.com/media/17_6_tk_grid_sticky_corners_win10.67d522344ba9.jpg",
      "https://files.realpython.com/media/17_6_tk_grid_sticky_fill_win10.beea5d30319e.jpg",
      "https://tkdocs.com/tutorial/grid.html",
      "https://tkdocs.com/tutorial/index.html",
      "/account/join/",
      "#check-your-understanding_2",
      "https://files.realpython.com/media/17_6_tk_exercise2_win10.43ba39ae6134.jpg",
      "https://realpython.com/python-lists-tuples/#python-lists",
      "https://realpython.com/python-enumerate/",
      "#making-your-applications-interactive",
      "#using-events-and-event-handlers",
      "/account/join/",
      "#using-bind",
      "https://en.wikipedia.org/wiki/Standard_streams#Standard_output_(stdout)",
      "https://web.archive.org/web/20190512164300/http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/event-types.html",
      "https://web.archive.org/web/20190524140835/https://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html",
      "#using-command",
      "https://files.realpython.com/media/17_7_tk_counter_window_win10.5aca78b398e7.jpg",
      "https://files.realpython.com/media/tk_counter_app.dccc1ac46c32.gif",
      "#check-your-understanding_3",
      "https://realpython.com/python-random/#the-random-module",
      "https://realpython.com/python-random/",
      "https://files.realpython.com/media/17_7_tk_exercise2_win10.924c5d1dfb03.jpg",
      "#building-a-temperature-converter-example-app",
      "https://realpython.com/interacting-with-python/",
      "https://realpython.com/python-encodings-guide/",
      "https://files.realpython.com/media/17_8_tk_temp_converter_win10.8e1ebad492b9.jpg",
      "#building-a-text-editor-example-app",
      "https://files.realpython.com/media/rsz_17_9_tk_sketch4c44ff377f03.06ff19dd59cf.jpg",
      "https://files.realpython.com/media/17_9_tk_text_editor_win10.9182347f4b5d.jpg",
      "https://realpython.com/working-with-files-in-python/",
      "#conclusion",
      "#additional-resources",
      "https://docs.python.org/3/library/tkinter.html",
      "https://web.archive.org/web/20190524140835/https://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html",
      "https://www.tcl.tk/man/tcl/TkCmd/contents.htm",
      "https://tkdocs.com/tutorial/index.html",
      "https://tkdocs.com/tutorial/widgets.html",
      "https://tkdocs.com/tutorial/morewidgets.html",
      "https://docs.python.org/3/library/tkinter.ttk.html",
      "https://docs.python.org/3/library/tkinter.scrolledtext.html",
      "https://realpython.com/pyinstaller-python/",
      "https://tryexceptpass.org/article/package-python-as-executable/",
      "https://gregoryszorc.com/blog/2019/06/24/building-standalone-python-applications-with-pyoxidizer/",
      "https://realpython.com/python-gui-with-wxpython/",
      "https://realpython.com/python-pyqt-gui-calculator/",
      "https://realpython.com/mobile-app-kivy-python/",
      "https://realpython.com/pysimplegui-python/",
      "/quizzes/python-gui-programming-with-tkinter/",
      "/feedback/survey/article/python-gui-tkinter/liked/?from=article-footer",
      "/feedback/survey/article/python-gui-tkinter/disliked/?from=article-footer"
    ]
  },
  {
    "id": 21,
    "title": "Manage Your To-Do Lists Using Python and Django",
    "url": "https://realpython.com/django-todo-lists/",
    "pub_date": "2022-03-02T14:00:00+00:00",
    "tags": [
      "web-dev",
      "basics",
      "projects",
      "django"
    ],
    "description": "Use Django to build a to-do list manager app. This step-by-step project will teach you how to use Django's class-based views to build a powerful app while dramatically reducing your development time.",
    "text": "Next Steps\n Now that you\u2019ve completed this tutorial, it\u2019s time to think about where you can go from here. By further developing this app, you can build your knowledge and consolidate your skills while creating an attractive addition to your programming portfolio. Here are a few suggestions for what you might do next:Style the application: The to-do list application\u2019s user interface (UI) is unapologetically bland and unadorned. Simple.css has helped you to create an acceptable UI, but nothing more than that. You might want to investigate some ways to improve it:The Simple.css website has links to several sites that have built on the base CSS from Simple.css to produce something more attractive.There are many other free CSS libraries out there! For instance, you could investigate Bootstrap, Semantic UI, or Font Awesome.You can also use raw CSS. CSS is an extremely powerful styling tool, and if you\u2019re willing to invest the time to learn its ins and outs, there\u2019s no limit to what you can make it do.Enhance the application: There are plenty of useful features that you could add to this application. One obvious improvement would be to handle task completion and deadlines. You could add a completed field to the to-do items so that your users can distinguish between completed tasks and those that still need action. You could even add logic to send email reminders if they miss due dates.Make it multi-user: If you find a to-do list manager useful, then a logical step might be to extend it to multiple users, such as members of your team. Each user could have their own space with their individual to-do lists, and you could consider implementing shared lists to enable cooperative planning. In this case, you should explore some of Django\u2019s security options, as well as learning about a multi-user database like MySQL or Postgres.Explore more class-based views:\nIn this project, you\u2019ve made use of several of Django\u2019s generic class-based views. But Django has a rich architecture of class-based views and mixins to enable maximum code reuse, and you\u2019ve hardly scratched the surface here. You can read much more about your options in the official Django documentation on class-based views.Build your expertise with more Django projects: Real Python has many Django project tutorials at different levels. Now that you\u2019ve completed this one, you might want to investigate some of these:",
    "preview": false,
    "links": [
      "#demo",
      "#project-overview",
      "#prerequisites",
      "#step-1-set-up-your-virtual-environment-and-django",
      "#create-a-virtual-environment-and-a-project-directory",
      "#install-and-test-django",
      "#step-2-create-your-django-to-do-app",
      "#scaffold-the-parent-project",
      "#get-started-on-your-django-to-do-list-app",
      "#configure-your-project",
      "#step-3-design-your-to-do-data",
      "#define-your-data-models",
      "#create-the-database",
      "#step-4-add-your-sample-to-do-data",
      "#meet-the-django-admin-interface",
      "#start-a-to-do-list",
      "#step-5-create-the-django-views",
      "#code-your-first-view",
      "#understand-templates",
      "#create-a-base-template",
      "#add-a-home-page-template",
      "#build-a-request-handler",
      "#reuse-class-based-generic-views",
      "#subclass-listview-to-display-a-list-of-to-do-items",
      "#show-the-items-in-a-to-do-list",
      "#step-6-create-and-update-model-objects-in-django",
      "#lists-and-items",
      "#new-views",
      "#step-7-delete-to-do-lists-and-items",
      "#make-deleteview-subclasses",
      "#define-deletion-confirmations-and-urls",
      "#enable-deletions",
      "#step-8-use-your-django-to-do-list-app",
      "#conclusion",
      "#next-steps",
      "/account/join/",
      "https://docs.djangoproject.com/en/4.0/topics/templates/",
      "https://docs.djangoproject.com/en/4.0/topics/class-based-views/",
      "https://en.wikipedia.org/wiki/Object-oriented_programming",
      "https://realpython.com/bonus/django-todo-lists-project-code/",
      "#demo",
      "/account/join/",
      "#project-overview",
      "https://en.wikipedia.org/wiki/Data_model",
      "https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping",
      "https://docs.djangoproject.com/en/4.0/ref/django-admin/#runserver",
      "https://docs.djangoproject.com/en/4.0/ref/contrib/admin/",
      "https://docs.djangoproject.com/en/4.0/topics/templates/",
      "https://realpython.com/html-css-python/#the-html-document",
      "https://docs.djangoproject.com/en/4.0/topics/http/views/",
      "https://docs.djangoproject.com/en/4.0/topics/http/urls/",
      "#prerequisites",
      "https://realpython.com/interacting-with-python/#running-a-python-script-from-the-command-line",
      "https://realpython.com/python-idle/",
      "https://realpython.com/python-modules-packages/",
      "https://realpython.com/python3-object-oriented-programming/",
      "https://realpython.com/inheritance-composition-python/",
      "https://realpython.com/tutorials/django/",
      "#step-1-set-up-your-virtual-environment-and-django",
      "https://realpython.com/bonus/django-todo-lists-project-code/",
      "#create-a-virtual-environment-and-a-project-directory",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "#windows-1",
      "#linux-macos-1",
      "#windows-2",
      "#linux-macos-2",
      "/account/join/",
      "#install-and-test-django",
      "#windows-3",
      "#linux-macos-3",
      "https://realpython.com/interacting-with-python/#starting-the-interpreter",
      "https://realpython.com/django-setup/#install-django-and-pin-your-dependencies",
      "#windows-4",
      "#linux-macos-4",
      "#step-2-create-your-django-to-do-app",
      "https://realpython.com/bonus/django-todo-lists-project-code/",
      "/account/join/",
      "#scaffold-the-parent-project",
      "#windows-5",
      "#linux-macos-5",
      "https://realpython.com/python-modules-packages/",
      "#get-started-on-your-django-to-do-list-app",
      "#windows-6",
      "#linux-macos-6",
      "/account/join/",
      "#configure-your-project",
      "https://docs.djangoproject.com/en/3.2/ref/settings/#databases",
      "https://realpython.com/python-sql-libraries/#sqlite",
      "#windows-7",
      "#linux-macos-7",
      "https://files.realpython.com/media/django_success.40ae2eb35ef2.png",
      "/account/join/",
      "#step-3-design-your-to-do-data",
      "https://realpython.com/bonus/django-todo-lists-project-code/",
      "#define-your-data-models",
      "https://docs.djangoproject.com/en/4.0/ref/models/fields/#django.db.models.ForeignKey",
      "https://en.wikipedia.org/wiki/One-to-many_(data_model)",
      "https://realpython.com/courses/pythonic-oop-string-conversion-repr-vs-str/",
      "#create-the-database",
      "https://realpython.com/django-migrations-a-primer/",
      "#windows-8",
      "#linux-macos-8",
      "https://en.wikipedia.org/wiki/Audit_trail",
      "/account/join/",
      "#step-4-add-your-sample-to-do-data",
      "https://realpython.com/customize-django-admin-python/#setting-up-the-django-admin",
      "https://realpython.com/bonus/django-todo-lists-project-code/",
      "#meet-the-django-admin-interface",
      "#windows-9",
      "#linux-macos-9",
      "#windows-10",
      "#linux-macos-10",
      "https://files.realpython.com/media/DjangoAdminLandingPage.5438319f846f.png",
      "#start-a-to-do-list",
      "https://files.realpython.com/media/Django_Admin_Add_todo_item_form.be27b53ccd16.png",
      "/account/join/",
      "#step-5-create-the-django-views",
      "https://realpython.com/bonus/django-todo-lists-project-code/",
      "#code-your-first-view",
      "https://en.wikipedia.org/wiki/Request%E2%80%93response",
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods",
      "https://docs.djangoproject.com/en/4.0/ref/class-based-views/generic-display/",
      "https://en.wikipedia.org/wiki/Create,_read,_update_and_delete",
      "#step-3-design-your-to-do-data",
      "/account/join/",
      "#understand-templates",
      "https://docs.djangoproject.com/en/3.2/topics/templates/",
      "#create-a-base-template",
      "http://simplecss.org",
      "https://realpython.com/html-css-python/#style-your-content-with-css",
      "#add-a-home-page-template",
      "#windows-11",
      "#linux-macos-11",
      "https://realpython.com/python37-new-features/#context-variables",
      "https://en.wikipedia.org/wiki/Mustache_(template_system)",
      "/account/join/",
      "#build-a-request-handler",
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET",
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST",
      "https://realpython.com/python-https/",
      "https://docs.djangoproject.com/en/4.0/topics/http/urls/#url-dispatcher",
      "https://www.google.com/url?q=https://docs.djangoproject.com/en/4.0/topics/http/urls/",
      "#step-2-create-your-django-to-do-app",
      "#create-a-base-template",
      "https://en.wikipedia.org/wiki/Request%E2%80%93response",
      "#add-a-home-page-template",
      "#reuse-class-based-generic-views",
      "/account/join/",
      "#subclass-listview-to-display-a-list-of-to-do-items",
      "#code-your-first-view",
      "https://realpython.com/python-super/",
      "#show-the-items-in-a-to-do-list",
      "https://docs.djangoproject.com/en/3.2/ref/templates/builtins/",
      "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclick",
      "#subclass-listview-to-display-a-list-of-to-do-items",
      "#windows-12",
      "#linux-macos-12",
      "#step-6-create-and-update-model-objects-in-django",
      "https://realpython.com/bonus/django-todo-lists-project-code/",
      "#lists-and-items",
      "https://docs.djangoproject.com/en/3.2/ref/class-based-views/generic-editing/#createview",
      "https://docs.djangoproject.com/en/3.2/ref/class-based-views/generic-editing/#createview",
      "https://docs.djangoproject.com/en/3.2/ref/class-based-views/generic-editing/#updateview",
      "#define-your-data-models",
      "#new-views",
      "https://en.wikipedia.org/wiki/Cross-site_request_forgery",
      "#step-7-delete-to-do-lists-and-items",
      "https://realpython.com/bonus/django-todo-lists-project-code/",
      "#make-deleteview-subclasses",
      "https://docs.djangoproject.com/en/3.2/ref/class-based-views/generic-editing/#deleteview",
      "#define-deletion-confirmations-and-urls",
      "#enable-deletions",
      "#step-8-use-your-django-to-do-list-app",
      "https://realpython.com/bonus/django-todo-lists-project-code/",
      "https://files.realpython.com/media/Screenshot_from_2022-01-13_15-20-37.5920adaeadfb.png",
      "https://files.realpython.com/media/Screenshot_from_2022-01-13_15-24-55.68904e678850.png",
      "https://files.realpython.com/media/Screenshot_from_2022-01-13_15-29-12.c39a475e22fd.png",
      "https://files.realpython.com/media/Screenshot_from_2022-01-13_15-31-37.5b8ce5271bc5.png",
      "https://realpython.com/bonus/django-todo-lists-project-code/",
      "#conclusion",
      "https://docs.djangoproject.com/en/4.0/topics/http/views/",
      "#next-steps",
      "https://simplecss.org/",
      "https://getbootstrap.com/",
      "https://semantic-ui.com/",
      "http://fontawesome.io/",
      "https://www.w3schools.com/Css/css_intro.asp",
      "https://realpython.com/python-send-email/",
      "https://realpython.com/django-nginx-gunicorn/",
      "https://www.mysql.com/",
      "https://www.postgresql.org/",
      "https://docs.djangoproject.com/en/3.2/ref/class-based-views/",
      "https://realpython.com/get-started-with-django-1/",
      "https://realpython.com/location-based-app-with-geodjango-tutorial/",
      "https://realpython.com/customize-django-admin-python/",
      "https://realpython.com/django-social-network-1/",
      "/feedback/survey/article/django-todo-lists/liked/?from=article-footer",
      "/feedback/survey/article/django-todo-lists/disliked/?from=article-footer"
    ]
  },
  {
    "id": 22,
    "title": "Python's all(): Check Your Iterables for Truthiness",
    "url": "https://realpython.com/python-all/",
    "pub_date": "2022-02-09T14:00:00+00:00",
    "tags": [
      "python",
      "best-practices",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn how to use Python's all() function to check if all the items in an iterable are truthy. You'll also code various examples that showcase a few interesting use cases of all() and highlight how you can use this function in Python.",
    "text": "Conclusion\n Now you know how to check if all the items in an existing iterable are truthy by using Python\u2019s built-in all() function. You also know how to use this function to find out if the items in an iterable meet a given condition or have a specific property.With this knowledge, you\u2019re now able to write more readable and efficient Python code.In this tutorial, you learned:Additionally, you coded several practical examples that helped you understand how powerful all() can be and what some of its most common use cases in Python programming are.Free PDF Download: Python 3 Cheat Sheet",
    "preview": false,
    "links": [
      "#evaluating-the-truth-value-of-items-in-iterables",
      "#getting-started-with-pythons-all",
      "#using-all-with-different-iterable-types",
      "#sequences",
      "#dictionaries",
      "#using-all-with-comprehensions-and-generator-expressions",
      "#comparing-all-with-the-and-boolean-operator",
      "#understanding-syntax-differences",
      "#returning-boolean-values-vs-operands",
      "#short-circuiting-the-evaluation",
      "#putting-all-into-action-practical-examples",
      "#improving-the-readability-of-long-compound-conditions",
      "#validating-iterables-of-numeric-values",
      "#validating-strings-and-iterables-of-strings",
      "#removing-rows-with-empty-fields-from-tabular-data",
      "#comparing-custom-data-structures",
      "#partially-emulating-pythons-zip-function",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/python-data-structures/",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-operators-expressions/",
      "https://realpython.com/python-boolean/#boolean-operators",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "https://realpython.com/bonus/python-cheat-sheet-short/",
      "#evaluating-the-truth-value-of-items-in-iterables",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/python-iterators-iterables/#getting-to-know-python-iterables",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-not-operator/",
      "https://realpython.com/python-return-statement/",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-data-structures/",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-numbers/",
      "https://docs.python.org/3/library/stdtypes.html#truth-value-testing",
      "https://realpython.com/null-in-python/",
      "https://realpython.com/python-complex-numbers/",
      "https://docs.python.org/3/library/decimal.html#decimal.Decimal",
      "https://realpython.com/python-fractions/",
      "https://realpython.com/python-sets/",
      "https://realpython.com/python-range/",
      "https://docs.python.org/3/reference/datamodel.html#object.__bool__",
      "https://docs.python.org/3/reference/datamodel.html#object.__len__",
      "https://docs.python.org/3/library/functions.html#all",
      "/account/join/",
      "#getting-started-with-pythons-all",
      "https://docs.python.org/3/library/functions.html#all",
      "https://realpython.com/c-for-python-programmers/",
      "https://twitter.com/gvanrossum",
      "https://www.artima.com/weblogs/viewpost.jsp?thread=98196",
      "https://realpython.com/any-python/",
      "https://realpython.com/python-reduce-function/",
      "https://realpython.com/python-filter-function/",
      "https://realpython.com/python-map-function/",
      "https://docs.python.org/3/whatsnew/2.5.html#other-language-changes",
      "https://twitter.com/raymondh",
      "https://en.wikipedia.org/wiki/Fold_(higher-order_function)",
      "https://en.wikipedia.org/wiki/Higher-order_function",
      "https://en.wikipedia.org/wiki/Boolean-valued_function",
      "https://blog.carlmjohnson.net/post/2020/python-square-of-opposition/",
      "https://en.wikipedia.org/wiki/Short-circuit_evaluation",
      "https://realpython.com/python-print/",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "https://en.wikipedia.org/wiki/Lazy_evaluation",
      "https://realpython.com/python-reverse-list/",
      "https://realpython.com/list-comprehension-python/",
      "/account/join/",
      "#using-all-with-different-iterable-types",
      "https://en.wikipedia.org/wiki/Duck_typing",
      "https://realpython.com/python-sets/",
      "#sequences",
      "https://realpython.com/python-range/",
      "#dictionaries",
      "https://realpython.com/iterate-through-dictionary-python/",
      "https://docs.python.org/3/library/stdtypes.html#dict.keys",
      "https://docs.python.org/3/library/stdtypes.html#dict.values",
      "/account/join/",
      "#using-all-with-comprehensions-and-generator-expressions",
      "https://en.wikipedia.org/wiki/Primality_test#Simple_methods",
      "https://realpython.com/len-python-function/",
      "/account/join/",
      "#comparing-all-with-the-and-boolean-operator",
      "https://realpython.com/python-and-operator/",
      "#understanding-syntax-differences",
      "#returning-boolean-values-vs-operands",
      "https://realpython.com/python-boolean/#comparison-operators",
      "https://realpython.com/python-and-operator/#using-pythons-and-operator-in-boolean-contexts",
      "https://realpython.com/python-while-loop/",
      "#short-circuiting-the-evaluation",
      "https://realpython.com/python-and-operator/#short-circuiting-the-evaluation",
      "https://realpython.com/introduction-to-python-generators/#using-generators",
      "https://realpython.com/python-enumerate/",
      "https://docs.python.org/3/library/functions.html#next",
      "/account/join/",
      "#putting-all-into-action-practical-examples",
      "#improving-the-readability-of-long-compound-conditions",
      "https://docs.python.org/3/library/functions.html#isinstance",
      "https://realpython.com/python-operators-expressions/#chained-comparisons",
      "#validating-iterables-of-numeric-values",
      "/account/join/",
      "#validating-strings-and-iterables-of-strings",
      "https://docs.python.org/3/library/stdtypes.html#textseq",
      "https://docs.python.org/3/library/stdtypes.html#string-methods",
      "#removing-rows-with-empty-fields-from-tabular-data",
      "https://realpython.com/python-filter-function/",
      "https://realpython.com/python-csv/",
      "https://docs.python.org/3/library/csv.html",
      "https://docs.python.org/3/library/index.html",
      "https://realpython.com/python-pretty-print/",
      "#comparing-custom-data-structures",
      "https://docs.python.org/3/library/collections.html#collections.UserList",
      "https://realpython.com/python-collections-module/",
      "https://docs.python.org/3/glossary.html#term-special-method",
      "https://docs.python.org/3/reference/datamodel.html#object.__gt__",
      "https://realpython.com/operator-function-overloading/",
      "/account/join/",
      "#partially-emulating-pythons-zip-function",
      "https://realpython.com/python-zip-function/",
      "https://realpython.com/python-kwargs-and-args/#using-the-python-args-variable-in-function-definitions",
      "https://realpython.com/introduction-to-python-generators/#understanding-the-python-yield-statement",
      "https://realpython.com/python310-new-features/",
      "https://realpython.com/python-zip-function/#passing-arguments-of-unequal-length",
      "#conclusion",
      "https://realpython.com/bonus/python-cheat-sheet-short/",
      "/feedback/survey/article/python-all/liked/?from=article-footer",
      "/feedback/survey/article/python-all/disliked/?from=article-footer"
    ]
  },
  {
    "id": 23,
    "title": "Using Python's pip to Manage Your Projects' Dependencies",
    "url": "https://realpython.com/what-is-pip/",
    "pub_date": "2022-02-02T14:00:00+00:00",
    "tags": [
      "basics",
      "tools"
    ],
    "description": "What is pip? In this beginner-friendly tutorial, you'll learn how to use pip, the standard package manager for Python, so that you can install and manage packages that aren't part of the Python standard library.",
    "text": "Conclusion\n Many Python projects use the pip package manager to manage their dependencies. It\u2019s included with the Python installer, and it\u2019s an essential tool for dependency management in Python.In this tutorial, you learned how to:In addition, you\u2019ve learned about the importance of keeping dependencies up to date and alternatives to pip that can help you manage those dependencies.By taking a closer look at pip, you\u2019ve explored an essential tool in your Python development workflows. With pip, you can install and manage any additional packages that you find on PyPI. You can use external packages from other developers as requirements and concentrate on the code that makes your project unique.",
    "preview": false,
    "links": [
      "#getting-started-with-pip",
      "#finding-pip-on-your-system",
      "#running-pip-as-a-module",
      "#using-pip-in-a-python-virtual-environment",
      "#reinstalling-pip-when-errors-occur",
      "#installing-packages-with-pip",
      "#using-the-python-package-index-pypi",
      "#using-a-custom-package-index",
      "#installing-packages-from-your-github-repositories",
      "#installing-packages-in-editable-mode-to-ease-development",
      "#using-requirements-files",
      "#pinning-requirements",
      "#fine-tuning-requirements",
      "#separating-production-and-development-dependencies",
      "#freezing-requirements-for-production",
      "#uninstalling-packages-with-pip",
      "#exploring-alternatives-to-pip",
      "#conclusion",
      "/account/join/",
      "/courses/what-is-pip/",
      "https://www.python.org/",
      "https://pip.pypa.io/en/stable/",
      "https://docs.python.org/3/py-modindex.html",
      "https://realpython.com/bonus/python-mastery-course/",
      "#getting-started-with-pip",
      "https://pip.pypa.io/en/stable/",
      "https://www.ianbicking.org/blog/2008/10/pyinstall-is-dead-long-live-pip.html",
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript",
      "https://www.npmjs.com/",
      "https://www.ruby-lang.org/en/",
      "https://rubygems.org/",
      "https://dotnet.microsoft.com/languages",
      "https://www.nuget.org/",
      "/account/join/",
      "#finding-pip-on-your-system",
      "#windows-1",
      "#linux-macos-1",
      "#reinstalling-pip-when-errors-occur",
      "#running-pip-as-a-module",
      "https://snarky.ca/why-you-should-use-python-m-pip/",
      "#using-pip-in-a-python-virtual-environment",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://docs.python.org/3/library/venv.html",
      "#windows-2",
      "#linux-macos-2",
      "/account/join/",
      "#reinstalling-pip-when-errors-occur",
      "https://realpython.com/add-python-to-path/",
      "#windows-3",
      "#linux-macos-3",
      "https://pip.pypa.io/en/stable/installation/#supported-methods",
      "https://docs.python.org/3/library/ensurepip.html#module-ensurepip",
      "https://github.com/pypa/get-pip",
      "https://www.python.org/dev/peps/pep-0453/",
      "#windows-4",
      "#linux-macos-4",
      "https://realpython.com/python-zip-import/",
      "https://bootstrap.pypa.io/get-pip.py",
      "https://realpython.com/run-python-scripts/",
      "#windows-5",
      "#linux-macos-5",
      "https://setuptools.pypa.io/en/latest/",
      "https://realpython.com/python-wheels/",
      "https://www.python.org/downloads/",
      "https://realpython.com/installing-python/",
      "/account/join/",
      "#installing-packages-with-pip",
      "https://www.python.org/dev/peps/pep-0206/#id3",
      "https://docs.python.org/3/py-modindex.html",
      "https://realpython.com/python-modules-packages/",
      "https://pypi.org/",
      "#using-the-python-package-index-pypi",
      "https://realpython.com/python-requests/",
      "https://realpython.com/api-integration-in-python/",
      "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol",
      "http://docs.python-requests.org/en/master/",
      "#windows-6",
      "#linux-macos-6",
      "#windows-7",
      "#linux-macos-7",
      "#windows-8",
      "#linux-macos-8",
      "#windows-9",
      "#linux-macos-9",
      "https://pypi.org/project/certifi/",
      "https://pypi.org/project/idna/",
      "https://charset-normalizer.readthedocs.io/en/latest/",
      "https://urllib3.readthedocs.io/en/stable/",
      "https://realpython.com/python-modules-packages/",
      "https://realpython.com/interacting-with-python/",
      "/account/join/",
      "#using-a-custom-package-index",
      "https://www.python.org/dev/peps/pep-0503/",
      "https://en.wikipedia.org/wiki/API",
      "https://pypi.org/simple/",
      "https://realpython.com/directory-tree-generator-python/",
      "https://test.pypi.org/",
      "#windows-10",
      "#linux-macos-10",
      "https://realpython.com/pypi-publish-python-package/",
      "https://pip.pypa.io/en/stable/topics/configuration/",
      "#windows-11",
      "#linux-macos-11",
      "https://test.pypi.org/simple/",
      "#installing-packages-from-your-github-repositories",
      "https://realpython.com/python-git-github-intro/",
      "https://pypi.org/project/rptree/",
      "https://github.com/realpython/rptree",
      "#windows-12",
      "#linux-macos-12",
      "https://pip.pypa.io/en/stable/topics/vcs-support/",
      "/account/join/",
      "#installing-packages-in-editable-mode-to-ease-development",
      "#windows-13",
      "#linux-macos-13",
      "https://pip.pypa.io/en/stable/cli/pip_install/#examples",
      "#using-requirements-files",
      "#pinning-requirements",
      "https://pip.pypa.io/en/stable/reference/requirements-file-format/",
      "#windows-14",
      "#linux-macos-14",
      "#windows-15",
      "#linux-macos-15",
      "#windows-16",
      "#linux-macos-16",
      "/account/join/",
      "#fine-tuning-requirements",
      "https://realpython.com/python-ides-code-editors-guide/",
      "https://realpython.com/python-operators-expressions/#comparison-operators",
      "#windows-17",
      "#linux-macos-17",
      "https://www.python.org/dev/peps/pep-0440/#version-specifiers",
      "https://pip.pypa.io/en/stable/reference/requirements-file-format/",
      "#separating-production-and-development-dependencies",
      "https://realpython.com/pytest-python-testing/",
      "#windows-18",
      "#linux-macos-18",
      "#windows-19",
      "#linux-macos-19",
      "/account/join/",
      "#freezing-requirements-for-production",
      "#uninstalling-packages-with-pip",
      "#windows-20",
      "#linux-macos-20",
      "#windows-21",
      "#linux-macos-21",
      "#windows-22",
      "#linux-macos-22",
      "#windows-23",
      "#linux-macos-23",
      "#windows-24",
      "#linux-macos-24",
      "/account/join/",
      "#exploring-alternatives-to-pip",
      "https://conda.io/en/latest/",
      "https://www.anaconda.com/",
      "https://realpython.com/python-windows-machine-learning-setup/",
      "https://repo.continuum.io/",
      "https://python-poetry.org/",
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript",
      "https://www.npmjs.com/",
      "https://realpython.com/dependency-management-python-poetry/",
      "https://github.com/pypa/pipenv",
      "https://realpython.com/pipenv-guide/",
      "#conclusion",
      "https://pypi.org/",
      "/feedback/survey/article/what-is-pip/liked/?from=article-footer",
      "/feedback/survey/article/what-is-pip/disliked/?from=article-footer",
      "/courses/what-is-pip/"
    ]
  },
  {
    "id": 24,
    "title": "Raining Outside? Build a Weather CLI App With Python",
    "url": "https://realpython.com/build-a-python-weather-app-cli/",
    "pub_date": "2022-01-26T14:00:00+00:00",
    "tags": [
      "basics",
      "api"
    ],
    "description": "In this tutorial, you'll write a nicely formatted Python CLI app that displays information about the current weather in any city you provide the name for.",
    "text": "Next Steps\n If the thunderstorm where you are just won\u2019t die down, and you want to continue working on this project, you can consider the following ideas to take your weather app to the next level:What other ideas can you come up with to extend this project? Be creative and have fun!",
    "preview": false,
    "links": [
      "#demo",
      "#project-overview",
      "#prerequisites",
      "#step-1-get-access-to-a-suitable-weather-api",
      "#get-an-openweather-api-key",
      "#make-an-api-request-and-inspect-the-data",
      "#step-2-handle-secrets-in-your-code",
      "#create-your-project-folder-structure",
      "#protect-your-api-key",
      "#access-your-api-key-in-your-python-code",
      "#step-3-create-a-cli-for-your-python-weather-app",
      "#set-up-an-argument-parser",
      "#parse-input-arguments",
      "#step-4-get-the-weather-information",
      "#build-the-url",
      "#make-an-http-request-with-python",
      "#handle-exceptions-in-your-code",
      "#step-5-display-the-output-of-your-python-weather-app",
      "#identify-the-relevant-data",
      "#build-a-display-function",
      "#add-string-padding-to-your-output",
      "#step-6-style-the-weather-apps-output",
      "#change-terminal-output-colors",
      "#format-weather-types-in-different-colors",
      "#refactor-your-code-and-add-emojis",
      "#conclusion",
      "#next-steps",
      "/account/join/",
      "https://realpython.com/community/",
      "https://realpython.com/bonus/build-a-python-weather-app-cli-project-code/",
      "#demo",
      "https://www.zsh.org",
      "https://docs.microsoft.com/en-us/powershell/",
      "https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701",
      "/account/join/",
      "#project-overview",
      "https://openweathermap.org/current#name",
      "https://openweathermap.org/api",
      "https://en.wikipedia.org/wiki/API",
      "#prerequisites",
      "https://realpython.com/command-line-interfaces-python-argparse/",
      "https://realpython.com/python-api/",
      "https://realpython.com/api-integration-in-python/",
      "https://realpython.com/python-json/",
      "https://realpython.com/python-import/#basic-python-import",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/python-exceptions/",
      "https://realpython.com/python-f-strings/",
      "https://realpython.com/python-conditional-statements/#conditional-expressions-pythons-ternary-operator",
      "https://en.wikipedia.org/wiki/Application_programming_interface_key",
      "#step-1-get-access-to-a-suitable-weather-api",
      "#get-an-openweather-api-key",
      "https://openweathermap.org/technology",
      "https://home.openweathermap.org/users/sign_up",
      "https://files.realpython.com/media/openweather-create-account.3456873c40d1.png",
      "https://home.openweathermap.org/api_keys",
      "https://files.realpython.com/media/openweather-view-api-key.8e1d0285ea6e.png",
      "/account/join/",
      "#make-an-api-request-and-inspect-the-data",
      "https://openweathermap.org/current",
      "https://files.realpython.com/media/openweather-api-response.7c0148f8571c.png",
      "https://openweathermap.org/current#data",
      "https://en.wikipedia.org/wiki/Imperial_units",
      "/account/join/",
      "#step-2-handle-secrets-in-your-code",
      "https://realpython.com/python-git-github-intro/#version-control",
      "#create-your-project-folder-structure",
      "https://realpython.com/installing-python/",
      "https://realpython.com/python-f-strings/",
      "#windows-1",
      "#linux-macos-1",
      "https://realpython.com/python-ides-code-editors-guide/",
      "#protect-your-api-key",
      "#access-your-api-key-in-your-python-code",
      "https://en.wikipedia.org/wiki/INI_file#Format",
      "https://www.python.org/dev/peps/pep-0008/#global-variable-names",
      "https://realpython.com/documenting-python-code/#documenting-your-python-code-base-using-docstrings",
      "https://realpython.com/python-dicts/#accessing-dictionary-values",
      "/account/join/",
      "#step-3-create-a-cli-for-your-python-weather-app",
      "https://realpython.com/command-line-interfaces-python-argparse/",
      "#set-up-an-argument-parser",
      "https://realpython.com/python-main-function/",
      "#parse-input-arguments",
      "/account/join/",
      "#step-4-get-the-weather-information",
      "https://realpython.com/python-string-split-concatenate-join/",
      "#build-the-url",
      "#make-an-api-request-and-inspect-the-data",
      "https://www.python.org/dev/peps/pep-0008/#constants",
      "https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote_plus",
      "https://en.wikipedia.org/wiki/Percent-encoding#The_application/x-www-form-urlencoded_type",
      "https://realpython.com/python-conditional-statements/#conditional-expressions-pythons-ternary-operator",
      "/account/join/",
      "#make-an-http-request-with-python",
      "https://en.wikipedia.org/wiki/Cheesequake,_New_Jersey",
      "https://realpython.com/python-exceptions/",
      "#handle-exceptions-in-your-code",
      "https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#4xx_client_errors",
      "https://en.wikipedia.org/wiki/HTTP_404",
      "https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
      "https://www.iso.org/obp/ui/#search/code/",
      "https://openweathermap.org/current#name",
      "/account/join/",
      "#step-5-display-the-output-of-your-python-weather-app",
      "#identify-the-relevant-data",
      "https://realpython.com/python-pretty-print/",
      "#build-a-display-function",
      "https://realpython.com/if-name-main-python/",
      "https://docs.python.org/3/library/string.html#formatspec",
      "/account/join/",
      "#add-string-padding-to-your-output",
      "https://realpython.com/python-string-formatting/",
      "https://en.wikipedia.org/wiki/Magic_number_(programming)#Unnamed_numerical_constants",
      "#step-6-style-the-weather-apps-output",
      "#change-terminal-output-colors",
      "https://en.wikipedia.org/wiki/Escape_character#ASCII_escape_character",
      "https://en.wikipedia.org/wiki/ANSI_escape_code#SGR_(Select_Graphic_Rendition)_parameters",
      "https://en.wikipedia.org/wiki/ANSI_escape_code",
      "https://en.wikipedia.org/wiki/ANSI_escape_code#Colors",
      "#windows-2",
      "#linux-macos-2",
      "/account/join/",
      "#format-weather-types-in-different-colors",
      "https://openweathermap.org/weather-conditions#Weather-Condition-Codes-2",
      "https://realpython.com/python310-new-features/#matching-literal-patterns",
      "#refactor-your-code-and-add-emojis",
      "https://realpython.com/python-lists-tuples/#tuple-assignment-packing-and-unpacking",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/bonus/build-a-python-weather-app-cli-project-code/",
      "#next-steps",
      "https://realpython.com/python-typer-cli/",
      "https://realpython.com/python310-new-features/",
      "https://realpython.com/python-zipapp/",
      "https://realpython.com/pypi-publish-python-package/",
      "/feedback/survey/article/build-a-python-weather-app-cli/liked/?from=article-footer",
      "/feedback/survey/article/build-a-python-weather-app-cli/disliked/?from=article-footer"
    ]
  },
  {
    "id": 25,
    "title": "Build a Dice-Rolling Application With Python",
    "url": "https://realpython.com/python-dice-roll/",
    "pub_date": "2022-01-19T14:00:00+00:00",
    "tags": [
      "basics",
      "projects"
    ],
    "description": "In this step-by-step project, you'll build a dice-rolling simulator app with a minimal text-based user interface using Python. The app will simulate the rolling of up to six dice. Each individual die will have six sides.",
    "text": "Next Steps\n Now that you\u2019ve finished building your dice-rolling application, you can take the project a step further by adding new functionality. Adding new features by yourself will help you continue to learn exciting new coding concepts and techniques.Here are some ideas to take your project to the next level:The first feature will require you to modify the code that processes the user\u2019s input for the number of dice to roll. You\u2019ll also need to modify the code that generates and displays the diagram of dice faces. For example, you can generate a diagram that displays the dice faces in several rows to avoid cluttering your screen with cramped output.On the other hand, supporting dice with a different number of faces will demand that you tweak the code that simulates a dice-rolling event. You\u2019ll also need to create new ASCII art for any dice with more than six faces.Once you\u2019re done with these new features, you can change gears and jump into other cool projects. Here are some great next steps for you to continue learning Python and building more complex projects:How to Build Command Line Interfaces in Python With argparse: In this step-by-step Python tutorial, you\u2019ll learn how to take your command-line Python scripts to the next level by adding a convenient command-line interface that you can write with argparse.Build a Python Directory Tree Generator for the Command Line: In this step-by-step project, you\u2019ll create a Python directory tree generator application for your command line. You\u2019ll code the command-line interface with argparse and traverse the file system using pathlib.Build a Command-Line To-Do App With Python and Typer: In this step-by-step project, you\u2019ll create a to-do application for your command line using Python and Typer. While you build this app, you\u2019ll learn the basics of Typer, a modern and versatile library for building command-line interfaces.",
    "preview": false,
    "links": [
      "#demo",
      "#project-overview",
      "#prerequisites",
      "#step-1-code-the-tui-of-your-python-dice-rolling-app",
      "#take-the-users-input-at-the-command-line",
      "#parse-and-validate-the-users-input",
      "#try-out-the-dice-rolling-apps-tui",
      "#step-2-simulate-the-rolling-of-six-sided-dice-in-python",
      "#step-3-generate-and-display-the-ascii-diagram-of-dice-faces",
      "#set-up-the-diagram-of-dice-faces",
      "#generate-the-diagram-of-dice-faces",
      "#finish-up-the-apps-main-code-and-roll-the-dice",
      "#step-4-refactor-the-code-that-generates-the-diagram-of-dice-faces",
      "#conclusion",
      "#next-steps",
      "/account/join/",
      "https://en.wikipedia.org/wiki/Text-based_user_interface",
      "https://realpython.com/python-print/",
      "https://realpython.com/bonus/python-dice-roll-project-code/",
      "#demo",
      "https://files.realpython.com/media/python-dice-roll-demo.93e6fe0d714a.gif",
      "/account/join/",
      "#project-overview",
      "https://en.wikipedia.org/wiki/Text-based_user_interface",
      "https://docs.python.org/3/library/functions.html#input",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-random/",
      "https://docs.python.org/3/library/random.html#random.randint",
      "https://realpython.com/python-append/",
      "https://realpython.com/python-string-split-concatenate-join/",
      "https://realpython.com/python-print/",
      "https://en.wikipedia.org/wiki/API",
      "#prerequisites",
      "https://realpython.com/run-python-scripts/",
      "https://realpython.com/python-import/",
      "https://realpython.com/python-data-types/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-numbers/#integers",
      "https://realpython.com/python-data-structures/",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-variables/",
      "https://realpython.com/python-operators-expressions/#comparison-operators",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-operators-expressions/#logical-operators",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-input-output/",
      "https://realpython.com/python-string-formatting/",
      "#step-1-code-the-tui-of-your-python-dice-rolling-app",
      "https://realpython.com/bonus/python-dice-roll-project-code/",
      "#take-the-users-input-at-the-command-line",
      "https://realpython.com/python-ides-code-editors-guide/",
      "https://realpython.com/python-comments-guide/",
      "https://realpython.com/python-return-statement/",
      "/account/join/",
      "#parse-and-validate-the-users-input",
      "https://realpython.com/documenting-python-code/",
      "https://realpython.com/python-boolean/#the-in-operator",
      "https://realpython.com/python-sets/",
      "https://realpython.com/python-data-structures/",
      "https://docs.python.org/3/library/exceptions.html#SystemExit",
      "https://docs.python.org/3/library/exceptions.html#SystemExit.code",
      "https://realpython.com/python-property/#validating-input-values",
      "#try-out-the-dice-rolling-apps-tui",
      "#step-2-simulate-the-rolling-of-six-sided-dice-in-python",
      "https://realpython.com/python-random/",
      "https://docs.python.org/3/library/random.html#random.randint",
      "https://en.wikipedia.org/wiki/Pseudorandomness",
      "https://realpython.com/bonus/python-dice-roll-project-code/",
      "https://realpython.com/python-namespaces-scope/",
      "https://docs.python.org/3/glossary.html#term-docstring",
      "https://realpython.com/python-lists-tuples/",
      "/account/join/",
      "#step-3-generate-and-display-the-ascii-diagram-of-dice-faces",
      "https://realpython.com/bonus/python-dice-roll-project-code/",
      "#set-up-the-diagram-of-dice-faces",
      "#generate-the-diagram-of-dice-faces",
      "https://docs.python.org/3/library/stdtypes.html#str.center",
      "https://realpython.com/python-data-types/#applying-special-meaning-to-characters",
      "#finish-up-the-apps-main-code-and-roll-the-dice",
      "https://realpython.com/courses/refactoring-code-to-get-help/",
      "/account/join/",
      "#step-4-refactor-the-code-that-generates-the-diagram-of-dice-faces",
      "https://en.wikipedia.org/wiki/Single-responsibility_principle",
      "https://realpython.com/bonus/python-dice-roll-project-code/",
      "https://en.wikipedia.org/wiki/Code_refactoring#Techniques",
      "https://dbader.org/blog/meaning-of-underscores-in-python",
      "https://realpython.com/python-refactoring/",
      "#conclusion",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-formatted-output/",
      "https://realpython.com/bonus/python-dice-roll-project-code/",
      "/account/join/",
      "#next-steps",
      "https://realpython.com/command-line-interfaces-python-argparse/",
      "https://en.wikipedia.org/wiki/Command-line_interface",
      "https://docs.python.org/3/library/argparse.html",
      "https://realpython.com/directory-tree-generator-python/",
      "https://realpython.com/python-pathlib/",
      "https://realpython.com/python-typer-cli/",
      "https://typer.tiangolo.com/",
      "/feedback/survey/article/python-dice-roll/liked/?from=article-footer",
      "/feedback/survey/article/python-dice-roll/disliked/?from=article-footer"
    ]
  },
  {
    "id": 26,
    "title": "Using the \"not\" Boolean Operator in Python",
    "url": "https://realpython.com/python-not-operator/",
    "pub_date": "2021-10-25T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn how Python's \"not\" operator works and how to use it in your code. You'll get to know its features and see what kind of programming problems you can solve by using \"not\" in Python.",
    "text": "Conclusion\n Python\u2019s not is a logical operator that inverts the truth value of Boolean expressions and objects. It\u2019s handy when you need to check for unmet conditions in conditional statements and while loops.You can use the not operator to help you decide the course of action in your program. You can also use it to invert the value of Boolean variables in your code.In this tutorial, you learned how to:To these ends, you coded a few practical examples that helped you understand some of the main use cases of the not operator, so you\u2019re now better prepared to use it in your own code.",
    "preview": false,
    "links": [
      "#working-with-boolean-logic-in-python",
      "#getting-started-with-pythons-not-operator",
      "#using-the-not-operator-in-boolean-contexts",
      "#if-statements",
      "#while-loops",
      "#using-the-not-operator-in-non-boolean-contexts",
      "#using-the-function-based-not-operator",
      "#working-with-pythons-not-operator-best-practices",
      "#test-for-membership",
      "#check-the-identity-of-objects",
      "#avoid-unnecessary-negative-logic",
      "#conclusion",
      "/account/join/",
      "/courses/using-not-operator/",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/bonus/python-mastery-course/",
      "#working-with-boolean-logic-in-python",
      "https://en.wikipedia.org/wiki/George_Boole",
      "https://en.wikipedia.org/wiki/Boolean_algebra",
      "https://en.wikipedia.org/wiki/Logical_conjunction",
      "https://en.wikipedia.org/wiki/Logical_disjunction",
      "https://en.wikipedia.org/wiki/Negation",
      "https://realpython.com/python-boolean/",
      "https://docs.python.org/3/library/functions.html#bool",
      "https://docs.python.org/3/library/functions.html#int",
      "https://docs.python.org/3/library/constants.html#built-in-constants",
      "https://realpython.com/interacting-with-python/",
      "https://realpython.com/python-and-operator/",
      "https://realpython.com/python-or-operator/",
      "https://realpython.com/python-keywords/#the-not-keyword",
      "https://realpython.com/python-operators-expressions/#logical-expressions-involving-boolean-operands",
      "https://docs.python.org/3/reference/lexical_analysis.html#identifiers",
      "https://realpython.com/invalid-syntax-python/",
      "/account/join/",
      "#getting-started-with-pythons-not-operator",
      "https://en.wikipedia.org/wiki/Unary_operation",
      "https://realpython.com/python-variables/",
      "https://docs.python.org/3/reference/expressions.html#operator-precedence",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-sets/",
      "https://docs.python.org/3/library/functions.html#bool",
      "https://docs.python.org/3/reference/datamodel.html#object.__bool__",
      "https://docs.python.org/3/reference/datamodel.html#object.__len__",
      "https://docs.python.org/3/library/stdtypes.html#truth-value-testing",
      "/account/join/",
      "#using-the-not-operator-in-boolean-contexts",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-while-loop/",
      "https://en.wikipedia.org/wiki/Control_flow",
      "#if-statements",
      "https://en.wikipedia.org/wiki/Predicate_(mathematical_logic)",
      "https://en.wikipedia.org/wiki/Boolean-valued_function",
      "https://en.wikipedia.org/wiki/Prime_number",
      "https://en.wikipedia.org/wiki/Composite_number",
      "/account/join/",
      "#while-loops",
      "https://realpython.com/python-keywords/#iteration-keywords-for-while-break-continue-else",
      "https://realpython.com/python-return-statement/",
      "https://realpython.com/python-exceptions/",
      "https://docs.python.org/3/library/functions.html#input",
      "https://realpython.com/python-ides-code-editors-guide/",
      "https://docs.python.org/3/library/random.html#random.randint",
      "https://realpython.com/python-random/",
      "https://realpython.com/pygame-a-primer/",
      "#using-the-not-operator-in-non-boolean-contexts",
      "#using-the-function-based-not-operator",
      "https://docs.python.org/3/library/operator.html#module-operator",
      "https://docs.python.org/3/library/operator.html#operator.not_",
      "https://docs.python.org/3/library/operator.html#operator.and_",
      "https://docs.python.org/3/library/operator.html#operator.or_",
      "https://realpython.com/python-bitwise-operators/",
      "http://en.wikipedia.org/wiki/Higher-order_function",
      "https://realpython.com/python-map-function/",
      "https://realpython.com/python-filter-function/",
      "https://realpython.com/python-sort/",
      "/account/join/",
      "#working-with-pythons-not-operator-best-practices",
      "https://docs.python.org/3/reference/expressions.html#membership-test-operations",
      "https://docs.python.org/3/reference/expressions.html#is-not",
      "#test-for-membership",
      "https://realpython.com/python-keywords/#operator-keywords-and-or-not-in-is",
      "https://realpython.com/python-in-operator/",
      "https://docs.python.org/3/reference/expressions.html#not-in",
      "https://realpython.com/python-in-operator/#pythons-not-in-operator",
      "https://realpython.com/python-range/",
      "#check-the-identity-of-objects",
      "https://realpython.com/python-is-identity-vs-equality/",
      "https://docs.python.org/3/library/functions.html#id",
      "https://docs.python.org/3/reference/expressions.html#is",
      "https://realpython.com/null-in-python/",
      "https://docs.python.org/3/reference/expressions.html#is-not",
      "/account/join/",
      "#avoid-unnecessary-negative-logic",
      "https://en.wikipedia.org/wiki/Negation",
      "https://en.wikipedia.org/wiki/Cognitive_load",
      "https://realpython.com/python-absolute-value/#using-the-built-in-abs-function-with-numbers",
      "https://docs.python.org/3/library/pathlib.html#pathlib.Path.exists",
      "https://docs.python.org/3/library/pathlib.html#module-pathlib",
      "https://docs.python.org/3/library/index.html",
      "https://realpython.com/python-pathlib/",
      "https://realpython.com/python-pass/",
      "https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it",
      "/account/join/",
      "#conclusion",
      "/feedback/survey/article/python-not-operator/liked/?from=article-footer",
      "/feedback/survey/article/python-not-operator/disliked/?from=article-footer",
      "/courses/using-not-operator/"
    ]
  },
  {
    "id": 27,
    "title": "Using the len() Function in Python",
    "url": "https://realpython.com/len-python-function/",
    "pub_date": "2021-10-20T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn how and when to use the len() Python function. You'll also learn how to customize your class definitions so that objects of a user-defined class can be used as arguments in len().",
    "text": "Conclusion\n You\u2019ve explored how to use len() to determine the number of items in sequences, collections, and other data types that hold several items at a time, such as NumPy arrays and pandas DataFrames.The len() Python function is a key tool in many programs. Some of its uses are straightforward, but there\u2019s a lot more to this function than its most basic use cases, as you\u2019ve seen in this tutorial. Knowing when you can use this function and how to use it effectively will help you write neater code.In this tutorial, you\u2019ve learned how to:You now have a good foundation for understanding the len() function. Learning more about len() helps you understand the differences between data types better. You\u2019re ready to use len() in your algorithms and to improve the functionality of some of your class definitions by enhancing them with the .__len__() method.",
    "preview": false,
    "links": [
      "#getting-started-with-pythons-len",
      "#using-len-with-built-in-sequences",
      "#using-len-with-built-in-collections",
      "#exploring-len-with-other-built-in-data-types",
      "#exploring-len-further-with-some-examples",
      "#verifying-the-length-of-a-user-input",
      "#ending-a-loop-based-on-the-length-of-an-object",
      "#finding-the-index-of-the-last-item-of-a-sequence",
      "#splitting-a-list-into-two-halves",
      "#using-the-len-function-with-third-party-libraries",
      "#numpys-ndarray",
      "#pandas-dataframe",
      "#using-len-on-user-defined-classes",
      "#conclusion",
      "/account/join/",
      "/courses/pythons-len-function/",
      "https://realpython.com/numpy-tutorial/",
      "https://realpython.com/pandas-python-explore-dataset/",
      "",
      "#getting-started-with-pythons-len",
      "https://docs.python.org/3.9/library/functions.html?highlight=len#len",
      "https://docs.python.org/3/library/functions.html?highlight=len#len",
      "https://docs.python.org/3/library/functions.html?highlight=len#len",
      "/account/join/",
      "#using-len-with-built-in-sequences",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-range/",
      "#using-len-with-built-in-collections",
      "https://realpython.com/python-sets/",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/python-dicts/",
      "#exploring-len-with-other-built-in-data-types",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-complex-numbers/",
      "https://docs.python.org/3/library/functions.html#iter",
      "https://realpython.com/python-itertools/",
      "https://realpython.com/introduction-to-python-generators/",
      "/account/join/",
      "#exploring-len-further-with-some-examples",
      "#verifying-the-length-of-a-user-input",
      "#ending-a-loop-based-on-the-length-of-an-object",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/python-deque/",
      "https://realpython.com/python-boolean/",
      "/account/join/",
      "#finding-the-index-of-the-last-item-of-a-sequence",
      "#splitting-a-list-into-two-halves",
      "https://realpython.com/python-numbers/#integer-division",
      "https://en.wikipedia.org/wiki/Floor_and_ceiling_functions",
      "#using-the-len-function-with-third-party-libraries",
      "#numpys-ndarray",
      "https://numpy.org",
      "https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray",
      "https://realpython.com/what-is-pip/",
      "https://numpy.org/doc/stable/reference/generated/numpy.array.html?highlight=array#numpy.array",
      "https://realpython.com/numpy-tutorial/",
      "/account/join/",
      "#pandas-dataframe",
      "https://realpython.com/pandas-dataframe/",
      "https://pandas.pydata.org",
      "https://realpython.com/pandas-dataframe/",
      "#using-len-on-user-defined-classes",
      "https://docs.python.org/3/reference/datamodel.html#object.__len__",
      "https://docs.python.org/3/reference/datamodel.html#special-method-names",
      "https://github.com/pandas-dev/pandas/blob/master/pandas/core/frame.py",
      "https://docs.python.org/3/reference/datamodel.html#object.__init__",
      "https://realpython.com/python-super/",
      "https://docs.python.org/3/reference/datamodel.html#object.__str__",
      "https://realpython.com/python3-object-oriented-programming/",
      "/account/join/",
      "#conclusion",
      "/feedback/survey/article/len-python-function/liked/?from=article-footer",
      "/feedback/survey/article/len-python-function/disliked/?from=article-footer",
      "/courses/pythons-len-function/"
    ]
  },
  {
    "id": 28,
    "title": "Representing Rational Numbers With Python Fractions",
    "url": "https://realpython.com/python-fractions/",
    "pub_date": "2021-10-11T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn about the Fraction data type in Python, which can represent rational numbers precisely without the rounding errors in binary arithmetic. You'll find that this is especially important in financial and other high-precision applications.",
    "text": "Conclusion\n You might have never thought about how computers store fractional numbers before reading this tutorial. After all, maybe it seemed that your good old friend float could handle them just fine. However, history has shown that this misconception may eventually lead to catastrophic failures that can cost big money.Using Python\u2019s Fraction is one way to avoid such catastrophes. You\u2019ve seen the pros and cons of fractional notation, its practical applications, and methods for using it in Python. Now, you can make an informed choice about which numeric type is the most appropriate in your use case.In this tutorial, you learned how to:",
    "preview": false,
    "links": [
      "#decimal-vs-fractional-notation",
      "#classification-of-numbers",
      "#numeral-systems-and-notations",
      "#numeric-data-types-in-python",
      "#creating-a-python-fraction-from-different-data-types",
      "#rational-numbers",
      "#floating-point-and-decimal-numbers",
      "#strings",
      "#inspecting-a-python-fraction",
      "#converting-a-python-fraction-to-other-data-types",
      "#floating-point-and-integer-numbers",
      "#decimal-numbers",
      "#strings_1",
      "#performing-rational-number-arithmetic-on-fractions",
      "#addition",
      "#subtraction",
      "#multiplication",
      "#division",
      "#exponentiation",
      "#rounding-a-python-fraction",
      "#comparing-fractions-in-python",
      "#choosing-between-fraction-decimal-and-float",
      "#binary-floating-point-float",
      "#decimal-floating-point-and-fixed-point-decimal",
      "#infinite-precision-rational-number-fraction",
      "#studying-a-python-fraction-in-action",
      "#approximating-irrational-numbers",
      "#getting-a-displays-aspect-ratio",
      "#calculating-the-exposure-value-of-a-photo",
      "#solving-the-change-making-problem",
      "#producing-and-expanding-continued-fractions",
      "#conclusion",
      "/account/join/",
      "#studying-a-python-fraction-in-action",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/python-collections-module/",
      "https://realpython.com/python-itertools/",
      "https://realpython.com/introduction-to-python-generators/",
      "https://realpython.com/bonus/python-mastery-course/",
      "#decimal-vs-fractional-notation",
      "/account/join/",
      "#classification-of-numbers",
      "https://files.realpython.com/media/diagram-numbers-math.25b0c13bfd67.png",
      "https://realpython.com/python-complex-numbers/",
      "https://en.wikipedia.org/wiki/Imaginary_number",
      "https://en.wikipedia.org/wiki/Real_number",
      "https://en.wikipedia.org/wiki/Rational_number",
      "https://en.wikipedia.org/wiki/Irrational_number",
      "https://en.wikipedia.org/wiki/Integer",
      "https://en.wikipedia.org/wiki/Natural_number",
      "#numeral-systems-and-notations",
      "https://en.wikipedia.org/wiki/Positional_notation",
      "https://en.wikipedia.org/wiki/Radix",
      "https://en.wikipedia.org/wiki/Percentage",
      "https://en.wikipedia.org/wiki/Continued_fraction",
      "https://files.realpython.com/media/latex_decimal_vs_fractional.ed464ec10585.png",
      "#numeric-data-types-in-python",
      "https://realpython.com/python-numbers/#floating-point-numbers",
      "https://docs.python.org/3/tutorial/floatingpoint.html#representation-error",
      "https://realpython.com/python-numbers/#make-python-lie-to-you",
      "https://docs.python.org/3/library/numbers.html",
      "https://files.realpython.com/media/uml_numeric_types.ed370d32b0b3.png",
      "/account/join/",
      "#creating-a-python-fraction-from-different-data-types",
      "https://github.com/python/cpython/blob/3.9/Lib/fractions.py",
      "https://pypi.org/project/quicktions/",
      "https://realpython.com/python-class-constructor/",
      "https://realpython.com/python-print/",
      "#strings_1",
      "#rational-numbers",
      "https://realpython.com/python39-new-features/#greatest-common-divisor-gcd-and-least-common-multiple-lcm",
      "/account/join/",
      "#floating-point-and-decimal-numbers",
      "https://realpython.com/python-rounding/#the-decimal-class",
      "https://github.com/python/cpython/blob/3.9/Lib/numbers.py#L24",
      "https://www.wolframalpha.com/input/?i=3602879701896397%2F36028797018963968",
      "/account/join/",
      "#strings",
      "https://realpython.com/regex-python/",
      "https://github.com/python/cpython/blob/3.9/Lib/fractions.py#L23",
      "#inspecting-a-python-fraction",
      "https://realpython.com/python-reverse-list/",
      "https://realpython.com/python-lists-tuples/#tuple-assignment-packing-and-unpacking",
      "/account/join/",
      "#converting-a-python-fraction-to-other-data-types",
      "#floating-point-and-integer-numbers",
      "https://docs.python.org/3/glossary.html#term-special-method",
      "https://github.com/python/cpython/blob/3.9/Lib/numbers.py#L291",
      "#rounding-a-python-fraction",
      "#decimal-numbers",
      "/account/join/",
      "#strings_1",
      "https://realpython.com/python-formatted-output/",
      "https://realpython.com/jupyter-notebook-introduction/",
      "https://en.wikipedia.org/wiki/LaTeX",
      "https://en.wikipedia.org/wiki/Monkey_patch",
      "https://ipython.readthedocs.io/en/latest/config/integrating.html#pretty-printing",
      "https://www.mathjax.org/",
      "https://files.realpython.com/media/jupyter-notebook-latex.f3fe392dcf49.png",
      "#performing-rational-number-arithmetic-on-fractions",
      "#addition",
      "/account/join/",
      "#subtraction",
      "#multiplication",
      "#division",
      "https://realpython.com/python-modulo-operator/",
      "https://realpython.com/python-modulo-operator/#modulo-operator-and-divmod",
      "#exponentiation",
      "https://realpython.com/interacting-with-python/#using-the-python-interpreter-interactively",
      "/account/join/",
      "#rounding-a-python-fraction",
      "https://realpython.com/python-rounding/",
      "https://realpython.com/python-rounding/#interlude-rounding-bias",
      "#comparing-fractions-in-python",
      "https://realpython.com/python-sort/",
      "https://realpython.com/python-operators-expressions/#comparison-operators",
      "/account/join/",
      "#choosing-between-fraction-decimal-and-float",
      "#binary-floating-point-float",
      "https://en.wikipedia.org/wiki/IEEE_754",
      "#decimal-floating-point-and-fixed-point-decimal",
      "https://en.wikipedia.org/wiki/Decimal_floating_point",
      "https://en.wikipedia.org/wiki/Fixed-point_arithmetic",
      "http://speleotrove.com/decimal/decarith.html",
      "http://en.wikipedia.org/wiki/IEEE_854-1987",
      "#infinite-precision-rational-number-fraction",
      "/account/join/",
      "#studying-a-python-fraction-in-action",
      "#approximating-irrational-numbers",
      "https://en.wikipedia.org/wiki/Approximations_of_%CF%80",
      "https://en.wikipedia.org/wiki/Buffon%27s_needle_problem",
      "https://realpython.com/python-sets/",
      "https://realpython.com/python-itertools/",
      "#getting-a-displays-aspect-ratio",
      "https://realpython.com/python-gui-tkinter/",
      "https://en.wikipedia.org/wiki/16:9_aspect_ratio",
      "https://en.wikipedia.org/wiki/Four_Thirds_system",
      "#calculating-the-exposure-value-of-a-photo",
      "https://en.wikipedia.org/wiki/Exif",
      "https://en.wikipedia.org/wiki/APEX_system",
      "#solving-the-change-making-problem",
      "https://en.wikipedia.org/wiki/Change-making_problem",
      "https://en.wikipedia.org/wiki/Coins_of_the_United_States_dollar",
      "https://en.wikipedia.org/wiki/Greedy_algorithm",
      "https://realpython.com/python-counter/",
      "#producing-and-expanding-continued-fractions",
      "https://realpython.com/introduction-to-python-generators/",
      "https://realpython.com/python-walrus-operator/",
      "https://realpython.com/python-thinking-recursively/",
      "#conclusion",
      "https://en.wikipedia.org/wiki/Vancouver_Stock_Exchange#Rounding_errors_on_its_Index_price",
      "/feedback/survey/article/python-fractions/liked/?from=article-footer",
      "/feedback/survey/article/python-fractions/disliked/?from=article-footer"
    ]
  },
  {
    "id": 29,
    "title": "Python's sum(): The Pythonic Way to Sum Values",
    "url": "https://realpython.com/python-sum-function/",
    "pub_date": "2021-10-06T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn how to use Python's sum() function to add numeric values together. You also learn how to concatenate sequences, such as lists and tuples, using sum().",
    "text": "Conclusion\n You can now use Python\u2019s built-in function sum() to add multiple numeric values together. This function provides an efficient, readable, and Pythonic way to solve summation problems in your code. If you\u2019re dealing with math computations that require summing numeric values, then sum() can be your lifesaver.In this tutorial, you learned how to:With this knowledge, you\u2019re now able to add multiple numeric values together in a Pythonic, readable, and efficient way.",
    "preview": false,
    "links": [
      "#understanding-the-summation-problem",
      "#getting-started-with-pythons-sum",
      "#the-required-argument-iterable",
      "#the-optional-argument-start",
      "#summing-numeric-values",
      "#concatenating-sequences",
      "#practicing-with-pythons-sum",
      "#computing-cumulative-sums",
      "#calculating-the-mean-of-a-sample",
      "#finding-the-dot-product-of-two-sequences",
      "#flattening-a-list-of-lists",
      "#using-alternatives-to-sum",
      "#summing-floating-point-numbers-mathfsum",
      "#concatenating-iterables-with-itertoolschain",
      "#concatenating-strings-with-strjoin",
      "#conclusion",
      "/account/join/",
      "/courses/python-sum-function/",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "https://realpython.com/python-lists-tuples/",
      "",
      "#understanding-the-summation-problem",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-variables/",
      "https://en.wikipedia.org/wiki/Accumulator_(computing)",
      "https://docs.python.org/3/reference/simple_stmts.html#augmented-assignment-statements",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/python-for-loop/#iterables",
      "https://realpython.com/python-return-statement/",
      "https://realpython.com/python-recursion/",
      "https://realpython.com/python-functional-programming/",
      "https://realpython.com/python-reduce-function/",
      "https://docs.python.org/3/library/functools.html#module-functools",
      "https://docs.python.org/3/library/operator.html#operator.add",
      "https://realpython.com/python-lambda/",
      "https://en.wikipedia.org/wiki/Fold_(higher-order_function)",
      "https://realpython.com/python-traceback/#typeerror",
      "https://docs.python.org/3/library/functions.html#sum",
      "https://realpython.com/python-import/",
      "/account/join/",
      "#getting-started-with-pythons-sum",
      "https://www.python.org/dev/peps/pep-0020/#the-zen-of-python",
      "https://docs.python.org/3/whatsnew/2.3.html",
      "https://en.wikipedia.org/wiki/Alex_Martelli",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-strings/",
      "#the-required-argument-iterable",
      "https://en.wikipedia.org/wiki/Polymorphism_(computer_science)",
      "https://realpython.com/python-sets/",
      "https://realpython.com/python-range/",
      "https://realpython.com/python-dicts/",
      "https://docs.python.org/3/library/stdtypes.html#dict.keys",
      "https://docs.python.org/3/library/stdtypes.html#dict.values",
      "https://realpython.com/list-comprehension-python/",
      "https://docs.python.org/3/whatsnew/2.4.html#what-s-new-in-python-2-4",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "/account/join/",
      "#the-optional-argument-start",
      "https://realpython.com/defining-your-own-python-function/#positional-arguments",
      "https://realpython.com/defining-your-own-python-function/#keyword-arguments",
      "#summing-numeric-values",
      "https://realpython.com/python-numbers/#floating-point-numbers",
      "https://realpython.com/python-complex-numbers/",
      "https://docs.python.org/3/library/decimal.html#decimal.Decimal",
      "https://docs.python.org/3/library/fractions.html#fractions.Fraction",
      "https://en.wikipedia.org/wiki/NaN",
      "#concatenating-sequences",
      "https://docs.python.org/3/library/stdtypes.html#str.join",
      "#using-alternatives-to-sum",
      "#practicing-with-pythons-sum",
      "/account/join/",
      "#computing-cumulative-sums",
      "#calculating-the-mean-of-a-sample",
      "https://en.wikipedia.org/wiki/Arithmetic_mean",
      "https://en.wikipedia.org/wiki/Unit_of_observation#Data_point",
      "https://en.wikipedia.org/wiki/Divisor",
      "https://realpython.com/len-python-function/",
      "https://realpython.com/python38-new-features/#the-walrus-in-the-room-assignment-expressions",
      "https://realpython.com/python-return-statement/",
      "https://docs.python.org/3/library/statistics.html#module-statistics",
      "https://docs.python.org/3/library/statistics.html#statistics.mean",
      "#finding-the-dot-product-of-two-sequences",
      "https://en.wikipedia.org/wiki/Dot_product",
      "https://en.wikipedia.org/wiki/Product_(mathematics)",
      "https://realpython.com/python-zip-function/",
      "/account/join/",
      "#flattening-a-list-of-lists",
      "https://stackoverflow.com/questions/952914/how-to-make-a-flat-list-out-of-a-list-of-lists",
      "https://realpython.com/list-comprehension-python/#watch-out-for-nested-comprehensions",
      "https://realpython.com/python-append/",
      "#using-alternatives-to-sum",
      "https://realpython.com/python-math-module/",
      "https://docs.python.org/3/library/math.html#math.fsum",
      "https://realpython.com/python-itertools/",
      "https://docs.python.org/3/library/itertools.html#itertools.chain",
      "https://docs.python.org/3/library/stdtypes.html#str.join",
      "#summing-floating-point-numbers-mathfsum",
      "https://docs.python.org/3/library/math.html#math.fsum",
      "https://en.wikipedia.org/wiki/Floating-point_arithmetic#Internal_representation",
      "/account/join/",
      "#concatenating-iterables-with-itertoolschain",
      "https://docs.python.org/3/glossary.html#term-iterator",
      "https://docs.python.org/3/library/functions.html#next",
      "#concatenating-strings-with-strjoin",
      "https://realpython.com/python-string-split-concatenate-join/",
      "#conclusion",
      "https://docs.python.org/3/library/functions.html#sum",
      "/feedback/survey/article/python-sum-function/liked/?from=article-footer",
      "/feedback/survey/article/python-sum-function/disliked/?from=article-footer",
      "/courses/python-sum-function/"
    ]
  },
  {
    "id": 30,
    "title": "Reverse Strings in Python: reversed(), Slicing, and More",
    "url": "https://realpython.com/reverse-string-python/",
    "pub_date": "2021-09-27T14:00:00+00:00",
    "tags": [
      "python",
      "best-practices",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn how to reverse strings in Python by using available tools such as reversed() and slicing operations. You'll also learn about a few useful ways to build reversed strings by hand.",
    "text": "Conclusion\n Reversing and working with strings in reverse order can be a common task in programming. Python provides a set of tools and techniques that can help you perform string reversal quickly and efficiently. In this tutorial, you learned about those tools and techniques and how to take advantage of them in your string processing challenges.In this tutorial, you learned how to:Even though this topic might not have many exciting use cases by itself, understanding how to reverse strings can be useful in coding interviews for entry-level positions. You\u2019ll also find that mastering the different ways to reverse a string can help you really conceptualize the immutability of strings in Python, which is a notable feature of the language.",
    "preview": false,
    "links": [
      "#reversing-strings-with-core-python-tools",
      "#reversing-strings-through-slicing",
      "#reversing-strings-with-join-and-reversed",
      "#generating-reversed-strings-by-hand",
      "#reversing-strings-in-a-loop",
      "#reversing-strings-with-recursion",
      "#using-reduce-to-reverse-strings",
      "#iterating-through-strings-in-reverse",
      "#the-reversed-built-in-function",
      "#the-slicing-operator-1",
      "#creating-a-custom-reversible-string",
      "#sorting-python-strings-in-reverse-order",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/python-thinking-recursively/",
      "https://realpython.com/bonus/python-basics-sample-download/",
      "#reversing-strings-with-core-python-tools",
      "https://realpython.com/python-strings/",
      "https://docs.python.org/3/glossary.html#term-immutable",
      "https://en.wikipedia.org/wiki/In-place_algorithm",
      "https://docs.python.org/dev/whatsnew/2.3.html#extended-slices",
      "https://docs.python.org/dev/library/functions.html#reversed",
      "/account/join/",
      "#reversing-strings-through-slicing",
      "https://en.wikipedia.org/wiki/Offset_(computer_science)",
      "https://docs.python.org/dev/library/functions.html#slice",
      "https://docs.python.org/3/glossary.html#term-slice",
      "https://realpython.com/null-in-python/",
      "/account/join/",
      "#reversing-strings-with-join-and-reversed",
      "https://docs.python.org/3/library/stdtypes.html#str.join",
      "#generating-reversed-strings-by-hand",
      "https://realpython.com/python-recursion/",
      "https://realpython.com/python-reduce-function/",
      "#reversing-strings-in-a-loop",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/len-python-function/",
      "https://docs.python.org/3/reference/simple_stmts.html#assignment-statements",
      "/account/join/",
      "#reversing-strings-with-recursion",
      "https://realpython.com/python-thinking-recursively/",
      "https://docs.python.org/3/library/sys.html#sys.getrecursionlimit",
      "https://docs.python.org/3/library/sys.html#module-sys",
      "https://docs.python.org/3/library/sys.html#sys.setrecursionlimit",
      "#using-reduce-to-reverse-strings",
      "https://realpython.com/python-reduce-function/",
      "https://docs.python.org/3/library/functools.html#module-functools",
      "https://en.wikipedia.org/wiki/Fold_(higher-order_function)",
      "https://realpython.com/python-lambda/",
      "#iterating-through-strings-in-reverse",
      "#the-reversed-built-in-function",
      "https://en.wikipedia.org/wiki/Side_effect_(computer_science)",
      "/account/join/",
      "#the-slicing-operator-1",
      "#creating-a-custom-reversible-string",
      "https://realpython.com/python-reverse-list/",
      "https://realpython.com/python-reverse-list/",
      "https://realpython.com/inherit-python-str/",
      "https://realpython.com/python-collections-module/",
      "https://docs.python.org/3/library/stdtypes.html#str",
      "#sorting-python-strings-in-reverse-order",
      "https://realpython.com/python-sort/",
      "/account/join/",
      "#conclusion",
      "/feedback/survey/article/reverse-string-python/liked/?from=article-footer",
      "/feedback/survey/article/reverse-string-python/disliked/?from=article-footer"
    ]
  },
  {
    "id": 31,
    "title": "Using the \"and\" Boolean Operator in Python",
    "url": "https://realpython.com/python-and-operator/",
    "pub_date": "2021-09-20T14:00:00+00:00",
    "tags": [
      "python",
      "best-practices",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn how Python's \"and\" operator works and how to use it in your code. You'll get to know its special features and see what kind of programming problems you can solve by using \"and\" in Python.",
    "text": "Conclusion\n Python\u2019s and operator allows you to construct compound Boolean expressions that you can use to decide the course of action of your programs. You can use the and operator to solve several problems both in Boolean or non-Boolean contexts. Learning about how to use the and operator properly can help you write more Pythonic code.In this tutorial, you learned how to:Going through the practical examples in this tutorial can help you get a general idea of how to use the and operator to make decisions in your Python code.",
    "preview": false,
    "links": [
      "#working-with-boolean-logic-in-python",
      "#getting-started-with-pythons-and-operator",
      "#using-pythons-and-operator-with-boolean-expressions",
      "#short-circuiting-the-evaluation",
      "#using-pythons-and-operator-with-common-objects",
      "#mixing-boolean-expressions-and-objects",
      "#combining-python-logical-operators",
      "#using-pythons-and-operator-in-boolean-contexts",
      "#if-statements",
      "#while-loops",
      "#using-pythons-and-operator-in-non-boolean-contexts",
      "#putting-pythons-and-operator-into-action",
      "#flattening-nested-if-statements",
      "#checking-numeric-ranges",
      "#chaining-function-calls-conditionally",
      "#conclusion",
      "/account/join/",
      "/courses/and-operator-python/",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "https://realpython.com/bonus/python-tricks-sample-pdf/",
      "#working-with-boolean-logic-in-python",
      "https://en.wikipedia.org/wiki/George_Boole",
      "https://en.wikipedia.org/wiki/The_Laws_of_Thought",
      "https://en.wikipedia.org/wiki/Boolean_algebra",
      "https://en.wikipedia.org/wiki/Logical_conjunction",
      "https://en.wikipedia.org/wiki/Logical_disjunction",
      "https://en.wikipedia.org/wiki/Negation",
      "https://en.wikipedia.org/wiki/Boolean_expression",
      "https://en.wikipedia.org/wiki/Truth_value",
      "https://realpython.com/python-boolean/",
      "https://docs.python.org/3/library/functions.html#int",
      "https://docs.python.org/3/library/constants.html#built-in-constants",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/python-keywords/#the-and-keyword",
      "https://realpython.com/python-or-operator/",
      "https://realpython.com/python-not-operator/",
      "/account/join/",
      "#getting-started-with-pythons-and-operator",
      "#using-pythons-and-operator-with-boolean-expressions",
      "https://realpython.com/python-variables/",
      "/account/join/",
      "#short-circuiting-the-evaluation",
      "https://en.wikipedia.org/wiki/Short-circuit_evaluation",
      "https://realpython.com/python-bitwise-operators/",
      "https://en.wikipedia.org/wiki/Eager_evaluation",
      "https://realpython.com/python-bitwise-operators/",
      "#using-pythons-and-operator-with-common-objects",
      "https://docs.python.org/3/library/functions.html#bool",
      "https://docs.python.org/3/reference/datamodel.html#object.__bool__",
      "https://docs.python.org/3/reference/datamodel.html#object.__len__",
      "https://docs.python.org/3/library/stdtypes.html#truth-value-testing",
      "/account/join/",
      "#mixing-boolean-expressions-and-objects",
      "#combining-python-logical-operators",
      "https://docs.python.org/3/reference/expressions.html#operator-precedence",
      "#using-pythons-and-operator-in-boolean-contexts",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-while-loop/",
      "https://en.wikipedia.org/wiki/Control_flow",
      "/account/join/",
      "#if-statements",
      "https://realpython.com/python-keywords/#control-flow-keywords-if-elif-else",
      "https://realpython.com/python-print/",
      "https://realpython.com/python-ides-code-editors-guide/",
      "https://realpython.com/python-input-output/#reading-input-from-the-keyboard",
      "https://realpython.com/convert-python-string-to-int/",
      "https://docs.python.org/3/library/functions.html#int",
      "https://realpython.com/run-python-scripts/",
      "#while-loops",
      "https://realpython.com/run-python-scripts/",
      "/account/join/",
      "#using-pythons-and-operator-in-non-boolean-contexts",
      "#putting-pythons-and-operator-into-action",
      "#flattening-nested-if-statements",
      "https://www.python.org/dev/peps/pep-0020/#the-zen-of-python",
      "#checking-numeric-ranges",
      "https://docs.python.org/dev/tutorial/controlflow.html#default-argument-values",
      "https://realpython.com/python-optional-arguments/",
      "/account/join/",
      "#chaining-function-calls-conditionally",
      "https://en.wikipedia.org/wiki/Bash_(Unix_shell)",
      "https://en.wikipedia.org/wiki/Unix",
      "https://realpython.com/python-pathlib/",
      "https://docs.python.org/3/library/pathlib.html#pathlib.Path.write_text",
      "#conclusion",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "/feedback/survey/article/python-and-operator/liked/?from=article-footer",
      "/feedback/survey/article/python-and-operator/disliked/?from=article-footer",
      "/courses/and-operator-python/"
    ]
  },
  {
    "id": 32,
    "title": "Build a Personal Diary With Django and Python",
    "url": "https://realpython.com/django-diary-project-python/",
    "pub_date": "2021-09-15T14:00:00+00:00",
    "tags": [
      "web-dev",
      "projects",
      "django",
      "front-end",
      "basics"
    ],
    "description": "In this beginner-friendly tutorial, you'll build a personal diary in Django. You'll use the strengths of the Django web framework and learn the basics of web apps.",
    "text": "Conclusion\n In this tutorial, you created a personal diary from scratch using Django. You learned how to build a full-featured web application that you can use day to day. It takes advantage of Django\u2019s many strengths, including the admin site, class-based views, the message framework, and the templating system.This Django project is also a perfect basis for your future Django projects. The steps you finished in this diary project are basically the same for other projects, like a blog or a to-do app.In this tutorial, you learned how to:You can download the complete source code for the Django diary by clicking the link below:Get Source Code: Click here to get the source code you\u2019ll use to build a personal diary web app with Django and Python in this tutorial.",
    "preview": false,
    "links": [
      "#demo-video",
      "#project-overview",
      "#prerequisites",
      "#step-1-setting-up-your-django-diary",
      "#initialize-django",
      "#create-the-database",
      "#be-a-superuser",
      "#run-a-development-web-server",
      "#step-2-adding-your-diary-entries-to-the-back-end",
      "#connect-the-entries-app",
      "#create-the-entries-model",
      "#register-the-entry-model",
      "#migrate-the-entry-model",
      "#step-3-displaying-your-diary-entries-on-the-front-end",
      "#create-list-and-detail-views",
      "#create-your-templates",
      "#add-routes-to-your-views",
      "#step-4-making-your-django-diary-look-nice",
      "#add-a-stylesheet",
      "#extend-child-templates",
      "#step-5-managing-your-diary-entries-on-the-front-end",
      "#add-the-views",
      "#create-the-templates",
      "#create-the-urls",
      "#step-6-improving-your-user-experience",
      "#handle-your-success",
      "#get-the-message",
      "#improve-your-navigation",
      "#style-your-messages",
      "#step-7-putting-a-lock-on-your-django-diary",
      "#reuse-your-django-admin-login",
      "#add-a-logout-link",
      "#restrict-access-to-your-views",
      "#next-steps",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/bonus/django-diary-project-code/",
      "#demo-video",
      "/account/join/",
      "#project-overview",
      "#prerequisites",
      "https://realpython.com/products/python-basics-book/",
      "https://realpython.com/python3-object-oriented-programming/",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://realpython.com/what-is-pip/",
      "#step-1-setting-up-your-django-diary",
      "https://docs.python.org/3/library/venv.html#creating-virtual-environments",
      "#initialize-django",
      "https://docs.djangoproject.com/en/3.2/ref/django-admin/#available-commands",
      "/account/join/",
      "#create-the-database",
      "https://docs.djangoproject.com/en/3.2/ref/databases/",
      "https://sqlite.org/index.html",
      "https://realpython.com/django-migrations-a-primer/",
      "https://realpython.com/bonus/django-diary-project-code/",
      "#be-a-superuser",
      "#run-a-development-web-server",
      "https://realpython.com/python-ipaddress-module/",
      "https://docs.djangoproject.com/en/3.2/ref/django-admin/#runserver",
      "https://files.realpython.com/media/django-diary-01-rocket.dd40ae36b369.png",
      "https://files.realpython.com/media/django-diary-01-admin-start.155a8f6be9f6.png",
      "https://docs.djangoproject.com/en/3.1/ref/contrib/admin/",
      "/account/join/",
      "#step-2-adding-your-diary-entries-to-the-back-end",
      "https://docs.djangoproject.com/en/3.2/ref/applications/",
      "https://realpython.com/installable-django-app/",
      "#connect-the-entries-app",
      "https://docs.djangoproject.com/en/3.2/ref/django-admin/#runserver",
      "https://files.realpython.com/media/django-diary-02-terminal.23c1119d2a92.png",
      "https://realpython.com/bonus/django-diary-project-code/",
      "#create-the-entries-model",
      "https://docs.djangoproject.com/en/3.2/topics/db/models/",
      "https://realpython.com/python-import/",
      "https://realpython.com/operator-function-overloading/#printing-your-objects-prettily-using-str",
      "/account/join/",
      "#register-the-entry-model",
      "#migrate-the-entry-model",
      "https://realpython.com/django-migrations-a-primer/",
      "https://files.realpython.com/media/django-diary-02-admin-without-entries.39eb2adf6286.png",
      "#step-3-displaying-your-diary-entries-on-the-front-end",
      "https://realpython.com/bonus/django-diary-project-code/",
      "#create-list-and-detail-views",
      "https://docs.djangoproject.com/en/3.2/ref/class-based-views/",
      "https://docs.djangoproject.com/en/3.2/ref/class-based-views/generic-display/#detailview",
      "https://docs.djangoproject.com/en/3.2/ref/class-based-views/generic-display/#listview",
      "/account/join/",
      "#create-your-templates",
      "https://docs.djangoproject.com/en/3.2/topics/templates/",
      "https://realpython.com/html-css-python/#create-your-first-html-file",
      "https://realpython.com/html-css-python/#style-your-content-with-css",
      "https://docs.djangoproject.com/en/dev/ref/templates/builtins/#date",
      "#add-routes-to-your-views",
      "https://docs.djangoproject.com/en/3.2/ref/urls/#path",
      "https://docs.djangoproject.com/en/3.2/ref/class-based-views/base/#django.views.generic.base.View.as_view",
      "https://files.realpython.com/media/django-diary-03-entries-unstyled.33d7378f372b.png",
      "/account/join/",
      "#step-4-making-your-django-diary-look-nice",
      "https://realpython.com/bonus/django-diary-project-code/",
      "https://docs.djangoproject.com/en/3.2/ref/templates/language/#template-inheritance",
      "#add-a-stylesheet",
      "https://developer.mozilla.org/en-US/docs/Learn/CSS",
      "#extend-child-templates",
      "https://files.realpython.com/media/django-diary-04-diary-entries-styled.254dc10ce310.png",
      "#step-5-managing-your-diary-entries-on-the-front-end",
      "/account/join/",
      "#add-the-views",
      "https://docs.djangoproject.com/en/3.2/ref/class-based-views/mixins-editing/#django.views.generic.edit.FormMixin.get_success_url",
      "https://realpython.com/python-kwargs-and-args/",
      "https://docs.djangoproject.com/en/3.2/ref/urlresolvers/#reverse-lazy",
      "#create-the-templates",
      "https://docs.djangoproject.com/en/3.1/topics/forms/#working-with-form-templates",
      "https://docs.djangoproject.com/en/3.2/ref/csrf/",
      "https://docs.djangoproject.com/en/3.1/ref/csrf/",
      "#create-the-urls",
      "https://realpython.com/bonus/django-diary-project-code/",
      "/account/join/",
      "#step-6-improving-your-user-experience",
      "#handle-your-success",
      "https://docs.djangoproject.com/en/3.2/ref/contrib/messages/",
      "https://realpython.com/bonus/django-diary-project-code/",
      "#get-the-message",
      "https://docs.djangoproject.com/en/3.2/ref/contrib/messages/#displaying-messages",
      "https://docs.djangoproject.com/en/3.1/ref/templates/builtins/#if",
      "#improve-your-navigation",
      "/account/join/",
      "#style-your-messages",
      "https://files.realpython.com/media/django-diary-06-diary-list-with-message.9005107a9fdd.png",
      "#step-7-putting-a-lock-on-your-django-diary",
      "#reuse-your-django-admin-login",
      "https://docs.djangoproject.com/en/3.2/topics/auth/customizing/",
      "#add-a-logout-link",
      "#restrict-access-to-your-views",
      "https://realpython.com/django-view-authorization/",
      "https://docs.djangoproject.com/en/3.2/topics/auth/default/#the-loginrequired-mixin",
      "https://files.realpython.com/media/django-diary-07-final.20d3ed883ec5.png",
      "https://realpython.com/bonus/django-diary-project-code/",
      "/account/join/",
      "#next-steps",
      "https://realpython.com/django-setup/",
      "https://realpython.com/get-started-with-django-1/",
      "https://realpython.com/manage-users-in-django-admin/",
      "https://realpython.com/customize-django-admin-python/",
      "https://realpython.com/python-django-blog/",
      "#conclusion",
      "https://realpython.com/django-todo-lists/",
      "https://realpython.com/bonus/django-diary-project-code/",
      "/feedback/survey/article/django-diary-project-python/liked/?from=article-footer",
      "/feedback/survey/article/django-diary-project-python/disliked/?from=article-footer"
    ]
  },
  {
    "id": 33,
    "title": "How Long Does It Take to Learn Python?",
    "url": "https://realpython.com/how-long-does-it-take-to-learn-python/",
    "pub_date": "2021-09-06T14:00:00+00:00",
    "tags": [
      "community",
      "basics"
    ],
    "description": "In this article, you'll assess whether or not learning Python is a good investment of your time, how long it will take you, and what background factors you need to consider when planning your learning journey. You'll also learn what resources exist that can help you get started.",
    "text": "Conclusion\n You learned about the different phases of learning Python. You considered reasons why you might want to learn to program, as well as what stages you\u2019re likely to go through during that process.While you can start to write small scripts in Python after just a few days of study, you\u2019ll probably spend around four months gaining an essential ability in programming with Python. You\u2019ll have to spend years and build many projects to become a Python expert in even just one field.In this article, you learned:Learning to program in Python can be an excellent investment of your time. If you keep showing up and make it exciting and fun for yourself, then you\u2019re more likely to find ways to integrate it into your regular habits. If you\u2019re looking for more advice on your first steps, check out 11 Beginner Tips for Learning Python Programming.",
    "preview": false,
    "links": [
      "#why-would-you-learn-python",
      "#what-does-learning-python-mean",
      "#how-can-you-measure-your-learning-progress",
      "#the-four-stages-of-competence",
      "#stage-1-unconscious-incompetence-unawareness",
      "#stage-2-conscious-incompetence-awareness",
      "#stage-3-conscious-competence-ability",
      "#stage-4-unconscious-competence-expertise",
      "#what-factors-influence-your-learning-journey",
      "#how-long-does-it-take-to-learn-python",
      "#from-unawareness-to-awareness",
      "#from-awareness-to-ability",
      "#from-ability-to-expertise",
      "#which-resources-can-help-you-learn-python-faster",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/bonus/python-tricks-sample-pdf/",
      "#why-would-you-learn-python",
      "https://realpython.com/learning-paths/python-interview/",
      "https://realpython.com/openpyxl-excel-spreadsheets-python/",
      "https://realpython.com/beautiful-soup-web-scraper-python/",
      "https://realpython.com/command-line-interfaces-python-argparse/",
      "https://realpython.com/twitter-bot-python-tweepy/",
      "https://realpython.com/how-to-make-a-discord-bot-python/",
      "https://realpython.com/platformer-python-arcade/",
      "https://realpython.com/asteroids-game-python/",
      "https://realpython.com/top-python-game-engines/",
      "https://realpython.com/micropython/",
      "https://realpython.com/embedded-python/",
      "https://realpython.com/what-can-i-do-with-python/",
      "/account/join/",
      "#what-does-learning-python-mean",
      "#how-can-you-measure-your-learning-progress",
      "https://en.wikipedia.org/wiki/Dunning\u2013Kruger_effect",
      "#the-four-stages-of-competence",
      "https://en.wikipedia.org/wiki/Four_stages_of_competence",
      "https://files.realpython.com/media/four-stages.d678c620edb0.png",
      "#from-unawareness-to-awareness",
      "#from-awareness-to-ability",
      "#from-ability-to-expertise",
      "https://files.realpython.com/media/expertise_spectrum-2.faf28f6fecf9.png",
      "#what-factors-influence-your-learning-journey",
      "/account/join/",
      "#stage-1-unconscious-incompetence-unawareness",
      "https://en.wikipedia.org/wiki/Four_stages_of_competence#Stages",
      "#stage-2-conscious-incompetence-awareness",
      "https://en.wikipedia.org/wiki/Four_stages_of_competence#Stages",
      "#stage-3-conscious-competence-ability",
      "https://en.wikipedia.org/wiki/Four_stages_of_competence#Stages",
      "#stage-4-unconscious-competence-expertise",
      "https://en.wikipedia.org/wiki/Four_stages_of_competence#Stages",
      "/account/join/",
      "#what-factors-influence-your-learning-journey",
      "https://www.nature.com/articles/s41598-020-60661-8",
      "https://realpython.com/community/",
      "#how-long-does-it-take-to-learn-python",
      "#what-does-learning-python-mean",
      "#how-can-you-measure-your-learning-progress",
      "#what-factors-influence-your-learning-journey",
      "#from-unawareness-to-awareness",
      "#why-would-you-learn-python",
      "#from-awareness-to-ability",
      "https://realpython.com/python-first-steps/#the-basic-python-syntax",
      "https://realpython.com/python-data-types/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/python-scope-legb-rule/",
      "https://realpython.com/primer-on-python-decorators/",
      "https://realpython.com/introduction-to-python-generators/",
      "https://realpython.com/learning-paths/object-oriented-programming-oop-python/",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "https://docs.python.org/3/library/",
      "https://realpython.com/python-pathlib/",
      "https://realpython.com/python-collections-module/",
      "https://realpython.com/learning-paths/perfect-your-python-development-setup/",
      "https://realpython.com/products/managing-python-dependencies/",
      "https://realpython.com/python-debug-idle/",
      "https://realpython.com/python-exceptions/",
      "https://realpython.com/learning-paths/test-your-python-apps/",
      "https://realpython.com/python-modules-packages/",
      "https://realpython.com/python-packages/",
      "/account/join/",
      "#from-ability-to-expertise",
      "https://realpython.com/learning-paths/become-python-web-developer/",
      "https://realpython.com/flask-connexion-rest-api/",
      "https://realpython.com/learning-paths/data-science-python-core-skills/",
      "https://realpython.com/learning-paths/machine-learning-python/",
      "https://realpython.com/learning-paths/python-gui-programming/",
      "https://realpython.com/pygame-a-primer/",
      "https://realpython.com/learning-paths/python-devops/",
      "https://realpython.com/embedded-python/",
      "#which-resources-can-help-you-learn-python-faster",
      "https://realpython.com",
      "https://realpython.com/courses/",
      "https://realpython.com/quizzes/",
      "https://realpython.com/tutorials/projects/",
      "https://realpython.com/search",
      "https://realpython.com/learning-paths/",
      "https://realpython.com/tutorials/basics/",
      "https://realpython.com/tutorials/intermediate/",
      "https://realpython.com/tutorials/advanced/",
      "https://realpython.com/best-python-books/",
      "https://realpython.com/products/python-basics-book/",
      "https://realpython.com/products/python-tricks-book/",
      "https://codingbat.com/",
      "https://www.hackerrank.com/auth/signup",
      "https://leetcode.com/",
      "https://www.codingame.com/start",
      "https://adventofcode.com/",
      "https://realpython.com/python-advent-of-code/",
      "https://realpython.com/account/join/",
      "https://www.pythonistacafe.com",
      "https://twitter.com/realpython",
      "https://realpython.com/podcasts/rpp/",
      "https://realpython.com/newsletter/",
      "#conclusion",
      "#the-four-stages-of-competence",
      "https://realpython.com/run-python-scripts/",
      "https://realpython.com/tutorials/projects/",
      "https://realpython.com/python-beginner-tips/",
      "/feedback/survey/article/how-long-does-it-take-to-learn-python/liked/?from=article-footer",
      "/feedback/survey/article/how-long-does-it-take-to-learn-python/disliked/?from=article-footer"
    ]
  },
  {
    "id": 34,
    "title": "Using Python Optional Arguments When Defining Functions",
    "url": "https://realpython.com/python-optional-arguments/",
    "pub_date": "2021-08-30T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn about Python optional arguments and how to define functions with default values. You'll also learn how to create functions that accept any number of arguments using args and kwargs.",
    "text": "Conclusion\n Defining your own function to create a self-contained subroutine is one of the key building blocks when writing code. The most useful and powerful functions are those that perform one clear task and that you can use in a flexible manner. Using optional arguments is a key technique to achieve this.In this tutorial, you\u2019ve learned:A good understanding of optional arguments will also help you use functions in the standard library and in other third-party modules. Displaying the documentation for these functions will show you the function signature from which you\u2019ll be able to identify which arguments are required, which ones are optional, and which ones are args or kwargs.However, the main skill you\u2019ve learned in this tutorial is to define your own functions. You can now start writing functions with required and optional parameters and with a variable number of non-keyword and keyword arguments. Mastering these skills will help you take your Python coding to the next level.",
    "preview": false,
    "links": [
      "#creating-functions-in-python-for-reusing-code",
      "#defining-functions-with-no-input-parameters",
      "#defining-functions-with-required-input-arguments",
      "#using-python-optional-arguments-with-default-values",
      "#default-values-assigned-to-input-parameters",
      "#common-default-argument-values",
      "#data-types-that-shouldnt-be-used-as-default-arguments",
      "#error-messages-related-to-input-arguments",
      "#using-args-and-kwargs",
      "#functions-accepting-any-number-of-arguments",
      "#functions-accepting-any-number-of-keyword-arguments",
      "#conclusion",
      "/account/join/",
      "/courses/defining-python-functions-with-optional-arguments/",
      "https://realpython.com/defining-your-own-python-function/",
      "",
      "#creating-functions-in-python-for-reusing-code",
      "https://www.python.org/dev/peps/pep-0008/",
      "/account/join/",
      "#defining-functions-with-no-input-parameters",
      "https://realpython.com/python-print/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-scope-legb-rule/",
      "#defining-functions-with-required-input-arguments",
      "https://realpython.com/iterate-through-dictionary-python/",
      "https://realpython.com/run-python-scripts/",
      "https://realpython.com/python-traceback/",
      "/account/join/",
      "#using-python-optional-arguments-with-default-values",
      "#default-values-assigned-to-input-parameters",
      "https://realpython.com/python-boolean/",
      "#common-default-argument-values",
      "https://realpython.com/python-numbers/#integers",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/null-in-python/",
      "/account/join/",
      "#data-types-that-shouldnt-be-used-as-default-arguments",
      "https://realpython.com/python-data-types/",
      "https://realpython.com/python-mutable-vs-immutable-types/",
      "https://realpython.com/courses/immutability-python/",
      "https://docs.python.org/3/library/stdtypes.html#immutable-sequence-types",
      "https://realpython.com/python-namespaces-scope/",
      "https://realpython.com/python-return-statement/",
      "/account/join/",
      "#error-messages-related-to-input-arguments",
      "#using-args-and-kwargs",
      "https://realpython.com/python-kwargs-and-args/",
      "#functions-accepting-any-number-of-arguments",
      "https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists",
      "https://realpython.com/python-lists-tuples/#python-tuples",
      "/account/join/",
      "#functions-accepting-any-number-of-keyword-arguments",
      "https://realpython.com/defining-your-own-python-function/#positional-only-arguments",
      "https://realpython.com/defining-your-own-python-function/#keyword-only-arguments",
      "https://realpython.com/python-kwargs-and-args/",
      "https://realpython.com/defining-your-own-python-function/#keyword-only-arguments",
      "#conclusion",
      "/feedback/survey/article/python-optional-arguments/liked/?from=article-footer",
      "/feedback/survey/article/python-optional-arguments/disliked/?from=article-footer",
      "/courses/defining-python-functions-with-optional-arguments/"
    ]
  },
  {
    "id": 35,
    "title": "Your First Steps With Django: Set Up a Django Project",
    "url": "https://realpython.com/django-setup/",
    "pub_date": "2021-07-21T14:05:12+00:00",
    "tags": [
      "best-practices",
      "basics",
      "django",
      "web-dev"
    ],
    "description": "This tutorial provides a walkthrough and a reference for starting a Django project and app. You can use it as a quick setup guide for any future Django project and tutorial you'll work on.",
    "text": "Conclusion\n In this tutorial, you went over all the steps necessary to set up the foundations for a new Django web application. You got familiar with the most common terminal commands that you\u2019ll repeat over and over again when using Django for web development.You also read about why you want to use each command and what they produce, and you learned some tips and tricks associated with getting set up with Django.In this tutorial, you learned how to:After completing the steps outlined in this tutorial, you\u2019re ready to start building your custom web application using Django. For example, you could create a portfolio app to showcase your coding projects. For a structured way to keep growing your Django skills, you can continue working through the resources provided in the Django learning path.Keep setting up the fundamental scaffolding for Django web applications until these steps become second nature. If you need a refresher, then you can always use this tutorial as a quick reference.",
    "preview": false,
    "links": [
      "#prepare-your-environment",
      "#install-django-and-pin-your-dependencies",
      "#set-up-a-django-project",
      "#start-a-django-app",
      "#command-reference",
      "#conclusion",
      "/account/join/",
      "/courses/set-up-django-project/",
      "https://www.djangoproject.com/",
      "#command-reference",
      "https://realpython.com/installing-python/",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://realpython.com/what-is-pip/",
      "https://realpython.com/products/python-basics-book/",
      "#",
      "#prepare-your-environment",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://realpython.com/learning-paths/perfect-your-python-development-setup/",
      "/account/join/",
      "#install-django-and-pin-your-dependencies",
      "https://realpython.com/pypi-publish-python-package/",
      "#set-up-a-django-project",
      "https://docs.djangoproject.com/en/3.2/ref/django-admin/",
      "/account/join/",
      "#start-a-django-app",
      "https://realpython.com/python-modules-packages/",
      "#command-reference",
      "#prepare-your-environment",
      "#prepare-your-environment",
      "#install-django-and-pin-your-dependencies",
      "#install-django-and-pin-your-dependencies",
      "#set-up-a-django-project",
      "#start-a-django-app",
      "/account/join/",
      "#conclusion",
      "#command-reference",
      "https://realpython.com/get-started-with-django-1/",
      "https://realpython.com/learning-paths/django-web-development/",
      "/feedback/survey/article/django-setup/liked/?from=article-footer",
      "/feedback/survey/article/django-setup/disliked/?from=article-footer",
      "/courses/set-up-django-project/"
    ]
  },
  {
    "id": 36,
    "title": "Using FastAPI to Build Python Web APIs",
    "url": "https://realpython.com/fastapi-python-web-apis/",
    "pub_date": "2021-07-14T14:00:00+00:00",
    "tags": [
      "web-dev",
      "basics",
      "api"
    ],
    "description": "In this guide, you'll learn the main concepts of FastAPI and how to use it to quickly create web APIs that implement best practices by default. By the end of it, you will be able to start creating production-ready web APIs.",
    "text": "Conclusion\n In this tutorial, you learned about FastAPI and how to use it to create production-ready APIs that have best practices by default while providing the best developer experience possible. You learned how to:You\u2019re now ready to start creating your own highly performant APIs for your projects. If you want to dive deeper into the world of FastAPI, then you can follow the official User Guide in the FastAPI documentation.",
    "preview": false,
    "links": [
      "#what-is-fastapi",
      "#install-fastapi",
      "#first-steps",
      "#create-a-first-api",
      "#run-the-first-api-app-with-uvicorn",
      "#check-the-response",
      "#check-the-interactive-api-documentation",
      "#check-the-alternative-interactive-api-documentation",
      "#the-first-api-step-by-step",
      "#path-parameters-get-an-item-by-id",
      "#path-parameters-with-types",
      "#data-conversion",
      "#data-validation",
      "#documentation",
      "#data-handling-with-pydantic",
      "#order-matters-put-fixed-paths-first",
      "#request-body-receiving-json-data",
      "#use-pydantic-to-declare-json-data-models-data-shapes",
      "#automatic-documentation-with-pydantic",
      "#editor-support-autocompletion-and-type-checks",
      "#use-the-pydantic-model",
      "#request-body-and-path-parameters",
      "#learn-more-about-fastapi",
      "#conclusion",
      "/account/join/",
      "/courses/python-rest-apis-with-fastapi/",
      "https://realpython.com/team/sramirez/",
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview",
      "https://realpython.com/python-json/",
      "https://fastapi.tiangolo.com/python-types/",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://realpython.com/bonus/python-mastery-course/",
      "#what-is-fastapi",
      "https://www.starlette.io/",
      "https://pydantic-docs.helpmanual.io/",
      "https://github.com/OAI/OpenAPI-Specification",
      "https://json-schema.org/",
      "/account/join/",
      "#install-fastapi",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://www.uvicorn.org/#introduction",
      "https://realpython.com/what-is-pip/",
      "#first-steps",
      "#create-a-first-api",
      "https://www.uvicorn.org/",
      "#run-the-first-api-app-with-uvicorn",
      "#check-the-response",
      "https://realpython.com/python-dicts/",
      "/account/join/",
      "#check-the-interactive-api-documentation",
      "https://github.com/swagger-api/swagger-ui",
      "https://files.realpython.com/media/fastapi-first-steps-01-swagger-ui-simple.c46a4a9242dd.png",
      "#check-the-alternative-interactive-api-documentation",
      "https://github.com/Redocly/redoc",
      "https://files.realpython.com/media/fastapi-first-steps-02-redoc-simple.811f594f1c70.png",
      "#the-first-api-step-by-step",
      "https://realpython.com/python3-object-oriented-programming/#define-a-class-in-python",
      "https://realpython.com/python-variables/",
      "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol",
      "https://realpython.com/primer-on-python-decorators/",
      "https://graphql.org/learn/serving-over-http/",
      "https://realpython.com/async-io-python/",
      "https://fastapi.tiangolo.com/async/",
      "https://realpython.com/python-return-statement/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-numbers/",
      "https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping",
      "/account/join/",
      "#path-parameters-get-an-item-by-id",
      "https://realpython.com/python-formatted-output/",
      "#path-parameters-with-types",
      "#data-conversion",
      "#data-validation",
      "/account/join/",
      "#documentation",
      "https://files.realpython.com/media/fastapi-path-params-image01.f8af7578f694.png",
      "https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md",
      "https://files.realpython.com/media/fastapi-path-params-image02.9e01bff65ca2.png",
      "#data-handling-with-pydantic",
      "#order-matters-put-fixed-paths-first",
      "#request-body-receiving-json-data",
      "/account/join/",
      "#use-pydantic-to-declare-json-data-models-data-shapes",
      "https://realpython.com/null-in-python/",
      "https://json-schema.org",
      "#automatic-documentation-with-pydantic",
      "https://files.realpython.com/media/fastapi-body-image01.cbf75d4cdb50.png",
      "https://files.realpython.com/media/fastapi-body-image02.e1a560532c37.png",
      "/account/join/",
      "#editor-support-autocompletion-and-type-checks",
      "https://files.realpython.com/media/fastapi-body-image03.2984d2abecb8.png",
      "https://files.realpython.com/media/fastapi-body-image04.aa1cc274a9a2.png",
      "https://realpython.com/python-development-visual-studio-code/",
      "https://realpython.com/pycharm-guide/",
      "https://files.realpython.com/media/fastapi-body-image05.bb8ddf770d69.png",
      "https://github.com/koxudaxi/pydantic-pycharm-plugin/",
      "https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance",
      "#use-the-pydantic-model",
      "#request-body-and-path-parameters",
      "https://www.postman.com/",
      "https://curl.se/docs/httpscripting.html",
      "/account/join/",
      "#learn-more-about-fastapi",
      "https://fastapi.tiangolo.com/tutorial/query-params/",
      "https://fastapi.tiangolo.com/tutorial/dependencies/",
      "https://fastapi.tiangolo.com/tutorial/security/",
      "https://fastapi.tiangolo.com/tutorial/background-tasks/",
      "https://fastapi.tiangolo.com/async/",
      "https://fastapi.tiangolo.com/advanced/websockets/",
      "https://fastapi.tiangolo.com/tutorial/bigger-applications/",
      "https://realpython.com/python-async-features/",
      "https://realpython.com/async-io-python/",
      "https://realpython.com/python-type-checking/",
      "#conclusion",
      "https://fastapi.tiangolo.com/tutorial/",
      "/feedback/survey/article/fastapi-python-web-apis/liked/?from=article-footer",
      "/feedback/survey/article/fastapi-python-web-apis/disliked/?from=article-footer",
      "/courses/python-rest-apis-with-fastapi/"
    ]
  },
  {
    "id": 37,
    "title": "What Can I Do With Python?",
    "url": "https://realpython.com/what-can-i-do-with-python/",
    "pub_date": "2021-07-07T14:00:00+00:00",
    "tags": [
      "basics"
    ],
    "description": "In this tutorial, you'll find a set of guidelines that will help you start applying your Python skills to real-world problems. By the end of your reading, you'll be able to answer the question \"What can I do with Python?\"",
    "text": "Next Steps\n So there you have it! An extensive list of topics and practical projects to start working your way from Python beginner to savvy Pythonista.No matter where you choose to begin, you\u2019ll be opening up countless avenues for growing your programming skills. Pick something and get started! Do you have an idea for a practical project that isn\u2019t here? Leave a comment down below! You could suggest the perfect project for a fellow programmer.If you get stuck and need a nudge in the right direction, then check out 11 Beginner Tips for Learning Python Programming to help get yourself back on track.Another great way to get unstuck is to talk it out. Coding doesn\u2019t have to be a solitary activity. If you need a way to ask questions and get answers quickly from knowledgeable Python developers, then consider joining The Real Python Member\u2019s Slack community. Everyone is welcome, no matter how much experience you have. You can always help others and also get help from others.",
    "preview": false,
    "links": [
      "#python-in-the-real-world",
      "#develop-cool-software",
      "#web-development",
      "#cli-development",
      "#gui-development",
      "#game-development",
      "#dive-into-data-science-and-math",
      "#machine-learning",
      "#scientific-computing",
      "#data-analysis-and-visualization",
      "#web-scraping",
      "#speed-up-and-automate-your-workflow",
      "#devops",
      "#development-environment",
      "#software-packaging-and-deployment",
      "#database-systems",
      "#software-testing",
      "#develop-embedded-systems-and-robots",
      "#what-you-probably-shouldnt-do-with-python",
      "#what-else-can-i-do-with-python",
      "#conclusion",
      "#next-steps",
      "/account/join/",
      "https://realpython.com/products/python-basics-book/",
      "https://realpython.com/learning-paths/python3-introduction/",
      "https://realpython.com/python-variables/",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python3-object-oriented-programming/",
      "https://realpython.com/bonus/python-basics-sample-free-chapter/",
      "#python-in-the-real-world",
      "https://www.jetbrains.com/lp/python-developers-survey-2020/#PurposesUsingPython",
      "https://realpython.com/tutorials/web-dev/",
      "https://realpython.com/tutorials/data-science/",
      "https://realpython.com/tutorials/machine-learning/",
      "https://talkpython.fm/episodes/show/232/become-a-robot-developer-with-python",
      "https://www.python.org/success-stories/",
      "https://realpython.com/world-class-companies-using-python/",
      "https://stackoverflow.com/questions/2560310/heavy-usage-of-python-at-google/2561008#2561008",
      "https://twitter.com/gvanrossum",
      "https://pyfound.blogspot.com/2021/05/the-2021-python-language-summit-cpython.html",
      "https://instagram-engineering.com/web-service-efficiency-at-instagram-with-python-4976d078e366",
      "https://realpython.com/python-news-march-2021/#python-lands-on-mars",
      "https://en.wikipedia.org/wiki/Robotics",
      "/account/join/",
      "#develop-cool-software",
      "https://en.wikipedia.org/wiki/Software_framework",
      "https://en.wikipedia.org/wiki/World_Wide_Web",
      "https://en.wikipedia.org/wiki/Desktop_metaphor",
      "https://en.wikipedia.org/wiki/Mobile_computing",
      "https://realpython.com/top-python-game-engines/",
      "#web-development",
      "https://www.djangoproject.com/",
      "https://fastapi.tiangolo.com/",
      "https://realpython.com/async-io-python/",
      "https://palletsprojects.com/p/flask/",
      "https://wsgi.readthedocs.io/",
      "https://www.tornadoweb.org/en/stable/",
      "https://en.wikipedia.org/wiki/Input/output",
      "https://realpython.com/tutorials/web-dev/",
      "https://realpython.com/tutorials/django/",
      "https://realpython.com/tutorials/flask/",
      "https://realpython.com/fastapi-python-web-apis/",
      "https://realpython.com/get-started-with-django-1/",
      "#cli-development",
      "https://en.wikipedia.org/wiki/Command-line_interface",
      "https://docs.python.org/3/library/argparse.html#module-argparse",
      "https://docs.python.org/3/library/index.html",
      "https://palletsprojects.com/p/click/",
      "https://typer.tiangolo.com/",
      "https://en.wikipedia.org/wiki/Shell_(computing)",
      "https://realpython.com/command-line-interfaces-python-argparse/",
      "https://realpython.com/comparing-python-command-line-parsing-libraries-argparse-docopt-click/",
      "https://realpython.com/directory-tree-generator-python/",
      "https://en.wikipedia.org/wiki/Directory_(computing)",
      "#gui-development",
      "https://en.wikipedia.org/wiki/Graphical_user_interface",
      "https://en.wikipedia.org/wiki/Desktop_environment",
      "https://kivy.org/#home",
      "https://en.wikipedia.org/wiki/Multi-touch",
      "https://realpython.com/python-raspberry-pi/",
      "https://www.riverbankcomputing.com/static/Docs/PyQt6/",
      "https://wiki.qt.io/About_Qt",
      "https://realpython.com/python-pyqt-qthread/",
      "https://realpython.com/python-pyqt-database/",
      "https://pysimplegui.readthedocs.io/en/latest/",
      "https://github.com/dddomodossola/remi",
      "https://www.qt.io/qt-for-python",
      "https://docs.python.org/3/library/tkinter.html#module-tkinter",
      "https://en.wikipedia.org/wiki/Tk_(software)",
      "https://www.wxpython.org/",
      "https://www.wxwidgets.org/",
      "https://en.wikipedia.org/wiki/C%2B%2B",
      "https://en.wikipedia.org/wiki/API",
      "https://realpython.com/python-gui-tkinter/",
      "https://realpython.com/tutorials/gui/",
      "https://realpython.com/learning-paths/python-gui-programming/",
      "https://realpython.com/learning-paths/pyqt-gui-programming/",
      "https://en.wikipedia.org/wiki/Front_end_and_back_end",
      "https://realpython.com/python-pyqt-gui-calculator/",
      "https://realpython.com/bulk-file-rename-tool-python/",
      "https://realpython.com/python-contact-book/",
      "/account/join/",
      "#game-development",
      "https://realpython.com/python-variables/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/courses/intro-object-oriented-programming-oop-python/",
      "https://arcade.academy/index.html",
      "https://www.pygame.org/wiki/about",
      "http://www.libsdl.org/",
      "http://pyglet.org/",
      "https://en.wikipedia.org/wiki/OpenGL",
      "https://realpython.com/tutorials/gamedev/",
      "https://realpython.com/pygame-a-primer/",
      "https://realpython.com/arcade-python-game-framework/",
      "https://realpython.com/tic-tac-toe-python/",
      "https://realpython.com/python-rock-paper-scissors/",
      "https://realpython.com/asteroids-game-python/",
      "https://realpython.com/platformer-python-arcade/",
      "#dive-into-data-science-and-math",
      "https://en.wikipedia.org/wiki/Data_science",
      "https://en.wikipedia.org/wiki/Statistic",
      "https://en.wikipedia.org/wiki/Mathematics",
      "https://en.wikipedia.org/wiki/Computer_programming",
      "https://realpython.com/tutorials/data-science/",
      "https://en.wikipedia.org/wiki/Machine_learning",
      "https://en.wikipedia.org/wiki/Artificial_intelligence",
      "https://en.wikipedia.org/wiki/Computational_science",
      "https://en.wikipedia.org/wiki/Data_analysis",
      "https://en.wikipedia.org/wiki/Data_visualization",
      "https://en.wikipedia.org/wiki/Data_mining",
      "#machine-learning",
      "https://en.wikipedia.org/wiki/Training_data",
      "https://keras.io/",
      "https://www.nltk.org/",
      "https://realpython.com/nltk-nlp-python/",
      "https://pytorch.org/",
      "http://scikit-learn.org/",
      "https://en.wikipedia.org/wiki/Supervised_learning",
      "https://en.wikipedia.org/wiki/Unsupervised_learning",
      "https://www.tensorflow.org/",
      "https://realpython.com/tutorials/machine-learning/",
      "https://realpython.com/learning-paths/machine-learning-python/",
      "#scientific-computing",
      "https://en.wikipedia.org/wiki/Computing",
      "https://en.wikipedia.org/wiki/Supercomputer",
      "https://en.wikipedia.org/wiki/Computer_cluster",
      "https://numpy.org/",
      "https://realpython.com/python-linear-algebra/",
      "https://www.scipy.org/",
      "https://simpy.readthedocs.io/en/latest/",
      "https://realpython.com/learning-paths/math-data-science/",
      "https://realpython.com/numpy-scipy-pandas-correlation-python/",
      "https://realpython.com/simpy-simulating-with-python/",
      "/account/join/",
      "#data-analysis-and-visualization",
      "https://en.wikipedia.org/wiki/Data_analysis",
      "https://en.wikipedia.org/wiki/Data_cleansing",
      "https://en.wikipedia.org/wiki/Data_transformation",
      "https://en.wikipedia.org/wiki/Data_modeling",
      "https://en.wikipedia.org/wiki/Data_visualization",
      "https://bokeh.org/",
      "https://plotly.com/dash/",
      "https://matplotlib.org/",
      "https://pandas.pydata.org/",
      "https://seaborn.pydata.org/",
      "https://realpython.com/learning-paths/data-collection-storage/",
      "https://realpython.com/learning-paths/data-visualization-python/",
      "https://realpython.com/learning-paths/data-science-python-core-skills/",
      "https://realpython.com/learning-paths/pandas-data-science/",
      "https://realpython.com/python-dash/",
      "https://realpython.com/pandas-project-gradebook/",
      "https://realpython.com/python-csv/",
      "#web-scraping",
      "https://en.wikipedia.org/wiki/World_Wide_Web",
      "https://en.wikipedia.org/wiki/Web_crawler",
      "https://en.wikipedia.org/wiki/Web_scraping",
      "https://www.crummy.com/software/BeautifulSoup/bs4/doc/",
      "https://requests.readthedocs.io/en/latest/",
      "https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol",
      "https://docs.scrapy.org/en/latest/",
      "https://realpython.com/urllib-request/",
      "https://en.wikipedia.org/wiki/Digest_access_authentication",
      "https://realpython.com/tutorials/web-scraping/",
      "https://realpython.com/learning-paths/python-web-scraping/",
      "https://realpython.com/beautiful-soup-web-scraper-python/",
      "https://realpython.com/python-bitcoin-ifttt/",
      "https://ifttt.com/",
      "https://realpython.com/python-requests/",
      "https://en.wikipedia.org/wiki/Webhook",
      "https://realpython.com/python-beginner-tips/",
      "https://realpython.com/twitter-sentiment-python-docker-elasticsearch-kibana/",
      "https://realpython.com/python-versions-docker/",
      "http://www.tweepy.org/",
      "http://textblob.readthedocs.io/en/dev/",
      "http://www.elasticsearch.org/",
      "http://www.elasticsearch.org/overview/kibana/",
      "/account/join/",
      "#speed-up-and-automate-your-workflow",
      "https://en.wikipedia.org/wiki/DevOps",
      "https://realpython.com/effective-python-environment/",
      "https://en.wikipedia.org/wiki/Software_deployment",
      "#devops",
      "https://en.wikipedia.org/wiki/IT_operations",
      "https://www.ansible.com/",
      "https://en.wikipedia.org/wiki/Provisioning",
      "https://en.wikipedia.org/wiki/Application_deployment",
      "https://en.wikipedia.org/wiki/Infrastructure_as_code",
      "https://docs.docker.com/compose/",
      "https://docs.docker.com/",
      "https://yaml.org/",
      "https://realpython.com/tutorials/devops/",
      "https://realpython.com/learning-paths/python-devops/",
      "#development-environment",
      "https://docs.conda.io/en/latest/",
      "https://pip.pypa.io/en/stable/",
      "https://packaging.python.org/guides/tool-recommendations/",
      "https://pypi.org/",
      "https://pipenv.pypa.io/en/latest/",
      "https://virtualenv.pypa.io/en/latest/",
      "https://pipxproject.github.io/pipx/",
      "https://github.com/pyenv/pyenv",
      "https://realpython.com/tutorials/tools/",
      "https://realpython.com/learning-paths/perfect-your-python-development-setup/",
      "https://realpython.com/effective-python-environment/",
      "#software-packaging-and-deployment",
      "https://packaging.python.org/tutorials/packaging-projects/",
      "https://en.wikipedia.org/wiki/Software_deployment",
      "https://flit.readthedocs.io/en/latest/index.html",
      "https://python-poetry.org/",
      "https://www.pyinstaller.org/",
      "https://packaging.python.org/key_projects/#setuptools",
      "https://packaging.python.org/key_projects/#distutils",
      "https://packaging.python.org/glossary/#term-Distribution-Package",
      "https://twine.readthedocs.io/en/latest/",
      "https://realpython.com/pypi-publish-python-package/",
      "https://realpython.com/pyinstaller-python/",
      "https://packaging.python.org/",
      "/account/join/",
      "#database-systems",
      "https://en.wikipedia.org/wiki/Database#Database_management_system",
      "https://en.wikipedia.org/wiki/SQL",
      "https://en.wikipedia.org/wiki/NoSQL",
      "https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping",
      "https://realpython.com/python3-object-oriented-programming/",
      "http://docs.mongoengine.org/",
      "https://realpython.com/introduction-to-mongodb-and-python/",
      "https://dev.mysql.com/doc/connector-python/en/",
      "https://dev.mysql.com/",
      "https://www.psycopg.org/",
      "https://www.postgresql.org/about/",
      "https://pymongo.readthedocs.io/en/stable/index.html",
      "https://docs.mongodb.com/",
      "https://www.sqlalchemy.org/",
      "https://realpython.com/python-sql-libraries/",
      "https://docs.python.org/3/library/sqlite3.html#module-sqlite3",
      "https://www.sqlite.org/about.html",
      "https://realpython.com/tutorials/databases/",
      "https://realpython.com/learning-paths/data-collection-storage/",
      "#software-testing",
      "https://realpython.com/run-python-scripts/",
      "https://en.wikipedia.org/wiki/Test-driven_development",
      "https://docs.python.org/3/library/doctest.html#module-doctest",
      "https://realpython.com/documenting-python-code/",
      "https://realpython.com/interacting-with-python/",
      "https://docs.pytest.org/en/6.2.x/contents.html",
      "https://tox.readthedocs.io/en/latest/",
      "https://pypi.org/project/virtualenv",
      "https://docs.python.org/3/library/unittest.html#module-unittest",
      "https://realpython.com/tutorials/testing/",
      "https://realpython.com/learning-paths/test-your-python-apps/",
      "#develop-embedded-systems-and-robots",
      "https://en.wikipedia.org/wiki/Internet_of_things",
      "https://en.wikipedia.org/wiki/Home_automation",
      "https://en.wikipedia.org/wiki/Self-driving_car",
      "https://en.wikipedia.org/wiki/Robotics",
      "https://microbit.org/",
      "https://circuitpython.org/",
      "https://micropython.org/",
      "https://atsushisakai.github.io/PythonRobotics/",
      "https://www.raspberrypi.org/about/",
      "http://wiki.ros.org/rospy",
      "https://www.ros.org/",
      "https://realpython.com/micropython/",
      "https://realpython.com/podcasts/rpp/5/",
      "https://realpython.com/embedded-python/",
      "https://realpython.com/python-raspberry-pi/",
      "/account/join/",
      "#what-you-probably-shouldnt-do-with-python",
      "https://realpython.com/c-for-python-programmers/",
      "https://realpython.com/python-vs-cpp/",
      "#what-else-can-i-do-with-python",
      "https://www.youtube.com/watch?v=7BiLUehbOb8",
      "https://realpython.com/intermediate-python-project-ideas/",
      "https://twitter.com/realpython",
      "#conclusion",
      "#next-steps",
      "https://realpython.com/python-beginner-tips/",
      "https://realpython.com/community-slack-guide/",
      "/feedback/survey/article/what-can-i-do-with-python/liked/?from=article-footer",
      "/feedback/survey/article/what-can-i-do-with-python/disliked/?from=article-footer"
    ]
  },
  {
    "id": 38,
    "title": "Python's Counter: The Pythonic Way to Count Objects",
    "url": "https://realpython.com/python-counter/",
    "pub_date": "2021-07-05T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn how to use Python's Counter to count several repeated objects at once.",
    "text": "Conclusion\n When you need to count several repeated objects in Python, you can use Counter from collections. This class provides an efficient and Pythonic way to count things without the need for using traditional techniques involving loops and nested data structures. This can make your code cleaner and faster.In this tutorial, you learned how to:You also learned the basics of using Counter instances as multisets. With all this knowledge, you\u2019ll be able to quickly count objects in your code and also to perform math operations with multisets.",
    "preview": false,
    "links": [
      "#counting-objects-in-python",
      "#getting-started-with-pythons-counter",
      "#constructing-counters",
      "#updating-object-counts",
      "#accessing-the-counters-content",
      "#finding-most-common-objects",
      "#putting-counter-into-action",
      "#counting-letters-in-a-text-file",
      "#plotting-categorical-data-with-ascii-bar-charts",
      "#plotting-categorical-data-with-matplotlib",
      "#finding-the-mode-of-a-sample",
      "#counting-files-by-type",
      "#using-counter-instances-as-multisets",
      "#restoring-elements-from-a-counter",
      "#subtracting-the-elements-multiplicity",
      "#doing-arithmetic-with-elements-multiplicity",
      "#conclusion",
      "/account/join/",
      "/courses/counting-python-counter/",
      "https://docs.python.org/3/library/collections.html#module-collections",
      "https://realpython.com/python-dicts/",
      "https://en.wikipedia.org/wiki/Multiset",
      "https://realpython.com/bonus/python-mastery-course/",
      "#counting-objects-in-python",
      "https://realpython.com/python-numbers/#integers",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-conditional-statements/",
      "https://docs.python.org/3/glossary.html#term-hashable",
      "https://docs.python.org/3/glossary.html#term-immutable",
      "https://docs.python.org/3/library/stdtypes.html#dict.get",
      "https://realpython.com/python-defaultdict/",
      "https://docs.python.org/3/library/collections.html#module-collections",
      "https://docs.python.org/3/library/functions.html#int",
      "https://realpython.com/factory-method-python/",
      "https://docs.python.org/3/library/collections.html#collections.Counter",
      "/account/join/",
      "#getting-started-with-pythons-counter",
      "https://docs.python.org/3/glossary.html#term-iterable",
      "#constructing-counters",
      "https://realpython.com/python-lists-tuples/",
      "https://github.com/python/cpython/blob/73b20ae2fb7a5c1374aa5c3719f64c53d29fa0d2/Modules/_collectionsmodule.c#L2307",
      "https://github.com/python/cpython/blob/6f1e8ccffa5b1272a36a35405d3c4e4bbba0c082/Lib/collections/__init__.py#L503",
      "https://realpython.com/python-sets/",
      "https://docs.python.org/3/library/stdtypes.html#dict.fromkeys",
      "/account/join/",
      "#updating-object-counts",
      "https://docs.python.org/3/library/collections.html#collections.Counter.update",
      "#accessing-the-counters-content",
      "https://realpython.com/iterate-through-dictionary-python/",
      "https://realpython.com/python-keyerror/",
      "#finding-most-common-objects",
      "https://docs.python.org/3/library/collections.html#collections.Counter.most_common",
      "https://realpython.com/null-in-python/",
      "https://docs.python.org/dev/whatsnew/2.3.html#extended-slices",
      "https://realpython.com/python-reverse-list/",
      "/account/join/",
      "#putting-counter-into-action",
      "#counting-letters-in-a-text-file",
      "https://www.python.org/dev/peps/pep-0020/",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/read-write-files-python/",
      "https://docs.python.org/3/library/stdtypes.html#str.isalpha",
      "https://en.wikipedia.org/wiki/Letter_frequency",
      "https://en.wikipedia.org/wiki/Language_identification",
      "#plotting-categorical-data-with-ascii-bar-charts",
      "https://en.wikipedia.org/wiki/Statistics",
      "https://en.wikipedia.org/wiki/Categorical_variable",
      "https://en.wikipedia.org/wiki/Bar_chart",
      "/account/join/",
      "#plotting-categorical-data-with-matplotlib",
      "https://realpython.com/python-matplotlib-guide/",
      "https://matplotlib.org/stable/users/installing.html",
      "https://realpython.com/pypi-publish-python-package/",
      "https://realpython.com/what-is-pip/",
      "https://realpython.com/effective-python-environment/",
      "https://realpython.com/absolute-vs-relative-python-imports/",
      "https://realpython.com/python-zip-function/",
      "https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.bar.html#matplotlib.pyplot.bar",
      "https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.show.html#matplotlib.pyplot.show",
      "https://files.realpython.com/media/fruits-bar-chart.d6e2577346c9.png",
      "#finding-the-mode-of-a-sample",
      "https://en.wikipedia.org/wiki/Mode_(statistics)",
      "https://docs.python.org/3/library/statistics.html#module-statistics",
      "https://docs.python.org/3/library/statistics.html#statistics.mode",
      "https://docs.python.org/3/library/statistics.html#statistics.multimode",
      "/account/join/",
      "#counting-files-by-type",
      "https://realpython.com/python-pathlib/",
      "https://docs.python.org/3/library/pathlib.html#pathlib.Path.iterdir",
      "https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.suffix",
      "#using-counter-instances-as-multisets",
      "https://en.wikipedia.org/wiki/Multiset",
      "https://en.wikipedia.org/wiki/Set_(mathematics)",
      "https://en.wikipedia.org/wiki/Element_(mathematics)",
      "https://realpython.com/python-sets/",
      "https://realpython.com/python-print/",
      "https://docs.python.org/3/reference/simple_stmts.html#augmented-assignment-statements",
      "/account/join/",
      "#restoring-elements-from-a-counter",
      "https://docs.python.org/3/library/collections.html#collections.Counter.elements",
      "https://realpython.com/python37-new-features/",
      "https://realpython.com/documenting-python-code/",
      "https://github.com/python/cpython/blob/150af7543214e1541fa582374502ac1cd70e8eb4/Lib/collections/__init__.py#L607",
      "https://en.wikipedia.org/wiki/Prime_number#Unique_factorization",
      "https://realpython.com/python38-new-features/",
      "https://realpython.com/python-math-module/#new-additions-to-the-math-module-in-python-38",
      "https://realpython.com/python-math-module/",
      "#subtracting-the-elements-multiplicity",
      "/account/join/",
      "#doing-arithmetic-with-elements-multiplicity",
      "https://docs.python.org/3/library/collections.html#counter-objects",
      "#conclusion",
      "/feedback/survey/article/python-counter/liked/?from=article-footer",
      "/feedback/survey/article/python-counter/disliked/?from=article-footer",
      "/courses/counting-python-counter/"
    ]
  },
  {
    "id": 39,
    "title": "Reverse Python Lists: Beyond .reverse() and reversed()",
    "url": "https://realpython.com/python-reverse-list/",
    "pub_date": "2021-06-28T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn about Python's tools and techniques to work with lists in reverse order. You'll also learn how to reverse your list by hand.",
    "text": "Conclusion\n Reversing and working with lists in reverse order might be a fairly common task in your day-to-day work as a Python coder. In this tutorial, you took advantage of a couple of Python tools and techniques to reverse your lists and manage them in reverse order.In this tutorial, you learned how to:All of this knowledge helps you improve your list-related skills. It provides you with the required tools to be more proficient when you\u2019re working with Python lists.",
    "preview": false,
    "links": [
      "#reversing-python-lists",
      "#reversing-lists-in-place",
      "#creating-reversed-lists",
      "#reversing-lists-through-slicing",
      "#generating-reversed-lists-by-hand",
      "#using-a-loop",
      "#using-recursion",
      "#using-a-list-comprehension",
      "#iterating-through-lists-in-reverse",
      "#the-built-in-reversed-function",
      "#the-slicing-operator-1",
      "#the-special-method-__reversed__",
      "#reversing-python-lists-a-summary",
      "#sorting-python-lists-in-reverse-order",
      "#conclusion",
      "/account/join/",
      "https://docs.python.org/3/glossary.html#term-iterable",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "https://realpython.com/python-recursion/",
      "",
      "#reversing-python-lists",
      "https://docs.python.org/dev/library/functions.html?highlight=built#reversed",
      "https://docs.python.org/dev/whatsnew/2.3.html#extended-slices",
      "/account/join/",
      "#reversing-lists-in-place",
      "https://docs.python.org/dev/library/stdtypes.html#mutable-sequence-types",
      "https://en.wikipedia.org/wiki/In-place_algorithm",
      "https://realpython.com/python-return-statement/",
      "https://realpython.com/null-in-python/",
      "https://en.wikipedia.org/wiki/Side_effect_(computer_science)",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/python-strings/",
      "https://files.realpython.com/media/python-list-indices.35560d02fcd4.png",
      "https://files.realpython.com/media/python-reverse-list.220302c8f5a4.gif",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-range/",
      "/account/join/",
      "#creating-reversed-lists",
      "https://docs.python.org/dev/library/functions.html#next",
      "https://docs.python.org/dev/whatsnew/2.4.html#pep-322-reverse-iteration",
      "https://www.python.org/dev/peps/pep-0322/",
      "https://docs.python.org/dev/reference/datamodel.html#object.__reversed__",
      "https://docs.python.org/dev/reference/datamodel.html#object.__len__",
      "https://docs.python.org/dev/reference/datamodel.html#object.__getitem__",
      "https://realpython.com/python-range/",
      "https://docs.python.org/dev/library/functions.html#reversed",
      "https://docs.python.org/dev/library/functions.html#iter",
      "https://docs.python.org/3/library/stdtypes.html#iterator.__next__",
      "https://docs.python.org/3/library/stdtypes.html#iterator.__iter__",
      "https://realpython.com/python-sets/",
      "/account/join/",
      "#reversing-lists-through-slicing",
      "https://docs.python.org/dev/whatsnew/2.3.html#extended-slices",
      "https://docs.python.org/dev/library/functions.html#slice",
      "https://docs.python.org/3/glossary.html#term-slice",
      "/account/join/",
      "#generating-reversed-lists-by-hand",
      "#using-a-loop",
      "#using-recursion",
      "https://realpython.com/python-thinking-recursively/",
      "https://realpython.com/python-print/",
      "/account/join/",
      "#using-a-list-comprehension",
      "https://realpython.com/list-comprehension-python/",
      "#iterating-through-lists-in-reverse",
      "#the-built-in-reversed-function",
      "#the-slicing-operator-1",
      "https://realpython.com/python-enumerate/",
      "/account/join/",
      "#the-special-method-__reversed__",
      "https://docs.python.org/dev/reference/datamodel.html#object.__iter__",
      "#reversing-python-lists-a-summary",
      "#sorting-python-lists-in-reverse-order",
      "https://realpython.com/python-sort/",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/python-lists-tuples/",
      "/feedback/survey/article/python-reverse-list/liked/?from=article-footer",
      "/feedback/survey/article/python-reverse-list/disliked/?from=article-footer"
    ]
  },
  {
    "id": 40,
    "title": "Natural Language Processing With Python's NLTK Package",
    "url": "https://realpython.com/nltk-nlp-python/",
    "pub_date": "2021-05-05T14:00:00+00:00",
    "tags": [
      "data-science",
      "basics"
    ],
    "description": "In this beginner-friendly tutorial, you'll take your first steps with Natural Language Processing (NLP) and Python's Natural Language Toolkit (NLTK). You'll learn how to process unstructured data in order to be able to analyze it and draw conclusions from it.",
    "text": "Conclusion\n Congratulations on taking your first steps with NLP! A whole new world of unstructured data is now open for you to explore. Now that you\u2019ve covered the basics of text analytics tasks, you can get out there are find some texts to analyze and see what you can learn about the texts themselves as well as the people who wrote them and the topics they\u2019re about.Now you know how to:For your next step, you can use NLTK to analyze a text to see whether the sentiments expressed in it are positive or negative. To learn more about sentiment analysis, check out Sentiment Analysis: First Steps With Python\u2019s NLTK Library. If you\u2019d like to dive deeper into the nuts and bolts of NLTK, then you can work your way through Natural Language Processing with Python\u2014Analyzing Text with the Natural Language Toolkit.Now get out there and find yourself some text to analyze!",
    "preview": false,
    "links": [
      "#getting-started-with-pythons-nltk",
      "#tokenizing",
      "#filtering-stop-words",
      "#stemming",
      "#tagging-parts-of-speech",
      "#lemmatizing",
      "#chunking",
      "#chinking",
      "#using-named-entity-recognition-ner",
      "#getting-text-to-analyze",
      "#using-a-concordance",
      "#making-a-dispersion-plot",
      "#making-a-frequency-distribution",
      "#finding-collocations",
      "#conclusion",
      "/account/join/",
      "https://en.wikipedia.org/wiki/Natural_language_processing",
      "https://www.nltk.org/",
      "https://en.wikipedia.org/wiki/Unstructured_data",
      "https://realpython.com/products/python-basics-book/",
      "https://realpython.com/bonus/python-basics-sample-download/",
      "#getting-started-with-pythons-nltk",
      "https://realpython.com/installing-python/",
      "https://www.nltk.org/install.html",
      "https://realpython.com/what-is-pip/",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://realpython.com/nltk-nlp-python/#using-named-entity-recognition-ner",
      "https://realpython.com/numpy-tutorial/",
      "https://realpython.com/python-matplotlib-guide/",
      "https://realpython.com/what-is-pip/",
      "https://www.nltk.org/data",
      "/account/join/",
      "#tokenizing",
      "https://en.wikipedia.org/wiki/Herpetology",
      "https://en.wikipedia.org/wiki/Pythonidae",
      "https://realpython.com/absolute-vs-relative-python-imports/",
      "https://realpython.com/python-strings/",
      "https://en.wikipedia.org/wiki/Dune_(novel)",
      "https://realpython.com/python-lists-tuples/",
      "#filtering-stop-words",
      "https://www.youtube.com/watch?v=ri5S4Hcq0nY",
      "https://realpython.com/python-sets/",
      "https://realpython.com/python-for-loop/",
      "https://docs.python.org/3/library/stdtypes.html#str.casefold",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "https://www.merriam-webster.com/dictionary/not",
      "https://www.nltk.org/nltk_data/",
      "https://www.nltk.org/nltk_data/",
      "/account/join/",
      "#stemming",
      "https://simple.wikipedia.org/wiki/Root_(linguistics)",
      "http://www.nltk.org/howto/stem.html",
      "https://www.nltk.org/_modules/nltk/stem/porter.html",
      "https://en.wikipedia.org/wiki/False_positives_and_false_negatives#False_negative_error",
      "https://en.wikipedia.org/wiki/False_positives_and_false_negatives#False_negative_error",
      "https://tartarus.org/martin/PorterStemmer/",
      "/account/join/",
      "#tagging-parts-of-speech",
      "https://www.youtube.com/watch?v=5_vVGPy4-rc",
      "https://realpython.com/python-lists-tuples/",
      "https://www.poetryfoundation.org/poems/42916/jabberwocky",
      "https://en.wikipedia.org/wiki/Nonsense_verse",
      "/account/join/",
      "#lemmatizing",
      "https://www.merriam-webster.com/dictionary/blending",
      "https://www.merriam-webster.com/dictionary/worst",
      "https://www.merriam-webster.com/dictionary/superlative",
      "https://www.merriam-webster.com/dictionary/comparative",
      "https://en.wikipedia.org/wiki/Homograph",
      "/account/join/",
      "#chunking",
      "https://en.wikipedia.org/wiki/The_Lord_of_the_Rings",
      "https://realpython.com/regex-python/",
      "https://xkcd.com/208/",
      "https://www.nltk.org/book/ch07.html#noun-phrase-chunking",
      "https://files.realpython.com/media/lotr_tree.7588d4620a3d.jpg",
      "/account/join/",
      "#chinking",
      "https://files.realpython.com/media/chinking.f731be30df2b.jpg",
      "/account/join/",
      "#using-named-entity-recognition-ner",
      "https://www.nltk.org/book/ch07.html#sec-ner",
      "https://files.realpython.com/media/frodo_person.56bb306284f6.jpg",
      "https://files.realpython.com/media/frodo_ne.83c55460f7f6.jpg",
      "https://en.wikipedia.org/wiki/The_War_of_the_Worlds",
      "/account/join/",
      "#getting-text-to-analyze",
      "https://www.gutenberg.org/",
      "https://en.wikipedia.org/wiki/Personal_advertisement",
      "https://www.nltk.org/book/ch03.html",
      "#using-a-concordance",
      "#making-a-dispersion-plot",
      "https://files.realpython.com/media/dispersion-plot.609e2e61b885.png",
      "https://files.realpython.com/media/homes-dispersion-plot.c89fcb3954ec.png",
      "https://en.wikipedia.org/wiki/Marianne_Dashwood",
      "https://en.wikipedia.org/wiki/John_Willoughby",
      "/account/join/",
      "#making-a-frequency-distribution",
      "https://github.com/nltk/nltk/blob/1805fe870635afb7ef16d4ff5373e1c3d97c9107/nltk/probability.py#L61",
      "https://realpython.com/nltk-nlp-python/#filtering-stop-words",
      "https://files.realpython.com/media/freq-dist.1812fe36b438.png",
      "https://realpython.com/nltk-nlp-python/#using-a-concordance",
      "/account/join/",
      "#finding-collocations",
      "https://realpython.com/asins/902723261X/",
      "https://en.wikipedia.org/wiki/English-language_idioms",
      "https://realpython.com/nltk-nlp-python/#lemmatizing",
      "https://realpython.com/python-data-types/",
      "https://www.nltk.org/api/nltk.html#nltk.text.Text",
      "#conclusion",
      "https://realpython.com/python-nltk-sentiment-analysis/",
      "https://www.nltk.org/book/",
      "/feedback/survey/article/nltk-nlp-python/liked/?from=article-footer",
      "/feedback/survey/article/nltk-nlp-python/disliked/?from=article-footer"
    ]
  },
  {
    "id": 41,
    "title": "Python Basics: Paperback Now Available!",
    "url": "https://realpython.com/python-basics-paperback/",
    "pub_date": "2021-04-26T14:00:00+00:00",
    "tags": [
      "community",
      "basics"
    ],
    "description": "After years of writing, reviewing, and testing, we\u2019re delighted to announce that Python Basics: A Practical Introduction to Python 3 is now available in paperback! In this article, you\u2019ll see how you can level up your Python with Python Basics and how other Pythonistas have already been doing it.",
    "text": "Level Up Your Python With Python Basics!\n It\u2019s been rewarding to hear that readers have been getting so much out of this book, and we\u2019d love to hear from you! The feedback we received from the Real Python community was priceless\u2014and we\u2019re all extremely happy with how the final book turned out. Thanks for your support! To get your hands on the book, click the link below:Once you\u2019ve got the book, it would be a huge help if you could add your own review and rating to Amazon. And please feel free to reach out to us directly to let us know how your Python journey is going and what kinds of learning resources you need to take your next big step.",
    "preview": false,
    "links": [
      "#you-can-get-python-basics-in-paperback",
      "#who-should-read-this-book",
      "#are-you-new-to-programming",
      "#are-you-new-to-python",
      "#are-you-a-pythonista-who-wants-to-keep-learning",
      "#what-else-do-you-need-to-know",
      "#level-up-your-python-with-python-basics",
      "/account/join/",
      "https://realpython.com/products/python-basics-book/",
      "https://realpython.com/asins/1775093328/",
      "#you-can-get-python-basics-in-paperback",
      "https://realpython.com/community/",
      "https://files.realpython.com/media/pb-paperback.f7a54aa992f8.jpg",
      "https://files.realpython.com/media/zoom.04cdf54a9288.png",
      "https://files.realpython.com/media/Screen_Shot_2021-03-23_at_7.02.28_PM.da131d307eae.png",
      "https://files.realpython.com/media/Screen_Shot_2021-03-23_at_6.58.31_PM.6256ef11d738.png",
      "/account/join/",
      "#who-should-read-this-book",
      "#are-you-new-to-programming",
      "#are-you-new-to-python",
      "#are-you-a-pythonista-who-wants-to-keep-learning",
      "#what-else-do-you-need-to-know",
      "https://realpython.com/products/python-basics-book/",
      "https://realpython.com/asins/1775093328/",
      "https://www.amazon.com/dp/1775093328/?tag=devdetailpage02-20",
      "https://www.amazon.ca/dp/1775093328/?tag=devdetailpage-20",
      "https://www.amazon.co.uk/dp/1775093328/?tag=devdetailpage-21",
      "https://www.amazon.de/dp/1775093328/?tag=devdetailpa08-21",
      "https://www.amazon.in/dp/1775093328/",
      "/account/join/",
      "#level-up-your-python-with-python-basics",
      "https://realpython.com/asins/1775093328/",
      "/feedback/survey/article/python-basics-paperback/liked/?from=article-footer",
      "/feedback/survey/article/python-basics-paperback/disliked/?from=article-footer"
    ]
  },
  {
    "id": 42,
    "title": "How to Use Python: Your First Steps",
    "url": "https://realpython.com/python-first-steps/",
    "pub_date": "2021-01-25T16:27:13+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn the basics of how to use Python. With this knowledge, you'll be able to start coding your Python applications.",
    "text": "Conclusion\n Learning how to use Python and get your programming skills to the next level is a worthwhile endeavor. Python is a popular, productive, and powerful high-level programming language that is in high demand. In this tutorial, you learned essential concepts about Python and started to apply them to your Python code.In this tutorial, you learned:You also created your first Python program and ran it on your computer. With all this knowledge, you can dive deeper into Python and learn a lot more of the language.",
    "preview": false,
    "links": [
      "#why-you-should-use-python",
      "#how-to-download-and-install-python",
      "#installing-python-from-binaries",
      "#running-your-python-interpreter",
      "#the-basic-python-syntax",
      "#comments",
      "#variables",
      "#keywords",
      "#built-in-data-types",
      "#conditionals",
      "#loops",
      "#functions",
      "#how-to-handle-errors-in-python",
      "#syntax-errors",
      "#exceptions",
      "#semantic-errors",
      "#how-to-get-help-in-python",
      "#tools-for-coding-in-python",
      "#repls-read-evaluate-print-loops",
      "#code-editors",
      "#ides-integrated-development-environments",
      "#python-code-style",
      "#get-extra-features-in-python",
      "#the-standard-library",
      "#the-python-package-index-and-pip",
      "#take-your-python-skills-to-the-next-level",
      "#coding-is-like-riding-a-bike",
      "#advising-new-python-coders",
      "#code-an-example-count-to-10",
      "#test-your-knowledge",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/learning-paths/python3-introduction/",
      "https://realpython.com/run-python-scripts/",
      "",
      "#why-you-should-use-python",
      "https://files.realpython.com/media/pythonlogo.0658b34b4498.jpg",
      "https://en.wikipedia.org/wiki/Monty_Python",
      "https://realpython.com/what-can-i-do-with-python/",
      "https://realpython.com/learning-paths/python-gui-programming/",
      "https://realpython.com/command-line-interfaces-python-argparse/",
      "https://realpython.com/top-python-game-engines/",
      "https://realpython.com/learning-paths/math-data-science/",
      "https://realpython.com/learning-paths/data-science-python-core-skills/",
      "https://realpython.com/learning-paths/become-python-web-developer/",
      "https://realpython.com/tutorials/devops/",
      "https://realpython.com/world-class-companies-using-python/",
      "https://realpython.com/learning-paths/django-web-development/",
      "https://www.instagram.com/",
      "https://pinterest.com/",
      "https://realpython.com/start-contributing-python/",
      "https://realpython.com/python3-object-oriented-programming/",
      "https://en.wikipedia.org/wiki/Imperative_programming",
      "https://realpython.com/python-reduce-function/",
      "https://realpython.com/python-variables/",
      "/account/join/",
      "#how-to-download-and-install-python",
      "https://realpython.com/python-coding-setup-windows/",
      "https://realpython.com/intro-to-pyenv/",
      "https://realpython.com/terminal-commands/",
      "#installing-python-from-binaries",
      "https://www.python.org/",
      "https://realpython.com/installing-python/#what-your-options-are_1",
      "http://brew.sh/",
      "https://www.microsoft.com/en-ca/search?q=python",
      "https://www.anaconda.com/products/individual",
      "https://docs.conda.io/en/latest/miniconda.html",
      "https://realpython.com/effective-python-environment/",
      "https://realpython.com/installing-python/",
      "#running-your-python-interpreter",
      "https://docs.python.org/3/library/constants.html#exit",
      "https://docs.python.org/3/library/constants.html#quit",
      "/account/join/",
      "#the-basic-python-syntax",
      "https://en.wikipedia.org/wiki/Syntax_(programming_languages)",
      "https://realpython.com/python-comments-guide/",
      "https://realpython.com/python-variables/",
      "https://realpython.com/python-keywords/",
      "https://realpython.com/python-data-types/",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/defining-your-own-python-function/",
      "#comments",
      "https://www.python.org/dev/peps/pep-0008/#maximum-line-length",
      "#variables",
      "https://realpython.com/pointers-in-python/",
      "https://en.wikipedia.org/wiki/Snake_case",
      "https://realpython.com/python-encodings-guide/",
      "/account/join/",
      "#keywords",
      "https://docs.python.org/3/library/keyword.html#module-keyword",
      "#built-in-data-types",
      "https://docs.python.org/3/library/stdtypes.html",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-sets/",
      "https://realpython.com/python-operators-expressions/",
      "https://docs.python.org/3/library/functions.html",
      "https://realpython.com/instance-class-and-static-methods-demystified/",
      "#numbers",
      "https://docs.python.org/3/library/sys.html#sys.float_info",
      "https://docs.python.org/3/library/functions.html#built-in-functions",
      "https://realpython.com/absolute-vs-relative-python-imports/",
      "https://docs.python.org/3/library/index.html",
      "https://realpython.com/python-math-module/",
      "https://realpython.com/convert-python-string-to-int/",
      "https://docs.python.org/3/reference/expressions.html#attribute-references",
      "#booleans",
      "https://docs.python.org/3/library/stdtypes.html#truth-value-testing",
      "https://en.wikipedia.org/wiki/Predicate_(mathematical_logic)",
      "https://docs.python.org/3/library/stdtypes.html#comparisons",
      "https://docs.python.org/3/library/functions.html#bool",
      "https://docs.python.org/3/library/stdtypes.html#truth",
      "#strings",
      "https://realpython.com/len-python-function/",
      "https://docs.python.org/3/library/stdtypes.html#string-methods",
      "https://docs.python.org/3/glossary.html#term-iterable",
      "https://realpython.com/python-string-formatting/",
      "https://realpython.com/python-f-strings/",
      "https://en.wikipedia.org/wiki/Zero-based_numbering",
      "#lists",
      "https://docs.python.org/3/library/stdtypes.html#mutable-sequence-types",
      "https://en.wikipedia.org/wiki/In-place_algorithm",
      "https://docs.python.org/3/tutorial/datastructures.html#more-on-lists",
      "https://realpython.com/python-append/",
      "https://realpython.com/python-sort/",
      "#tuples",
      "https://docs.python.org/3/library/stdtypes.html#immutable-sequence-types",
      "https://realpython.com/python-traceback/#typeerror",
      "#dictionaries",
      "https://docs.python.org/3/glossary.html#term-hashable",
      "https://docs.python.org/3/library/functions.html#func-dict",
      "https://realpython.com/defining-your-own-python-function/#keyword-arguments",
      "https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-compactdict",
      "https://docs.python.org/3/library/collections.html#collections.OrderedDict",
      "https://realpython.com/iterate-through-dictionary-python/",
      "#sets",
      "https://realpython.com/python-class-constructor/",
      "https://docs.python.org/3/library/stdtypes.html#frozenset",
      "https://en.wikipedia.org/wiki/Set_(mathematics)#Basic_operations",
      "/account/join/",
      "#conditionals",
      "#loops",
      "https://en.wikipedia.org/wiki/Iteration",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/python-pyqt-gui-calculator/#event-loops",
      "/account/join/",
      "#functions",
      "https://realpython.com/python-return-statement/",
      "https://realpython.com/defining-your-own-python-function/",
      "#how-to-handle-errors-in-python",
      "https://realpython.com/invalid-syntax-python/",
      "https://realpython.com/python-exceptions/",
      "#syntax-errors",
      "#exceptions",
      "https://realpython.com/python-lbyl-vs-eafp/",
      "https://docs.python.org/3/library/exceptions.html#bltin-exceptions",
      "https://realpython.com/python-exceptions/#the-try-and-except-block-handling-exceptions",
      "/account/join/",
      "#semantic-errors",
      "https://en.wikipedia.org/wiki/Infinite_loop",
      "#how-to-get-help-in-python",
      "https://realpython.com/python-scope-legb-rule/#dir",
      "#tools-for-coding-in-python",
      "https://realpython.com/interacting-with-python/#using-the-python-interpreter-interactively",
      "https://en.wikipedia.org/wiki/Read\u2013eval\u2013print_loop",
      "https://realpython.com/run-python-scripts/#scripts-vs-modules",
      "https://realpython.com/python-modules-packages/",
      "https://realpython.com/python-ides-code-editors-guide/",
      "#repls-read-evaluate-print-loops",
      "https://docs.python.org/3/reference/compound_stmts.html#compound-statements",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "https://realpython.com/python-repl/",
      "https://ipython.readthedocs.io/en/stable/",
      "https://realpython.com/bpython-alternative-python-repl/",
      "https://github.com/prompt-toolkit/ptpython",
      "/account/join/",
      "#code-editors",
      "https://wiki.python.org/moin/IntegratedDevelopmentEnvironments",
      "https://en.wikipedia.org/wiki/Microsoft_Notepad",
      "https://en.wikipedia.org/wiki/Syntax_highlighting",
      "https://en.wikipedia.org/wiki/Indentation_(typesetting)",
      "https://en.wikipedia.org/wiki/Autocomplete",
      "https://en.wikipedia.org/wiki/Tab_(interface)",
      "https://en.wikipedia.org/wiki/Line_number",
      "https://en.wikipedia.org/wiki/Look_and_feel",
      "https://en.wikipedia.org/wiki/Plug-in_(computing)",
      "https://files.realpython.com/media/good_and_ugly.3081ad7216b2.png",
      "http://www.sublimetext.com/",
      "https://code.visualstudio.com/",
      "http://www.sublimetext.com/",
      "https://wiki.gnome.org/Apps/Gedit",
      "https://www.gnome.org/",
      "http://notepad-plus-plus.org",
      "http://www.vim.org/",
      "https://www.gnu.org/software/emacs/",
      "#ides-integrated-development-environments",
      "https://realpython.com/python-debugging-pdb/",
      "https://docs.python.org/3/library/idle.html",
      "https://realpython.com/python-idle/",
      "https://www.jetbrains.com/pycharm/",
      "https://www.jetbrains.com/",
      "https://realpython.com/pycharm-guide/",
      "https://www.jetbrains.com/pycharm-edu/",
      "https://thonny.org/",
      "https://realpython.com/python-thonny/",
      "#python-code-style",
      "https://www.python.org/dev/peps/pep-0008/",
      "https://realpython.com/python-code-quality/#linters",
      "https://flake8.pycqa.org/en/latest/",
      "https://www.pylint.org/",
      "https://github.com/PyCQA/pycodestyle",
      "https://github.com/ambv/black",
      "https://github.com/timothycrosley/isort",
      "https://realpython.com/python-pep8/",
      "https://realpython.com/python-code-quality/",
      "/account/join/",
      "#get-extra-features-in-python",
      "https://pypi.org/",
      "https://wiki.python.org/moin/UsefulModules",
      "#the-standard-library",
      "https://realpython.com/python-math-module/",
      "https://realpython.com/python-random/",
      "https://realpython.com/regex-python/",
      "https://docs.python.org/3/library/os.html",
      "https://realpython.com/python-itertools/",
      "https://docs.python.org/3/library/collections.html",
      "https://realpython.com/python-square-root-function/",
      "https://realpython.com/python-namespaces-scope/",
      "#the-python-package-index-and-pip",
      "https://pip.pypa.io/en/latest/",
      "https://packaging.python.org/guides/tool-recommendations/",
      "https://realpython.com/what-is-pip/#installing-packages-with-pip",
      "https://realpython.com/pandas-python-explore-dataset/",
      "/account/join/",
      "#take-your-python-skills-to-the-next-level",
      "https://files.realpython.com/media/realpython-secondary-logo.afae41b42c17.png",
      "https://realpython.com/",
      "https://realpython.com/courses/",
      "https://realpython.com/quizzes/",
      "https://realpython.com/learning-paths/",
      "https://realpython.com/community/",
      "https://realpython.com/team/",
      "https://realpython.com/products/",
      "https://realpython.com/podcasts/rpp/",
      "https://realpython.com/office-hours-announcement/",
      "https://realpython.com/newsletter/",
      "https://realpython.com/products/python-basics-book/",
      "https://realpython.com/python-beginner-tips/",
      "https://docs.python.org/3/tutorial/index.html",
      "#coding-is-like-riding-a-bike",
      "http://stackoverflow.com/",
      "https://stackoverflow.com/questions",
      "https://stackoverflow.com/questions/509211/understanding-slice-notation",
      "https://stackoverflow.com/questions/2052390/manually-raising-throwing-an-exception-in-python",
      "https://realpython.com/python-exceptions/#the-try-and-except-block-handling-exceptions",
      "https://realpython.com/python-print/",
      "https://en.wikipedia.org/wiki/Rubber_duck_debugging",
      "http://www.pythontutor.com/visualize.html#mode=edit",
      "#advising-new-python-coders",
      "http://pythonistacafe.com/",
      "https://www.python.org/community/irc/",
      "#code-an-example-count-to-10",
      "https://en.wikipedia.org/wiki/Pseudocode",
      "https://files.realpython.com/media/pseudo.c74774d5fe1e.jpg",
      "/account/join/",
      "#test-your-knowledge",
      "#conclusion",
      "https://realpython.com/python-basics/",
      "https://realpython.com/products/python-basics-book/",
      "/feedback/survey/article/python-first-steps/liked/?from=article-footer",
      "/feedback/survey/article/python-first-steps/disliked/?from=article-footer"
    ]
  },
  {
    "id": 43,
    "title": "C for Python Programmers",
    "url": "https://realpython.com/c-for-python-programmers/",
    "pub_date": "2021-01-20T14:00:00+00:00",
    "tags": [
      "basics"
    ],
    "description": "In this tutorial, you'll learn the basics of the C language, which is used in the source code for CPython, the most popular Python implementation. Learning C is important for Python programmers interested in contributing to CPython.",
    "text": "Conclusion\n This wraps up your quick walk through C syntax. Although this description barely scratches the surface of the C language, you now have sufficient knowledge to read and understand the CPython source code.In this tutorial, you learned:Now that you\u2019re familiar with C, you can deepen your knowledge of the inner workings of Python by exploring the CPython source code. Happy Pythoning!Note: If you enjoyed what you learned in this sample from CPython Internals: Your Guide to the Python Interpreter, then be sure to check out the rest of the book.",
    "preview": false,
    "links": [
      "#the-c-preprocessor",
      "#include",
      "#define",
      "#undef",
      "#if",
      "#pragma",
      "#error",
      "#basic-c-syntax-for-python-programmers",
      "#general",
      "#if-statements",
      "#switch-statements",
      "#loops",
      "#functions",
      "#pointers",
      "#strings",
      "#structs",
      "#conclusion",
      "/account/join/",
      "https://en.wikipedia.org/wiki/C_(programming_language)",
      "https://realpython.com/cpython-source-code-guide/",
      "https://realpython.com/products/cpython-internals-book/",
      "https://realpython.com/bonus/cpython-internals-sample/",
      "#the-c-preprocessor",
      "/account/join/",
      "#include",
      "https://realpython.com/python-recursion/",
      "https://github.com/python/cpython/blob/master/Modules/_multiprocessing/semaphore.c",
      "#define",
      "/account/join/",
      "#undef",
      "#if",
      "#pragma",
      "#error",
      "#basic-c-syntax-for-python-programmers",
      "#general",
      "/account/join/",
      "#if-statements",
      "#switch-statements",
      "#loops",
      "https://github.com/python/cpython/blob/master/Modules/sha512module.c",
      "https://realpython.com/python-while-loop/",
      "/account/join/",
      "#functions",
      "https://realpython.com/defining-your-own-python-function/",
      "#pointers",
      "https://realpython.com/pointers-in-python/",
      "#strings",
      "/account/join/",
      "#structs",
      "https://github.com/python/cpython/blob/master/Modules/arraymodule.c",
      "#conclusion",
      "https://realpython.com/products/cpython-internals-book/",
      "https://realpython.com/products/cpython-internals-book/",
      "/feedback/survey/article/c-for-python-programmers/liked/?from=article-footer",
      "/feedback/survey/article/c-for-python-programmers/disliked/?from=article-footer"
    ]
  },
  {
    "id": 44,
    "title": "Make Your First Python Game: Rock, Paper, Scissors!",
    "url": "https://realpython.com/python-rock-paper-scissors/",
    "pub_date": "2021-01-18T14:00:00+00:00",
    "tags": [
      "gamedev",
      "basics",
      "projects"
    ],
    "description": "In this tutorial, you'll learn to program rock paper scissors in Python from scratch. You'll learn how to take in user input, make the computer choose a random action, determine a winner, and split your code into functions.",
    "text": "Conclusion\n Congratulations! You just finished your first Python game! You now know how to create rock paper scissors from scratch, and you\u2019re able to expand the number of possible actions in your game with minimal effort. In this tutorial, you learned how to:These tools will continue to help you throughout your many programming adventures. If you have any questions, then feel free to reach out in the comments section below.",
    "preview": false,
    "links": [
      "#what-is-rock-paper-scissors",
      "#play-a-single-game-of-rock-paper-scissors-in-python",
      "#take-user-input",
      "#make-the-computer-choose",
      "#determine-a-winner",
      "#play-several-games-in-a-row",
      "#describe-an-action-with-enumintenum",
      "#the-flowchart-of-your-program",
      "#split-your-code-into-functions",
      "#rock-paper-scissors-lizard-spock",
      "#conclusion",
      "/account/join/",
      "/courses/python-rock-paper-scissors-game/",
      "https://en.wikipedia.org/wiki/Rock_paper_scissors",
      "https://realpython.com/bonus/python-mastery-course/",
      "#what-is-rock-paper-scissors",
      "https://en.wikipedia.org/wiki/Hand_game",
      "/account/join/",
      "#play-a-single-game-of-rock-paper-scissors-in-python",
      "https://realpython.com/python-import/",
      "#take-user-input",
      "https://realpython.com/python-input-output/",
      "#make-the-computer-choose",
      "https://arstechnica.com/science/2014/05/win-at-rock-paper-scissors-by-knowing-thy-opponent/",
      "https://realpython.com/python-random/",
      "https://en.wikipedia.org/wiki/Pseudorandom_number_generator",
      "https://realpython.com/python-print/",
      "#determine-a-winner",
      "/account/join/",
      "#play-several-games-in-a-row",
      "https://realpython.com/python-while-loop/",
      "#describe-an-action-with-enumintenum",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/convert-python-string-to-int/",
      "https://realpython.com/python-namespaces-scope/",
      "https://realpython.com/python-enum/",
      "/account/join/",
      "#the-flowchart-of-your-program",
      "https://realpython.com/python-conditional-statements/",
      "https://files.realpython.com/media/rps-flowchart-single-game.214891bb82d6.png",
      "https://files.realpython.com/media/rps-flowchart-repeated-games.f78a64553925.png",
      "#split-your-code-into-functions",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/python-return-statement/",
      "https://realpython.com/list-comprehension-python/",
      "https://files.realpython.com/media/rps-diagram-with-check.4397a039b248.png",
      "https://realpython.com/python-exceptions/",
      "/account/join/",
      "#rock-paper-scissors-lizard-spock",
      "https://en.wikipedia.org/wiki/The_Big_Bang_Theory",
      "https://files.realpython.com/media/rps-lizardspock.88cf9623a6f0.png",
      "https://realpython.com/python-dicts/",
      "https://docs.python.org/3/reference/expressions.html#membership-test-operations",
      "#conclusion",
      "/feedback/survey/article/python-rock-paper-scissors/liked/?from=article-footer",
      "/feedback/survey/article/python-rock-paper-scissors/disliked/?from=article-footer",
      "/courses/python-rock-paper-scissors-game/"
    ]
  },
  {
    "id": 45,
    "title": "NumPy Tutorial: Your First Steps Into Data Science in Python",
    "url": "https://realpython.com/numpy-tutorial/",
    "pub_date": "2021-01-11T14:00:00+00:00",
    "tags": [
      "data-science",
      "basics"
    ],
    "description": "In this tutorial, you'll learn everything you need to know to get up and running with NumPy, Python's de facto standard for multidimensional data arrays. NumPy is the foundation for most data science in Python, so if you're interested in that field, then this is a great place to start.",
    "text": "Conclusion\n No matter how many dimensions your data lives in, NumPy gives you the tools to work with it. You can store it, reshape it, combine it, filter it, and sort it, and your code will read like you\u2019re operating on only one number at a time rather than hundreds or thousands.In this tutorial, you learned:Don\u2019t forget to check out the repository of NumPy code samples from throughout this tutorial. You can use it for reference and experiment with the examples to see how changing the code changes the outcome:Get Sample Code: Click here to get the sample code you\u2019ll use to learn about NumPy in this tutorial.Now you\u2019re ready for the next steps in your data science journey. Whether you\u2019re cleaning data, training neural networks, communicating using powerful plots, or aggregating data from the Internet of Things, these activities all start from the same place: the humble NumPy array.",
    "preview": false,
    "links": [
      "#choosing-numpy-the-benefits",
      "#installing-numpy",
      "#using-replit-as-an-online-editor",
      "#installing-numpy-with-anaconda",
      "#installing-numpy-with-pip",
      "#using-ipython-notebooks-or-jupyterlab",
      "#hello-numpy-curving-test-grades-tutorial",
      "#getting-into-shape-array-shapes-and-axes",
      "#mastering-shape",
      "#understanding-axes",
      "#broadcasting",
      "#data-science-operations-filter-order-aggregate",
      "#indexing",
      "#masking-and-filtering",
      "#transposing-sorting-and-concatenating",
      "#aggregating",
      "#practical-example-1-implementing-a-maclaurin-series",
      "#optimizing-storage-data-types",
      "#numerical-types-int-bool-float-and-complex",
      "#string-types-sized-unicode",
      "#structured-arrays",
      "#more-on-data-types",
      "#looking-ahead-more-powerful-libraries",
      "#pandas",
      "#scikit-learn",
      "#matplotlib",
      "#practical-example-2-manipulating-images-with-matplotlib",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/learning-paths/python3-introduction/",
      "https://en.wikipedia.org/wiki/Matrix_(mathematics)",
      "https://realpython.com/bonus/numpy-python-code/",
      "#choosing-numpy-the-benefits",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-csv/",
      "https://realpython.com/numpy-array-programming/",
      "/account/join/",
      "#installing-numpy",
      "https://numpy.org/install/",
      "https://realpython.com/python-matplotlib-guide/",
      "#using-replit-as-an-online-editor",
      "https://repl.it/",
      "https://files.realpython.com/media/numpy-tutorial-replit-1000.070229bde757.png",
      "#installing-numpy-with-anaconda",
      "https://www.anaconda.com/products/individual",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://docs.conda.io/en/latest/",
      "https://realpython.com/python-windows-machine-learning-setup/",
      "https://realpython.com/what-is-pip/",
      "https://realpython.com/pipenv-guide/",
      "https://realpython.com/effective-python-environment/#poetry",
      "https://pypi.org/",
      "https://xkcd.com/1987/",
      "#installing-numpy-with-pip",
      "https://realpython.com/what-is-pip/#alternatives-to-pip",
      "#using-ipython-notebooks-or-jupyterlab",
      "https://ipython.org/install.html",
      "https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop",
      "https://realpython.com/python-repl/",
      "https://realpython.com/jupyter-notebook-introduction/",
      "https://files.realpython.com/media/numpy-tutorial-jupyter-notebook-1000.c420ec12baaa.png",
      "https://realpython.com/jupyter-notebook-introduction/",
      "https://nteract.io/",
      "https://jupyterlab.readthedocs.io/en/stable/",
      "https://realpython.com/matlab-vs-python/",
      "https://files.realpython.com/media/numpy-tutorial-jupyterlab-1000.d3cbd73c9bb3.png",
      "/account/join/",
      "#hello-numpy-curving-test-grades-tutorial",
      "https://en.wikipedia.org/wiki/Relative_grading",
      "https://numpy.org/doc/stable/reference/generated/numpy.ndarray.mean.html#numpy.ndarray.mean",
      "https://numpy.org/doc/stable/reference/arrays.ndarray.html#array-methods",
      "https://numpy.org/doc/stable/reference/routines.html",
      "#getting-into-shape-array-shapes-and-axes",
      "/account/join/",
      "#mastering-shape",
      "https://realpython.com/python-print/",
      "https://realpython.com/numpy-reshape/",
      "#understanding-axes",
      "#broadcasting",
      "https://realpython.com/python-zip-function/",
      "https://realpython.com/how-to-use-numpy-arange/",
      "/account/join/",
      "#data-science-operations-filter-order-aggregate",
      "#indexing",
      "https://en.wikipedia.org/wiki/Magic_square#Albrecht_D%C3%BCrer's_magic_square",
      "#masking-and-filtering",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/np-linspace-numpy/",
      "https://numpy.org/doc/stable/reference/generated/numpy.linspace.html",
      "https://realpython.com/python-numbers/#integers",
      "https://realpython.com/python-numbers/#floating-point-numbers",
      "https://en.wikipedia.org/wiki/Normal_distribution",
      "https://en.wikipedia.org/wiki/Standard_deviation",
      "https://realpython.com/python-random/",
      "/account/join/",
      "#transposing-sorting-and-concatenating",
      "https://realpython.com/sorting-algorithms-python/",
      "https://numpy.org/doc/stable/reference/generated/numpy.concatenate.html",
      "#aggregating",
      "https://numpy.org/doc/stable/reference/routines.html",
      "#practical-example-1-implementing-a-maclaurin-series",
      "https://realpython.com/python-while-loop/",
      "https://mathworld.wolfram.com/MaclaurinSeries.html",
      "https://files.realpython.com/media/e-x-maclauren.0d23c5b15404.png",
      "https://en.wikipedia.org/wiki/Factorial",
      "https://numpy.org/doc/stable/reference/generated/numpy.vectorize.html",
      "/account/join/",
      "#optimizing-storage-data-types",
      "#numerical-types-int-bool-float-and-complex",
      "https://numpy.org/devdocs/user/basics.types.html",
      "#string-types-sized-unicode",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-encodings-guide/",
      "https://en.wikipedia.org/wiki/Endianness",
      "https://docs.python.org/3/library/struct.html#struct-alignment",
      "/account/join/",
      "#structured-arrays",
      "https://numpy.org/doc/stable/user/basics.rec.html",
      "https://realpython.com/openpyxl-excel-spreadsheets-python/",
      "https://realpython.com/python-csv/",
      "https://realpython.com/python-pyqt-database/",
      "https://en.wikipedia.org/wiki/SQL",
      "#more-on-data-types",
      "https://numpy.org/doc/stable/reference/arrays.ndarray.html#internal-memory-layout-of-an-ndarray",
      "https://numpy.org/doc/stable/reference/arrays.dtypes.html",
      "https://numpy.org/doc/stable/reference/generated/numpy.recarray.html",
      "https://numpy.org/doc/stable/reference/arrays.classes.html",
      "#looking-ahead-more-powerful-libraries",
      "#pandas",
      "https://pandas.pydata.org/",
      "https://realpython.com/python-data-cleaning-numpy-pandas/",
      "https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html",
      "/account/join/",
      "#scikit-learn",
      "https://scikit-learn.org/stable/",
      "https://realpython.com/logistic-regression-python/#classification",
      "https://realpython.com/linear-regression-in-python/",
      "https://realpython.com/k-means-clustering-python/",
      "https://scikit-learn.org/stable/tutorial/index.html#tutorial-menu",
      "https://realpython.com/learning-paths/math-data-science/",
      "https://realpython.com/learning-paths/machine-learning-python/",
      "https://www.technologyreview.com/2019/02/04/137602/this-is-how-ai-bias-really-happensand-why-its-so-hard-to-fix/",
      "https://techcrunch.com/2018/11/06/3-ways-to-avoid-bias-in-machine-learning/",
      "https://www.brookings.edu/research/algorithmic-bias-detection-and-mitigation-best-practices-and-policies-to-reduce-consumer-harms/",
      "#matplotlib",
      "https://matplotlib.org/",
      "https://realpython.com/python-matplotlib-guide/",
      "#practical-example-2-manipulating-images-with-matplotlib",
      "https://files.realpython.com/media/kitty.90952ca484f1.jpg",
      "https://pixabay.com/users/ilyessuti-3558510/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2948404",
      "https://realpython.com/absolute-vs-relative-python-imports/",
      "https://files.realpython.com/media/blue.b16289750da2.jpg",
      "https://matplotlib.org/3.1.0/tutorials/colors/colormaps.html",
      "https://files.realpython.com/media/bad-gray.b80663df019b.jpg",
      "https://www.mathsisfun.com/algebra/vectors-dot-product.html",
      "https://files.realpython.com/media/good-gray.03ed6660e679.jpg",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/bonus/numpy-python-code/",
      "/feedback/survey/article/numpy-tutorial/liked/?from=article-footer",
      "/feedback/survey/article/numpy-tutorial/disliked/?from=article-footer"
    ]
  },
  {
    "id": 46,
    "title": "Python's .append(): Add Items to Your Lists in Place",
    "url": "https://realpython.com/python-append/",
    "pub_date": "2021-01-04T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn how Python's .append() works and how to use it for adding items to your list in place. You'll also learn how to code your own stacks and queues using .append() and .pop().",
    "text": "Conclusion\n Python provides a method called .append() that you can use to add items to the end of a given list. This method is widely used either to add a single item to the end of a list or to populate a list using a for loop. Learning how to use .append() will help you process lists in your programs.In this tutorial, you learned:In addition, you coded some examples of how to use .append() to create data structures, such as stacks and queues. This knowledge will allow you to use .append() to grow your lists efficiently and effectively.",
    "preview": false,
    "links": [
      "#adding-items-to-a-list-with-pythons-append",
      "#append-adds-a-single-item",
      "#append-returns-none",
      "#populating-a-list-from-scratch",
      "#using-append",
      "#using-a-list-comprehension",
      "#switching-back-to-append",
      "#creating-stacks-and-queues-with-pythons-append",
      "#implementing-a-stack",
      "#implementing-a-queue",
      "#using-append-in-other-data-structures",
      "#arrayappend",
      "#dequeappend-and-dequeappendleft",
      "#conclusion",
      "/account/join/",
      "/courses/building-lists-with-python-append/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/bonus/python-basics-sample-download/",
      "#adding-items-to-a-list-with-pythons-append",
      "https://docs.python.org/3/tutorial/datastructures.html#more-on-lists",
      "https://realpython.com/python-lists-tuples/",
      "https://files.realpython.com/media/python-append-diagram.57d5bd1285c6.png",
      "https://realpython.com/python-numbers/#integers",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-numbers/#floating-point-numbers",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-lists-tuples/#python-tuples",
      "https://realpython.com/python-lists-tuples/#tuple-assignment-packing-and-unpacking",
      "https://realpython.com/python-assignment-operator/",
      "/account/join/",
      "#append-adds-a-single-item",
      "#append-returns-none",
      "https://en.wikipedia.org/wiki/In-place_algorithm",
      "https://realpython.com/python-return-statement/",
      "https://realpython.com/null-in-python/",
      "https://docs.python.org/3/library/stdtypes.html#mutable-sequence-types",
      "#populating-a-list-from-scratch",
      "#using-append",
      "https://realpython.com/python-square-root-function/",
      "https://docs.python.org/3/library/index.html",
      "https://realpython.com/python-math-module/",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "https://realpython.com/list-comprehension-python/",
      "/account/join/",
      "#using-a-list-comprehension",
      "https://realpython.com/list-comprehension-python/#using-set-and-dictionary-comprehensions",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "#switching-back-to-append",
      "https://realpython.com/python-print/",
      "#creating-stacks-and-queues-with-pythons-append",
      "https://realpython.com/how-to-implement-python-stack/",
      "https://realpython.com/python-heapq-module/#data-structures-heaps-and-priority-queues",
      "#implementing-a-stack",
      "https://realpython.com/python-data-structures/",
      "https://en.wikipedia.org/wiki/LIFO",
      "https://realpython.com/python-traceback/#indexerror",
      "https://realpython.com/python3-object-oriented-programming/#class-and-instance-attributes",
      "https://realpython.com/python-exceptions/#the-try-and-except-block-handling-exceptions",
      "https://realpython.com/python-lbyl-vs-eafp/",
      "https://en.wikipedia.org/wiki/Race_condition",
      "https://docs.python.org/3/reference/datamodel.html#object.__len__",
      "https://realpython.com/operator-function-overloading/#representing-your-objects-using-repr",
      "/account/join/",
      "#implementing-a-queue",
      "https://en.wikipedia.org/wiki/Queue_(abstract_data_type)",
      "https://en.wikipedia.org/wiki/FIFO_(computing_and_electronics)",
      "https://docs.python.org/3/library/collections.html#module-collections",
      "https://realpython.com/linked-lists-python/#introducing-collectionsdeque",
      "#using-append-in-other-data-structures",
      "https://realpython.com/python-data-structures/#arrayarray-basic-typed-arrays",
      "https://realpython.com/python-data-structures/#collectionsdeque-fast-and-robust-stacks",
      "#arrayappend",
      "https://docs.python.org/3/glossary.html#term-bytes-like-object",
      "https://docs.python.org/3/library/array.html?highlight=array#module-array",
      "https://docs.python.org/3/library/array.html#array.array.append",
      "https://realpython.com/python-traceback/#typeerror",
      "/account/join/",
      "#dequeappend-and-dequeappendleft",
      "https://docs.python.org/3/library/collections.html#collections.deque.append",
      "https://docs.python.org/3/library/collections.html#collections.deque.appendleft",
      "https://docs.python.org/3/library/collections.html#collections.deque.pop",
      "https://docs.python.org/3/library/collections.html#collections.deque.popleft",
      "https://realpython.com/python-append/#creating-stacks-and-queues-with-pythons-append",
      "#conclusion",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/how-to-implement-python-stack/",
      "https://en.wikipedia.org/wiki/Queue_(abstract_data_type)",
      "/feedback/survey/article/python-append/liked/?from=article-footer",
      "/feedback/survey/article/python-append/disliked/?from=article-footer",
      "/courses/building-lists-with-python-append/"
    ]
  },
  {
    "id": 47,
    "title": "The pass Statement: How to Do Nothing in Python",
    "url": "https://realpython.com/python-pass/",
    "pub_date": "2020-12-16T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn about the Python pass statement, which tells the interpreter to do nothing. Even though pass has no effect on program execution, it can be useful. You'll see several use cases for pass as well as some alternative ways to do nothing in your code.",
    "text": "Conclusion\n You now understand what the Python pass statement does. You\u2019re ready to use it to improve your development and debugging speed as well as to deploy it tactfully in your production code.In this tutorial, you\u2019ve learned:Now you\u2019ll be able to write better and more efficient code by knowing how to tell Python to do nothing.",
    "preview": false,
    "links": [
      "#python-pass-statement-syntax-and-semantics",
      "#temporary-uses-of-pass",
      "#future-code",
      "#commented-out-code",
      "#markers-for-debuggers",
      "#empty-functions",
      "#empty-classes",
      "#marker-methods",
      "#alternatives-to-pass",
      "#docstrings",
      "#ellipsis",
      "#raise-an-error",
      "#permanent-uses-of-pass",
      "#using-pass-in-exception-catching",
      "#using-pass-in-if-elif-chains",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/python-keywords/",
      "https://docs.python.org/3/tutorial/controlflow.html#pass-statements",
      "",
      "#python-pass-statement-syntax-and-semantics",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-for-loop/",
      "https://dbader.org/blog/pythonic-loops",
      "https://docs.python.org/3/reference/compound_stmts.html",
      "/account/join/",
      "#temporary-uses-of-pass",
      "#future-code",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/python-return-statement/",
      "https://en.wikipedia.org/wiki/Off-by-one_error",
      "https://en.wikipedia.org/wiki/Fizz_buzz",
      "https://realpython.com/python-modulo-operator/",
      "https://realpython.com/python-print/",
      "https://realpython.com/python3-object-oriented-programming/#define-a-class-in-python",
      "/account/join/",
      "#commented-out-code",
      "https://realpython.com/python-debugging-pdb/",
      "https://realpython.com/null-in-python/",
      "https://realpython.com/defining-your-own-python-function/#side-effects",
      "https://realpython.com/python-send-email/",
      "/account/join/",
      "#markers-for-debuggers",
      "https://realpython.com/python-debugging-pdb/",
      "https://en.wikipedia.org/wiki/Palindrome",
      "#empty-functions",
      "https://en.wikipedia.org/wiki/Callback_(computer_programming)",
      "https://realpython.com/inheritance-composition-python/",
      "https://realpython.com/working-with-files-in-python/",
      "/account/join/",
      "#empty-classes",
      "https://realpython.com/python-exceptions/",
      "https://realpython.com/python-keyerror/",
      "https://realpython.com/python-dicts/",
      "https://pages.nist.gov/800-63-3/sp800-63b.html#appA",
      "http://www.cs.umd.edu/~jkatz/security/downloads/passwords_revealed-weir.pdf",
      "/account/join/",
      "#marker-methods",
      "https://realpython.com/python-interface/",
      "https://mypy.readthedocs.io/en/stable/protocols.html",
      "https://realpython.com/python-type-checking/#static-type-checking",
      "https://mypy.readthedocs.io/en/stable/",
      "https://zopeinterface.readthedocs.io/en/latest/",
      "https://automat.readthedocs.io/en/latest/",
      "#alternatives-to-pass",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "https://docs.python.org/3/reference/expressions.html",
      "https://docs.python.org/3/reference/simple_stmts.html",
      "/account/join/",
      "#docstrings",
      "https://realpython.com/defining-your-own-python-function/#docstrings",
      "https://realpython.com/documenting-python-code/#documentation-tools-and-resources",
      "https://realpython.com/python-ides-code-editors-guide/",
      "#ellipsis",
      "https://mypy.readthedocs.io/en/stable/stubs.html#stub-file-syntax",
      "https://realpython.com/python-ellipsis/",
      "https://realpython.com/numpy-array-programming/",
      "#raise-an-error",
      "#permanent-uses-of-pass",
      "#using-pass-in-exception-catching",
      "https://realpython.com/python-exceptions/",
      "https://realpython.com/python-logging/",
      "/account/join/",
      "#using-pass-in-if-elif-chains",
      "https://realpython.com/python-practice-problems/",
      "#conclusion",
      "/feedback/survey/article/python-pass/liked/?from=article-footer",
      "/feedback/survey/article/python-pass/disliked/?from=article-footer"
    ]
  },
  {
    "id": 48,
    "title": "What Is Data Engineering and Is It Right for You?",
    "url": "https://realpython.com/python-data-engineer/",
    "pub_date": "2020-12-14T14:00:00+00:00",
    "tags": [
      "basics"
    ],
    "description": "In this article, you'll get an overview of the discipline of data engineering. You'll learn what is and isn't part of a data engineer's job, who data engineers work with, and why data engineers play a crucial role in many industries.",
    "text": "Conclusion\n That completes your introduction to the field of data engineering, one of the most in-demand disciplines for people with a background or interest in computer science and technology! In this tutorial, you learned:Now you\u2019re at the point where you can decide if you want to go deeper and learn more about this exciting field. Does data engineering sound fascinating to you? Are you interested in exploring it more deeply? Let us know in the comments!",
    "preview": false,
    "links": [
      "#what-do-data-engineers-do",
      "#what-are-the-responsibilities-of-data-engineers",
      "#data-flow",
      "#data-normalization-and-modeling",
      "#data-cleaning",
      "#data-accessibility",
      "#what-are-common-data-engineering-skills",
      "#general-programming-skills",
      "#database-technologies",
      "#distributed-systems-and-cloud-engineering",
      "#what-isnt-data-engineering",
      "#data-science",
      "#business-intelligence",
      "#machine-learning-engineering",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/generative-adversarial-networks/",
      "",
      "#what-do-data-engineers-do",
      "https://files.realpython.com/media/example_pipeline_editable.1f5c28b7013f.png",
      "https://realpython.com/micropython/",
      "https://en.wikipedia.org/wiki/Data_model",
      "https://realpython.com/the-model-view-controller-mvc-paradigm-summarized-with-legos/",
      "/account/join/",
      "#what-are-the-responsibilities-of-data-engineers",
      "https://hackernoon.com/the-ai-hierarchy-of-needs-18f111fcc007",
      "#data-flow",
      "https://realpython.com/python-json/",
      "#data-normalization-and-modeling",
      "https://en.wikipedia.org/wiki/Relational_database",
      "https://files.realpython.com/media/de_illus_editable.e091cb69d248.png",
      "/account/join/",
      "#data-cleaning",
      "https://realpython.com/convert-python-string-to-int/",
      "#data-accessibility",
      "https://eng.uber.com/uber-big-data-platform/",
      "#what-are-common-data-engineering-skills",
      "#general-programming-skills",
      "https://en.wikipedia.org/wiki/Don%27t_repeat_yourself",
      "https://realpython.com/learning-paths/object-oriented-programming-oop-python/",
      "https://realpython.com/python-data-structures/",
      "https://realpython.com/oop-in-python-vs-java/",
      "https://www.tiobe.com/tiobe-index/",
      "https://stackoverflow.blog/2020/05/27/2020-stack-overflow-developer-survey-results/",
      "https://en.wikipedia.org/wiki/Lingua_franca",
      "https://realpython.com/podcasts/rpp/142/",
      "https://airflow.apache.org",
      "https://airflow.apache.org",
      "https://www.scala-lang.org/",
      "https://www.java.com/en/",
      "/account/join/",
      "#database-technologies",
      "https://realpython.com/python-sql-libraries/",
      "https://realpython.com/python-redis/",
      "https://aws.amazon.com/dynamodb/",
      "https://realpython.com/introduction-to-mongodb-and-python/",
      "https://www.elastic.co/",
      "https://neo4j.com/",
      "#distributed-systems-and-cloud-engineering",
      "https://www.rabbitmq.com/",
      "https://kafka.apache.org/intro",
      "#what-isnt-data-engineering",
      "#data-science",
      "https://realpython.com/k-means-clustering-python/",
      "https://realpython.com/logistic-regression-python/",
      "https://realpython.com/learning-paths/data-science-python-core-skills/",
      "https://realpython.com/learning-paths/data-collection-storage/",
      "https://realpython.com/learning-paths/math-data-science/",
      "https://realpython.com/learning-paths/pandas-data-science/",
      "/account/join/",
      "#business-intelligence",
      "#machine-learning-engineering",
      "https://realpython.com/learning-paths/machine-learning-python/",
      "#conclusion",
      "/feedback/survey/article/python-data-engineer/liked/?from=article-footer",
      "/feedback/survey/article/python-data-engineer/disliked/?from=article-footer"
    ]
  },
  {
    "id": 49,
    "title": "Python enumerate(): Simplify Looping With Counters",
    "url": "https://realpython.com/python-enumerate/",
    "pub_date": "2020-11-18T14:00:00+00:00",
    "tags": [
      "best-practices",
      "basics"
    ],
    "description": "Once you learn about for loops in Python, you know that using an index to access items in a sequence isn't very Pythonic. So what do you do when you need that index value? In this tutorial, you'll learn all about Python's built-in enumerate(), where it's used, and how you can emulate its behavior.",
    "text": "Conclusion\n Python\u2019s enumerate() lets you write Pythonic for loops when you need a count and the value from an iterable. The big advantage of enumerate() is that it returns a tuple with the counter and value, so you don\u2019t have to increment the counter yourself. It also gives you the option to change the starting value for the counter.In this tutorial, you learned how to:You also saw enumerate() used in some real-world code, including within the CPython code repository. You now have the superpower of simplifying your loops and making your Python code stylish!",
    "preview": false,
    "links": [
      "#iterating-with-for-loops-in-python",
      "#using-pythons-enumerate",
      "#practicing-with-python-enumerate",
      "#natural-count-of-iterable-items",
      "#conditional-statements-to-skip-items",
      "#understanding-python-enumerate",
      "#unpacking-arguments-with-enumerate",
      "#conclusion",
      "/account/join/",
      "/courses/looping-with-python-enumerate/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/bonus/cpython-internals-sample/",
      "#iterating-with-for-loops-in-python",
      "https://realpython.com/python-iterators-iterables/#getting-to-know-python-iterables",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-print/",
      "https://en.wikipedia.org/wiki/Off-by-one_error",
      "https://docs.python.org/3/library/stdtypes.html#range",
      "https://realpython.com/len-python-function/",
      "https://realpython.com/python-range/",
      "https://realpython.com/courses/how-to-write-pythonic-loops/",
      "https://docs.python.org/3/glossary.html#term-iterable",
      "https://docs.python.org/3/library/stdtypes.html#typeiter",
      "https://docs.python.org/3/glossary.html#term-iterator",
      "https://docs.python.org/3/glossary.html#term-sequence",
      "https://docs.python.org/3/glossary.html#term-generator",
      "https://realpython.com/python-numbers/#integers",
      "http://www.dabeaz.com/generators/Generators.pdf",
      "https://dbader.org/blog/python-iterators",
      "https://realpython.com/python-enum/",
      "https://docs.python.org/3/library/functions.html#enumerate",
      "https://www.python.org/dev/peps/pep-0279/",
      "/account/join/",
      "#using-pythons-enumerate",
      "https://realpython.com/courses/how-to-write-pythonic-loops/",
      "https://realpython.com/defining-your-own-python-function/#argument-tuple-unpacking",
      "#practicing-with-python-enumerate",
      "#natural-count-of-iterable-items",
      "https://en.wikipedia.org/wiki/ReStructuredText",
      "https://realpython.com/documenting-python-code/",
      "https://en.wikipedia.org/wiki/Lint_(software)",
      "https://github.com/python/cpython/blob/2d6097d027e0dd3debbabc702aa9c98d94ba32a3/Doc/tools/rstlint.py#L96-L104",
      "https://realpython.com/introduction-to-python-generators/#understanding-the-python-yield-statement",
      "/account/join/",
      "#conditional-statements-to-skip-items",
      "https://realpython.com/python-append/",
      "https://realpython.com/python-return-statement/",
      "https://realpython.com/python-pep8/",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/courses/python-strings/",
      "https://realpython.com/introduction-to-python-generators/",
      "/account/join/",
      "#understanding-python-enumerate",
      "https://docs.python.org/3/library/functions.html#enumerate",
      "https://github.com/python/cpython/blob/c8ba47b5518f83b5766fefe6f68557b5033e1d70/Objects/enumobject.c",
      "#unpacking-arguments-with-enumerate",
      "https://docs.python.org/3/library/functions.html#next",
      "https://docs.python.org/3/library/functions.html#zip",
      "https://realpython.com/python-zip-function/",
      "https://realpython.com/python-zip-function/",
      "https://realpython.com/python-itertools/#evens-and-odds",
      "https://docs.python.org/3/library/itertools.html#itertools.count",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/cpython-source-code-guide/",
      "/feedback/survey/article/python-enumerate/liked/?from=article-footer",
      "/feedback/survey/article/python-enumerate/disliked/?from=article-footer",
      "/courses/looping-with-python-enumerate/"
    ]
  },
  {
    "id": 50,
    "title": "Python Modulo in Practice: How to Use the % Operator",
    "url": "https://realpython.com/python-modulo-operator/",
    "pub_date": "2020-10-26T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn about the Python modulo operator (%). You'll look at the mathematical concepts behind the modulo operation and how the modulo operator is used with Python's numeric types. You'll also see ways to use the modulo operator in your own code.",
    "text": "Conclusion\n At first glance, the Python modulo operator may not grab your attention. Yet, as you\u2019ve seen, there\u2019s so much to this humble operator. From checking for even numbers to encrypting text with ciphers, you\u2019ve seen many different uses for the modulo operator.In this tutorial, you\u2019ve learned how to:With the knowledge you\u2019ve gained in this tutorial, you can now start using the modulo operator in your own code with great success. Happy Pythoning!",
    "preview": false,
    "links": [
      "#modulo-in-mathematics",
      "#python-modulo-operator-basics",
      "#modulo-operator-with-int",
      "#modulo-operator-with-float",
      "#modulo-operator-with-a-negative-operand",
      "#modulo-operator-and-divmod",
      "#modulo-operator-precedence",
      "#python-modulo-operator-in-practice",
      "#how-to-check-if-a-number-is-even-or-odd",
      "#how-to-run-code-at-specific-intervals-in-a-loop",
      "#how-to-create-cyclic-iteration",
      "#how-to-convert-units",
      "#how-to-determine-if-a-number-is-a-prime-number",
      "#how-to-implement-ciphers",
      "#python-modulo-operator-advanced-uses",
      "#using-the-python-modulo-operator-with-decimaldecimal",
      "#using-the-python-modulo-operator-with-custom-classes",
      "#conclusion",
      "/account/join/",
      "/courses/python-modulo-operator/",
      "https://realpython.com/python-operators-expressions/#arithmetic-operators",
      "https://realpython.com/python-numbers/",
      "",
      "#modulo-in-mathematics",
      "https://en.wikipedia.org/wiki/Modular_arithmetic",
      "/account/join/",
      "#python-modulo-operator-basics",
      "https://realpython.com/python-numbers/#integers",
      "https://realpython.com/python-numbers/#floating-point-numbers",
      "https://realpython.com/python-math-module/",
      "#modulo-operator-with-int",
      "https://en.wikipedia.org/wiki/Euclidean_division",
      "#modulo-operator-with-float",
      "https://docs.python.org/3/library/math.html#math.fmod",
      "https://docs.python.org/3/tutorial/floatingpoint.html",
      "#using-the-python-modulo-operator-with-decimaldecimal",
      "#modulo-operator-with-a-negative-operand",
      "https://realpython.com/python-vs-javascript/",
      "/account/join/",
      "#modulo-operator-and-divmod",
      "https://docs.python.org/3/library/functions.html#divmod",
      "#modulo-operator-precedence",
      "https://realpython.com/python-operators-expressions/#operator-precedence",
      "#python-modulo-operator-in-practice",
      "#how-to-check-if-a-number-is-even-or-odd",
      "https://realpython.com/python-boolean/",
      "/account/join/",
      "#how-to-run-code-at-specific-intervals-in-a-loop",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-enumerate/",
      "https://realpython.com/python-print/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-f-strings/",
      "https://realpython.com/python-formatted-output/#the-ltformat_specgt-component",
      "#how-to-create-cyclic-iteration",
      "https://realpython.com/beginners-guide-python-turtle/",
      "https://realpython.com/python-while-loop/",
      "https://files.realpython.com/media/cyclic-iteration-turtle.303f9048a80f.png",
      "/account/join/",
      "#how-to-convert-units",
      "#how-to-determine-if-a-number-is-a-prime-number",
      "https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes",
      "https://en.wikipedia.org/wiki/Sieve_of_Atkin",
      "https://realpython.com/python-return-statement/",
      "https://realpython.com/python-square-root-function/",
      "/account/join/",
      "#how-to-implement-ciphers",
      "https://en.wikipedia.org/wiki/Cipher",
      "https://realpython.com/python-input-output/",
      "#caesar-cipher",
      "https://en.wikipedia.org/wiki/Caesar_cipher",
      "https://en.wikipedia.org/wiki/Substitution_cipher",
      "https://files.realpython.com/media/caesar-cipher-steps.bbf6e93d66f7.gif",
      "https://realpython.com/python-repl/",
      "#vigenere-cipher",
      "https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher",
      "https://en.wikipedia.org/wiki/Polyalphabetic_cipher",
      "https://files.realpython.com/media/vigerene-cipher-steps.66057bb0979f.gif",
      "/account/join/",
      "#python-modulo-operator-advanced-uses",
      "#using-the-python-modulo-operator-with-decimaldecimal",
      "https://docs.python.org/3/library/decimal.html#decimal-objects",
      "#using-the-python-modulo-operator-with-custom-classes",
      "https://docs.python.org/3/reference/datamodel.html",
      "#how-to-convert-units",
      "/account/join/",
      "#conclusion",
      "/feedback/survey/article/python-modulo-operator/liked/?from=article-footer",
      "/feedback/survey/article/python-modulo-operator/disliked/?from=article-footer",
      "/courses/python-modulo-operator/"
    ]
  },
  {
    "id": 51,
    "title": "Python's map(): Processing Iterables Without a Loop",
    "url": "https://realpython.com/python-map-function/",
    "pub_date": "2020-09-30T14:00:00+00:00",
    "tags": [
      "python",
      "best-practices",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn how Python's map() works and how to use it effectively in your programs. You'll also learn how to use list comprehension and generator expressions to replace map() in a Pythonic and efficient way.",
    "text": "Conclusion\n Python\u2019s map() allows you to perform mapping operations on iterables. A mapping operation consists of applying a transformation function to the items in an iterable to generate a transformed iterable. In general, map() will allow you to process and transform iterables without using an explicit loop.In this tutorial, you\u2019ve learned how map() works and how to use it to process iterables. You also learned about some Pythonic tools that you can use to replace map() in your code.You now know how to:With this new knowledge, you\u2019ll be able to use map() in your code and approach your code with a functional programming style. You can also switch to a more Pythonic and modern style by replacing map() with a list comprehension or a generator expression.",
    "preview": false,
    "links": [
      "#coding-with-functional-style-in-python",
      "#getting-started-with-pythons-map",
      "#understanding-map",
      "#using-map-with-different-kinds-of-functions",
      "#processing-multiple-input-iterables-with-map",
      "#transforming-iterables-of-strings-with-pythons-map",
      "#using-the-methods-of-str",
      "#removing-punctuation",
      "#implementing-a-caesar-cipher-algorithm",
      "#transforming-iterables-of-numbers-with-pythons-map",
      "#using-math-operations",
      "#converting-temperatures",
      "#converting-strings-to-numbers",
      "#combining-map-with-other-functional-tools",
      "#map-and-filter",
      "#map-and-reduce",
      "#processing-tuple-based-iterables-with-starmap",
      "#coding-with-pythonic-style-replacing-map",
      "#using-list-comprehensions",
      "#using-generator-expressions",
      "#conclusion",
      "/account/join/",
      "/courses/map-function-transform-iterables/",
      "https://docs.python.org/3/library/functions.html#map",
      "https://realpython.com/courses/python-for-loop/",
      "https://en.wikipedia.org/wiki/Map_(higher-order_function)",
      "https://realpython.com/python-functional-programming/",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "https://realpython.com/python-iterators-iterables/#getting-to-know-python-iterables",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/python-lambda/",
      "https://realpython.com/bonus/python-mastery-course/",
      "#coding-with-functional-style-in-python",
      "https://realpython.com/courses/functional-programming-python/",
      "https://en.wikipedia.org/wiki/Pure_function",
      "https://realpython.com/python-testing/",
      "https://realpython.com/courses/python-debugging-pdb/",
      "https://realpython.com/python-lists-tuples/",
      "https://en.wikipedia.org/wiki/Map_(higher-order_function)",
      "https://en.wikipedia.org/wiki/Filter_(higher-order_function)",
      "https://en.wikipedia.org/wiki/Boolean-valued_function",
      "https://en.wikipedia.org/wiki/Fold_(higher-order_function)",
      "https://en.wikipedia.org/wiki/Guido_van_Rossum",
      "https://en.wikipedia.org/wiki/Imperative_programming",
      "https://web.archive.org/web/20161104183819/http://python-history.blogspot.com.br/2009/04/origins-of-pythons-functional-features.html",
      "https://en.wikipedia.org/wiki/Anonymous_function",
      "https://web.archive.org/web/20200709210752/http://www.artima.com/weblogs/viewpost.jsp?thread=98196",
      "https://docs.python.org/3/library/functions.html#map",
      "https://docs.python.org/3/library/functions.html#filter",
      "https://realpython.com/python-reduce-function/",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "/account/join/",
      "#getting-started-with-pythons-map",
      "https://realpython.com/courses/python-for-loop/",
      "#understanding-map",
      "https://docs.python.org/3/library/functions.html#map",
      "https://docs.python.org/3/library/functions.html#built-in-functions",
      "https://realpython.com/lessons/classes-python/",
      "https://realpython.com/lessons/mastering-method-types-oop-pizza-example/",
      "https://realpython.com/courses/python-lambda-functions/",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/build-python-c-extension-module/",
      "https://docs.python.org/2/library/functions.html#map",
      "https://docs.python.org/3/whatsnew/3.0.html#views-and-iterators-instead-of-lists",
      "https://realpython.com/courses/convert-python-string-int/",
      "https://docs.python.org/3/library/functions.html#int",
      "/account/join/",
      "#using-map-with-different-kinds-of-functions",
      "https://docs.python.org/3/reference/datamodel.html#object.__call__",
      "https://realpython.com/courses/staticmethod-vs-classmethod-python/",
      "#processing-multiple-input-iterables-with-map",
      "https://docs.python.org/3/library/functions.html#pow",
      "#transforming-iterables-of-strings-with-pythons-map",
      "#using-the-methods-of-str",
      "https://realpython.com/python-strings/#string-manipulation",
      "https://docs.python.org/3/library/stdtypes.html#string-methods",
      "https://docs.python.org/3/library/stdtypes.html#str.capitalize",
      "https://docs.python.org/3/library/stdtypes.html#str.lower",
      "https://docs.python.org/3/library/stdtypes.html#str.swapcase",
      "https://docs.python.org/3/library/stdtypes.html#str.title",
      "https://docs.python.org/3/library/stdtypes.html#str.upper",
      "https://docs.python.org/3/library/stdtypes.html#str.strip",
      "/account/join/",
      "#removing-punctuation",
      "https://realpython.com/regex-python",
      "https://docs.python.org/3/library/re.html#re.sub",
      "https://docs.python.org/3/library/re.html#module-re",
      "#implementing-a-caesar-cipher-algorithm",
      "https://en.wikipedia.org/wiki/Julius_Caesar",
      "https://en.wikipedia.org/wiki/Caesar_cipher",
      "https://docs.python.org/3/library/functions.html#ord",
      "https://realpython.com/python-encodings-guide/",
      "https://docs.python.org/3/library/functions.html#chr",
      "https://realpython.com/lessons/concatenating-joining-strings-python/",
      "/account/join/",
      "#transforming-iterables-of-numbers-with-pythons-map",
      "#using-math-operations",
      "https://docs.python.org/3/reference/expressions.html#the-power-operator",
      "https://realpython.com/python-return-statement/#returning-multiple-values",
      "https://realpython.com/python-math-module/",
      "https://realpython.com/python-square-root-function/",
      "https://realpython.com/python-math-module/#find-factorials-with-python-factorial",
      "https://docs.python.org/3/library/math.html#math.sin",
      "https://docs.python.org/3/library/math.html#math.cos",
      "#converting-temperatures",
      "/account/join/",
      "#converting-strings-to-numbers",
      "https://docs.python.org/3/library/functions.html#float",
      "https://realpython.com/python-numbers/#floating-point-numbers",
      "https://realpython.com/python-numbers/#integers",
      "https://docs.python.org/3/library/exceptions.html#ValueError",
      "https://realpython.com/python-exceptions/#the-try-and-except-block-handling-exceptions",
      "https://docs.python.org/3/library/functions.html#float",
      "#combining-map-with-other-functional-tools",
      "https://docs.python.org/3/library/functions.html#filter",
      "https://realpython.com/python-reduce-function/",
      "#map-and-filter",
      "https://realpython.com/python-filter-function/",
      "https://en.wikipedia.org/wiki/Boolean-valued_function",
      "https://realpython.com/python-operators-expressions/#evaluation-of-non-boolean-values-in-boolean-context",
      "https://realpython.com/python-square-root-function/",
      "/account/join/",
      "#map-and-reduce",
      "https://realpython.com/python-reduce-function/",
      "https://realpython.com/lessons/functools-module/",
      "https://en.wikipedia.org/wiki/Fold_(higher-order_function)",
      "https://docs.python.org/3/library/os.path.html#os.path.expanduser",
      "https://docs.python.org/3/library/os.html#os.listdir",
      "https://docs.python.org/3/library/os.path.html#os.path.getsize",
      "https://docs.python.org/3/library/operator.html#operator.add",
      "https://en.wikipedia.org/wiki/MapReduce",
      "https://en.wikipedia.org/wiki/Big_data",
      "https://en.wikipedia.org/wiki/Parallel_computing",
      "https://en.wikipedia.org/wiki/Distributed_computing",
      "https://en.wikipedia.org/wiki/Cluster_(computing)",
      "https://en.wikipedia.org/wiki/Apache_Hadoop",
      "https://realpython.com/python-reduce-function/",
      "#processing-tuple-based-iterables-with-starmap",
      "https://www.python.org/dev/peps/pep-0448",
      "https://docs.python.org/3/library/itertools.html#itertools.starmap",
      "https://docs.python.org/3/library/functions.html#pow",
      "https://docs.python.org/3/library/exceptions.html#TypeError",
      "/account/join/",
      "#coding-with-pythonic-style-replacing-map",
      "https://realpython.com/courses/using-list-comprehensions-effectively/",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "#using-list-comprehensions",
      "#using-generator-expressions",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "/account/join/",
      "#conclusion",
      "https://docs.python.org/3/library/functions.html#map",
      "https://en.wikipedia.org/wiki/Map_(higher-order_function)",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "https://realpython.com/courses/functional-programming-python/",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "/feedback/survey/article/python-map-function/liked/?from=article-footer",
      "/feedback/survey/article/python-map-function/disliked/?from=article-footer",
      "/courses/map-function-transform-iterables/"
    ]
  },
  {
    "id": 52,
    "title": "The Python return Statement: Usage and Best Practices",
    "url": "https://realpython.com/python-return-statement/",
    "pub_date": "2020-09-28T14:00:00+00:00",
    "tags": [
      "python",
      "best-practices",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn how to use the Python return statement when writing functions. Additionally, you'll cover some good programming practices related to the use of return. With this knowledge, you'll be able to write readable, robust, and maintainable functions in Python.",
    "text": "Conclusion\n The Python return statement allows you to send any Python object from your custom functions back to the caller code. This statement is a fundamental part of any Python function or method. If you master how to use it, then you\u2019ll be ready to code robust functions.In this tutorial, you\u2019ve learned how to:Additionally, you\u2019ve learned some more advanced use cases for the return statement, like how to code a closure factory function and a decorator function. With this knowledge, you\u2019ll be able to write more Pythonic, robust, and maintainable functions in Python.",
    "preview": false,
    "links": [
      "#getting-started-with-python-functions",
      "#understanding-the-python-return-statement",
      "#explicit-return-statements",
      "#implicit-return-statements",
      "#returning-vs-printing",
      "#returning-multiple-values",
      "#using-the-python-return-statement-best-practices",
      "#returning-none-explicitly",
      "#remembering-the-return-value",
      "#avoiding-complex-expressions",
      "#returning-values-vs-modifying-globals",
      "#using-return-with-conditionals",
      "#returning-true-or-false",
      "#short-circuiting-loops",
      "#recognizing-dead-code",
      "#returning-multiple-named-objects",
      "#returning-functions-closures",
      "#taking-and-returning-functions-decorators",
      "#returning-user-defined-objects-the-factory-pattern",
      "#using-return-in-try-finally-blocks",
      "#using-return-in-generator-functions",
      "#conclusion",
      "/account/join/",
      "/courses/effective-python-return-statement/",
      "https://en.wikipedia.org/wiki/Return_statement",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/python3-object-oriented-programming/#instance-methods",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/bonus/python-mastery-course/",
      "#getting-started-with-python-functions",
      "https://en.wikipedia.org/wiki/Subroutine",
      "https://en.wikipedia.org/wiki/Visual_Basic",
      "https://realpython.com/defining-your-own-python-function/",
      "https://docs.python.org/3/glossary.html#term-argument",
      "https://docs.python.org/3/glossary.html#term-function",
      "https://realpython.com/defining-your-own-python-function/",
      "https://docs.python.org/3/reference/lexical_analysis.html#indentation",
      "https://realpython.com/python-pass/",
      "https://realpython.com/defining-your-own-python-function/",
      "https://docs.python.org/3/reference/simple_stmts.html#grammar-token-return_stmt",
      "/account/join/",
      "#understanding-the-python-return-statement",
      "https://realpython.com/python3-object-oriented-programming/#instance-methods",
      "https://realpython.com/python-keywords/#returning-keywords-return-yield",
      "https://docs.python.org/3/library/functions.html#int",
      "https://docs.python.org/3/library/functions.html#float",
      "https://docs.python.org/3/library/functions.html#complex",
      "https://realpython.com/courses/lists-tuples-python/",
      "https://realpython.com/courses/lists-tuples-python/",
      "https://realpython.com/courses/sets-python/",
      "https://realpython.com/courses/python-modules-packages/",
      "https://realpython.com/null-in-python/",
      "#explicit-return-statements",
      "https://realpython.com/invalid-syntax-python/",
      "https://realpython.com/instance-class-and-static-methods-demystified/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python3-object-oriented-programming/#classes-vs-instances",
      "https://realpython.com/courses/using-list-comprehensions-effectively/",
      "https://realpython.com/python-operators-expressions/",
      "https://docs.python.org/3/glossary.html#term-expression",
      "https://docs.python.org/3/glossary.html#term-statement",
      "https://realpython.com/courses/python-conditional-statements/",
      "https://realpython.com/courses/how-to-write-pythonic-loops/",
      "https://docs.python.org/3/library/functions.html#sum",
      "https://realpython.com/len-python-function/",
      "https://realpython.com/python-variables/",
      "/account/join/",
      "#implicit-return-statements",
      "https://realpython.com/python-print/",
      "https://realpython.com/lessons/overview-python-interpreter/",
      "https://realpython.com/run-python-scripts/#how-to-run-python-code-interactively",
      "#returning-vs-printing",
      "https://realpython.com/run-python-scripts/",
      "/account/join/",
      "#returning-multiple-values",
      "https://docs.python.org/3/library/statistics.html",
      "https://realpython.com/lessons/tuple-assignment-packing-unpacking/",
      "https://realpython.com/courses/variables-python/",
      "https://realpython.com/python-assignment-operator/",
      "https://docs.python.org/3/library/functions.html#divmod",
      "#using-the-python-return-statement-best-practices",
      "#returning-none-explicitly",
      "/account/join/",
      "#remembering-the-return-value",
      "https://realpython.com/python-debug-idle/",
      "https://realpython.com/python-debugging-pdb/",
      "#avoiding-complex-expressions",
      "https://en.wikipedia.org/wiki/Variance",
      "#returning-values-vs-modifying-globals",
      "https://realpython.com/defining-your-own-python-function/#side-effects",
      "https://realpython.com/python-scope-legb-rule/#modules-the-global-scope",
      "https://realpython.com/read-write-files-python/#reading-and-writing-opened-files",
      "https://realpython.com/pytest-python-testing/",
      "https://realpython.com/python-scope-legb-rule/#the-global-statement",
      "https://realpython.com/courses/test-driven-development-pytest/",
      "/account/join/",
      "#using-return-with-conditionals",
      "https://realpython.com/courses/python-conditional-statements/",
      "https://realpython.com/python-absolute-value",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "https://docs.python.org/3/library/functions.html#abs",
      "#returning-true-or-false",
      "https://en.wikipedia.org/wiki/Predicate_(mathematical_logic)",
      "https://en.wikipedia.org/wiki/Boolean-valued_function",
      "https://realpython.com/python-data-types/#boolean-type-boolean-context-and-truthiness",
      "https://realpython.com/python-operators-expressions/#logical-operators",
      "https://realpython.com/python-operators-expressions/#comparison-operators",
      "https://docs.python.org/3/reference/expressions.html#membership-test-operations",
      "https://realpython.com/python-operators-expressions/#identity-operators",
      "https://docs.python.org/3/reference/expressions.html#not",
      "https://realpython.com/python-boolean/",
      "https://docs.python.org/3/library/stdtypes.html#truth-value-testing",
      "https://realpython.com/python-constants/",
      "https://realpython.com/null-in-python/",
      "https://docs.python.org/3/library/decimal.html#decimal.Decimal",
      "https://docs.python.org/3/library/fractions.html#fractions.Fraction",
      "https://realpython.com/python-sets/",
      "https://docs.python.org/3/reference/datamodel.html#object.__bool__",
      "https://docs.python.org/3/reference/datamodel.html#object.__len__",
      "https://realpython.com/python-or-operator/",
      "https://realpython.com/python-keywords/#operator-keywords-and-or-not-in-is",
      "https://docs.python.org/3/library/functions.html#bool",
      "https://realpython.com/lessons/if-statements/",
      "https://realpython.com/python-conditional-statements/#conditional-expressions-pythons-ternary-operator",
      "/account/join/",
      "#short-circuiting-loops",
      "https://realpython.com/any-python/",
      "#recognizing-dead-code",
      "#returning-multiple-named-objects",
      "https://realpython.com/python-namedtuple/",
      "https://docs.python.org/3/reference/expressions.html#attribute-references",
      "https://docs.python.org/3/library/stdtypes.html#common-sequence-operations",
      "/account/join/",
      "#returning-functions-closures",
      "https://realpython.com/primer-on-python-decorators/#first-class-objects",
      "http://en.wikipedia.org/wiki/Higher-order_function",
      "https://realpython.com/inner-functions-what-are-they-good-for/#closures-and-factory-functions",
      "https://realpython.com/inner-functions-what-are-they-good-for/",
      "https://en.wikipedia.org/wiki/Lazy_evaluation",
      "https://realpython.com/python-lambda/",
      "#taking-and-returning-functions-decorators",
      "https://realpython.com/primer-on-python-decorators/",
      "https://realpython.com/absolute-vs-relative-python-imports/",
      "https://docs.python.org/3/library/time.html#time.time",
      "https://docs.python.org/3/library/time.html",
      "https://docs.python.org/3/library/time.html#epoch",
      "https://docs.python.org/3/library/time.html#time.sleep",
      "https://realpython.com/python-sleep/",
      "https://realpython.com/courses/staticmethod-vs-classmethod-python/",
      "https://docs.python.org/3/library/functions.html#property",
      "https://realpython.com/primer-on-python-decorators/",
      "https://realpython.com/courses/python-decorators-101/",
      "/account/join/",
      "#returning-user-defined-objects-the-factory-pattern",
      "https://realpython.com/python3-object-oriented-programming/#how-to-define-a-class-in-python",
      "https://en.wikipedia.org/wiki/Factory_(object-oriented_programming)",
      "https://realpython.com/python-kwargs-and-args/",
      "#using-return-in-try-finally-blocks",
      "https://realpython.com/python-exceptions/#the-try-and-except-block-handling-exceptions",
      "https://realpython.com/python-exceptions/#cleaning-up-after-using-finally",
      "#using-return-in-generator-functions",
      "https://realpython.com/introduction-to-python-generators/#understanding-the-python-yield-statement",
      "https://realpython.com/introduction-to-python-generators/",
      "https://docs.python.org/3/glossary.html#term-generator-iterator",
      "https://docs.python.org/3/library/exceptions.html#StopIteration",
      "https://docs.python.org/3/library/functions.html#next",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/inner-functions-what-are-they-good-for/#closures-and-factory-functions",
      "https://realpython.com/primer-on-python-decorators",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "/feedback/survey/article/python-return-statement/liked/?from=article-footer",
      "/feedback/survey/article/python-return-statement/disliked/?from=article-footer",
      "/courses/effective-python-return-statement/"
    ]
  },
  {
    "id": 53,
    "title": "Numbers in Python",
    "url": "https://realpython.com/python-numbers/",
    "pub_date": "2020-09-16T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn about numbers and basic math in Python. You'll explore integer, floating-point numbers, and complex numbers and see how perform calculations using Python's arithmetic operators, math functions, and number methods.",
    "text": "Further Reading\n For additional information on numbers and math in Python, check out these resources:",
    "preview": false,
    "links": [
      "#integers-and-floating-point-numbers",
      "#integers",
      "#floating-point-numbers",
      "#arithmetic-operators-and-expressions",
      "#addition",
      "#subtraction",
      "#multiplication",
      "#division",
      "#integer-division",
      "#exponents",
      "#the-modulus-operator",
      "#arithmetic-expressions",
      "#make-python-lie-to-you",
      "#math-functions-and-number-methods",
      "#round-numbers-with-round",
      "#find-the-absolute-value-with-abs",
      "#raise-to-a-power-with-pow",
      "#check-if-a-float-is-integral",
      "#print-numbers-in-style",
      "#complex-numbers",
      "#conclusion-numbers-in-python",
      "#further-reading",
      "/account/join/",
      "https://realpython.com/products/python-basics-book/",
      "https://realpython.com/courses/python-basics-numbers-and-math/",
      "https://realpython.com/python-idle/",
      "https://realpython.com/bonus/python-mastery-course/",
      "#integers-and-floating-point-numbers",
      "https://realpython.com/python-data-types/",
      "#complex-numbers",
      "/account/join/",
      "#integers",
      "https://realpython.com/python-variables/",
      "https://realpython.com/convert-python-string-to-int/",
      "#floating-point-numbers",
      "https://en.wikipedia.org/wiki/Observable_universe#Matter_content",
      "https://realpython.com/python-print/",
      "/account/join/",
      "#arithmetic-operators-and-expressions",
      "#addition",
      "http://pep8.org/#other-recommendations",
      "#subtraction",
      "/account/join/",
      "#multiplication",
      "#division",
      "#integer-division",
      "/account/join/",
      "#exponents",
      "#the-modulus-operator",
      "/account/join/",
      "#arithmetic-expressions",
      "https://pep8.org/#other-recommendations",
      "#make-python-lie-to-you",
      "https://realpython.com/products/python-basics-book/",
      "https://realpython.com/products/python-basics-book/",
      "/account/join/",
      "#math-functions-and-number-methods",
      "#round-numbers-with-round",
      "https://en.wikipedia.org/wiki/IEEE_754#Roundings_to_nearest",
      "https://en.wikipedia.org/wiki/Institute_of_Electrical_and_Electronics_Engineers",
      "https://en.wikipedia.org/wiki/IEEE_754",
      "/account/join/",
      "#find-the-absolute-value-with-abs",
      "https://realpython.com/python-absolute-value/",
      "https://realpython.com/python-absolute-value/#using-the-built-in-abs-function-with-numbers",
      "#raise-to-a-power-with-pow",
      "https://realpython.com/python-modulo-operator/",
      "#check-if-a-float-is-integral",
      "https://realpython.com/python-strings/#built-in-string-methods",
      "https://realpython.com/python-input-output/",
      "https://realpython.com/python-math-module/",
      "https://realpython.com/python-exceptions/",
      "/account/join/",
      "#print-numbers-in-style",
      "https://realpython.com/python-f-strings/",
      "https://docs.python.org/3/library/string.html#format-specification-mini-language",
      "https://docs.python.org/3/library/string.html#format-string-syntax_",
      "https://realpython.com/python-formatted-output/",
      "/account/join/",
      "#complex-numbers",
      "https://realpython.com/python3-object-oriented-programming/",
      "https://realpython.com/python-first-steps/",
      "/account/join/",
      "#conclusion-numbers-in-python",
      "https://realpython.com/products/python-basics-book/",
      "https://realpython.com/products/python-basics-book/",
      "#further-reading",
      "https://realpython.com/python-data-types/",
      "https://realpython.com/python-math-module/",
      "https://realpython.com/python-rounding/",
      "https://realpython.com/python-square-root-function/",
      "/feedback/survey/article/python-numbers/liked/?from=article-footer",
      "/feedback/survey/article/python-numbers/disliked/?from=article-footer"
    ]
  },
  {
    "id": 54,
    "title": "Find & Fix Code Bugs in Python: Debug With IDLE",
    "url": "https://realpython.com/python-debug-idle/",
    "pub_date": "2020-09-09T14:00:00+00:00",
    "tags": [
      "basics",
      "tools"
    ],
    "description": "In this tutorial, you'll learn how to identify and fix logic errors, or bugs, in your Python code. You'll use the built-in debugging tools in Python's Integrated Development and Learning Environment to practice locating and resolving bugs in an example function.",
    "text": "Conclusion: Python Debugging With IDLE\n That\u2019s it! You now know all about debugging using IDLE\u2019s Debug window. You can use the basic principles you used here with a number of different debugging tools. You\u2019re now well equipped to start debugging your Python code.In this tutorial, you learned:You also got some practice debugging a faulty function using a four-step process for identifying and removing bugs:Debugging is as much an art as it is a science. The only way to master debugging is to get a lot of practice with it! One way to get some practice is to open the Debug Control window and use it to step through your code as you work on the exercises and challenges you find in other Real Python tutorials. For more information on debugging Python code, check out Python Debugging With Pdb. If you enjoyed what you learned in this sample from Python Basics: A Practical Introduction to Python 3, then be sure to check out the rest of the book.",
    "preview": false,
    "links": [
      "#use-the-debug-control-window",
      "#the-debug-control-window-an-overview",
      "#the-step-button",
      "#breakpoints-and-the-go-button",
      "#over-and-out",
      "#squash-some-bugs",
      "#step-1-make-a-guess-about-where-the-bug-is-located",
      "#step-2-set-a-breakpoint-and-inspect-the-code",
      "#step-3-identify-the-error-and-attempt-to-fix-it",
      "#step-4-repeat-steps-1-to-3-until-the-bug-is-gone",
      "#alternative-ways-to-find-bugs",
      "#conclusion-python-debugging-with-idle",
      "/account/join/",
      "/courses/python-basics-code-bugs/",
      "https://realpython.com/python-idle/",
      "https://realpython.com/products/python-basics-book/",
      "https://realpython.com/bonus/python-mastery-course/",
      "#use-the-debug-control-window",
      "/account/join/",
      "#the-debug-control-window-an-overview",
      "https://files.realpython.com/media/debug_window_overview.ecfbe2ea7bd0.png",
      "https://realpython.com/python-variables/",
      "#the-step-button",
      "https://files.realpython.com/media/step_button_1.1ad2c73284e1.png",
      "https://realpython.com/python-for-loop/",
      "/account/join/",
      "#breakpoints-and-the-go-button",
      "https://en.wikipedia.org/wiki/Breakpoint",
      "https://files.realpython.com/media/set_breakpoint_1.4bc498b1c779.png",
      "https://files.realpython.com/media/go_button.47ebb267bbe4.png",
      "https://files.realpython.com/media/go_button_2.db5286a5bb5f.png",
      "#over-and-out",
      "/account/join/",
      "#squash-some-bugs",
      "#step-1-make-a-guess-about-where-the-bug-is-located",
      "#step-2-set-a-breakpoint-and-inspect-the-code",
      "https://files.realpython.com/media/set_breakpoint_2.54854bf6da55.png",
      "https://files.realpython.com/media/debug_window_1.7e95b8106270.png",
      "https://files.realpython.com/media/debug_window_2.7b6adcd28176.png",
      "https://files.realpython.com/media/debug_window_3.928b8a6f32bc.png",
      "/account/join/",
      "#step-3-identify-the-error-and-attempt-to-fix-it",
      "#step-4-repeat-steps-1-to-3-until-the-bug-is-gone",
      "#alternative-ways-to-find-bugs",
      "https://en.wikipedia.org/wiki/Internet_of_things",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "/account/join/",
      "#conclusion-python-debugging-with-idle",
      "https://realpython.com/python-debugging-pdb/",
      "https://realpython.com/products/python-basics-book/",
      "https://realpython.com/products/python-basics-book/",
      "/feedback/survey/article/python-debug-idle/liked/?from=article-footer",
      "/feedback/survey/article/python-debug-idle/disliked/?from=article-footer",
      "/courses/python-basics-code-bugs/"
    ]
  },
  {
    "id": 55,
    "title": "Python 3 Installation & Setup Guide",
    "url": "https://realpython.com/installing-python/",
    "pub_date": "2020-08-31T16:15:29+00:00",
    "tags": [
      "best-practices",
      "basics",
      "tools"
    ],
    "description": "The first step to getting started with Python is to install it on your machine. In this tutorial, you'll learn how to check which version of Python, if any, you have on your Windows, Mac, or Linux computer and the best way to install the most recent version in any environment.",
    "text": "Conclusion\n Congratulations! You now have access to the latest version of Python for your system. Your Python journey is just beginning.In this tutorial you\u2019ve learned how to:You\u2019re now ready to get started programming in Python! Be sure to share your progress and any questions you may have in the comments below.",
    "preview": false,
    "links": [
      "#how-to-install-python-on-windows",
      "#how-to-check-your-python-version-on-windows",
      "#what-your-options-are",
      "#how-to-install-from-the-microsoft-store",
      "#how-to-install-from-the-full-installer",
      "#how-to-install-python-on-macos",
      "#how-to-check-your-python-version-on-a-mac",
      "#what-your-options-are_1",
      "#how-to-install-from-the-official-installer",
      "#how-to-install-from-homebrew",
      "#how-to-install-python-on-linux",
      "#how-to-check-your-python-version-on-linux",
      "#what-your-options-are_2",
      "#how-to-install-on-ubuntu-and-linux-mint",
      "#how-to-install-on-debian-linux",
      "#how-to-install-on-opensuse",
      "#how-to-install-on-centos-and-fedora",
      "#how-to-install-on-arch-linux",
      "#how-to-build-python-from-source-code",
      "#how-to-install-python-on-ios",
      "#how-to-install-python-on-android",
      "#online-python-interpreters",
      "#conclusion",
      "/account/join/",
      "/courses/setting-up-python/",
      "https://python.org",
      "",
      "#how-to-install-python-on-windows",
      "https://realpython.com/python-coding-setup-windows/",
      "/account/join/",
      "#how-to-check-your-python-version-on-windows",
      "https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701?activetab=pivot:overviewtab",
      "https://realpython.com/courses/using-terminal-windows/",
      "#what-your-options-are",
      "https://www.python.org/",
      "https://docs.microsoft.com/en-us/windows/wsl/install-win10",
      "#how-to-install-python-on-linux",
      "https://www.anaconda.com/",
      "https://realpython.com/python-windows-machine-learning-setup/",
      "#limitations-of-the-microsoft-store-package",
      "https://docs.python.org/3/using/windows.html#the-microsoft-store-package",
      "https://docs.python.org/3/using/windows.html#known-issues",
      "#windows-installer-recommendations",
      "https://realpython.com/add-python-to-path/",
      "/account/join/",
      "#how-to-install-from-the-microsoft-store",
      "#step-1-open-the-python-app-page-in-the-microsoft-store",
      "https://files.realpython.com/media/Screen_Shot_2020-07-16_at_11.06.17_AM.4b41c401c5aa.png",
      "#step-2-install-the-python-app",
      "https://realpython.com/what-is-pip/",
      "https://realpython.com/python-idle/",
      "#how-to-install-from-the-full-installer",
      "#step-1-download-the-full-installer",
      "https://www.python.org/downloads/windows/",
      "https://python.org",
      "#step-2-run-the-installer",
      "https://files.realpython.com/media/Screen_Shot_2020-07-16_at_11.19.15_AM.6e62bfc6eede.png",
      "https://superuser.com/questions/656003/why-is-python-for-windows-not-installed-in-programfiles-c-program-files",
      "https://docs.python.org/3/using/windows.html#launcher",
      "https://discuss.python.org/t/could-we-add-python-to-system-path-by-default/3067",
      "https://realpython.com/add-python-to-path/",
      "#how-to-install-from-the-microsoft-store",
      "/account/join/",
      "#how-to-install-python-on-macos",
      "https://developer.apple.com/documentation/macos-release-notes/macos-catalina-10_15-release-notes#Scripting-Language-Runtimes",
      "#how-to-check-your-python-version-on-a-mac",
      "https://realpython.com/courses/using-terminal-macos/",
      "#what-your-options-are_1",
      "https://brew.sh/",
      "https://www.anaconda.com/",
      "https://docs.anaconda.com/anaconda/install/mac-os/",
      "#limitations-of-installing-from-homebrew",
      "https://github.com/Homebrew/homebrew-core/pull/34424",
      "https://realpython.com/python-gui-tkinter/",
      "https://www.tcl.tk/",
      "#macos-installer-recommendations",
      "https://realpython.com/python-gui-tkinter/",
      "/account/join/",
      "#how-to-install-from-the-official-installer",
      "#step-1-download-the-official-installer",
      "https://www.python.org/downloads/mac-osx/",
      "#step-2-run-the-installer_1",
      "https://files.realpython.com/media/Screen_Shot_2020-07-15_at_8.31.24_AM.2e5b82dbc195.png",
      "#how-to-install-from-homebrew",
      "#step-1-install-homebrew",
      "http://brew.sh/",
      "#step-2-install-python",
      "https://realpython.com/what-is-pip/",
      "/account/join/",
      "#how-to-install-python-on-linux",
      "#how-to-check-your-python-version-on-linux",
      "https://realpython.com/courses/using-terminal-linux/",
      "#what-your-options-are_2",
      "https://www.anaconda.com/",
      "https://docs.anaconda.com/anaconda/install/linux/",
      "#linux-installation-recommendations",
      "/account/join/",
      "#how-to-install-on-ubuntu-and-linux-mint",
      "#how-to-build-python-from-source-code",
      "https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa",
      "#how-to-install-on-debian-linux",
      "#how-to-build-python-from-source-code",
      "#how-to-install-on-opensuse",
      "#how-to-build-python-from-source-code",
      "#how-to-install-on-centos-and-fedora",
      "http://yum.baseurl.org/",
      "#how-to-build-python-from-source-code",
      "/account/join/",
      "#how-to-install-on-arch-linux",
      "#how-to-build-python-from-source-code",
      "#step-1-download-the-source-code",
      "https://www.python.org/downloads/source/",
      "#step-2-prepare-your-system",
      "#step-3-build-python",
      "#step-4-verify-your-installation",
      "https://devguide.python.org/runtests/",
      "/account/join/",
      "#how-to-install-python-on-ios",
      "http://omz-software.com/pythonista/",
      "https://geo.itunes.apple.com/us/app/pythonista-3/id1085978097?ls=1&mt=8&at=1000lqsw",
      "#how-to-install-python-on-android",
      "https://play.google.com/store/apps/details?id=ru.iiec.pydroid3",
      "https://play.google.com/store/apps/details?id=ru.iiec.pydroid3",
      "#online-python-interpreters",
      "https://www.python.org/shell",
      "https://repl.it",
      "http://pythonfiddle.com",
      "https://trinket.io",
      "https://www.pythonanywhere.com/",
      "#conclusion",
      "https://realpython.com/python-introduction/",
      "#",
      "https://realpython.com/interacting-with-python/",
      "/feedback/survey/article/installing-python/liked/?from=article-footer",
      "/feedback/survey/article/installing-python/disliked/?from=article-footer",
      "/courses/setting-up-python/"
    ]
  },
  {
    "id": 56,
    "title": "Common Python Data Structures (Guide)",
    "url": "https://realpython.com/python-data-structures/",
    "pub_date": "2020-08-26T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn about Python's data structures. You'll look at several implementations of abstract data types and learn which implementations are best for your specific use cases.",
    "text": "Conclusion: Python Data Structures\n That concludes your tour of common data structures in Python. With the knowledge you\u2019ve gained here, you\u2019re ready to implement efficient data structures that are just right for your specific algorithm or use case.In this tutorial, you\u2019ve learned:If you enjoyed what you learned in this sample from Python Tricks, then be sure to check out the rest of the book. If you\u2019re interested in brushing up on your general data structures knowledge, then I highly recommend Steven S. Skiena\u2019s The Algorithm Design Manual. It strikes a great balance between teaching you fundamental (and more advanced) data structures and showing you how to implement them in your code. Steve\u2019s book was a great help in the writing of this tutorial.",
    "preview": false,
    "links": [
      "#dictionaries-maps-and-hash-tables",
      "#dict-your-go-to-dictionary",
      "#collectionsordereddict-remember-the-insertion-order-of-keys",
      "#collectionsdefaultdict-return-default-values-for-missing-keys",
      "#collectionschainmap-search-multiple-dictionaries-as-a-single-mapping",
      "#typesmappingproxytype-a-wrapper-for-making-read-only-dictionaries",
      "#dictionaries-in-python-summary",
      "#array-data-structures",
      "#list-mutable-dynamic-arrays",
      "#tuple-immutable-containers",
      "#arrayarray-basic-typed-arrays",
      "#str-immutable-arrays-of-unicode-characters",
      "#bytes-immutable-arrays-of-single-bytes",
      "#bytearray-mutable-arrays-of-single-bytes",
      "#arrays-in-python-summary",
      "#records-structs-and-data-transfer-objects",
      "#dict-simple-data-objects",
      "#tuple-immutable-groups-of-objects",
      "#write-a-custom-class-more-work-more-control",
      "#dataclassesdataclass-python-37-data-classes",
      "#collectionsnamedtuple-convenient-data-objects",
      "#typingnamedtuple-improved-namedtuples",
      "#structstruct-serialized-c-structs",
      "#typessimplenamespace-fancy-attribute-access",
      "#records-structs-and-data-objects-in-python-summary",
      "#sets-and-multisets",
      "#set-your-go-to-set",
      "#frozenset-immutable-sets",
      "#collectionscounter-multisets",
      "#sets-and-multisets-in-python-summary",
      "#stacks-lifos",
      "#list-simple-built-in-stacks",
      "#collectionsdeque-fast-and-robust-stacks",
      "#queuelifoqueue-locking-semantics-for-parallel-computing",
      "#stack-implementations-in-python-summary",
      "#queues-fifos",
      "#list-terribly-sloooow-queues",
      "#collectionsdeque-fast-and-robust-queues",
      "#queuequeue-locking-semantics-for-parallel-computing",
      "#multiprocessingqueue-shared-job-queues",
      "#queues-in-python-summary",
      "#priority-queues",
      "#list-manually-sorted-queues",
      "#heapq-list-based-binary-heaps",
      "#queuepriorityqueue-beautiful-priority-queues",
      "#priority-queues-in-python-summary",
      "#conclusion-python-data-structures",
      "/account/join/",
      "/courses/stacks-queues-ideal-data-structure/",
      "https://docs.python.org/3/library/index.html",
      "https://realpython.com/oop-in-python-vs-java/",
      "https://realpython.com/linked-lists-python/",
      "https://realpython.com/products/python-tricks-book/",
      "https://realpython.com/products/python-tricks-book/",
      "https://realpython.com/bonus/python-tricks-sample-pdf/",
      "#dictionaries-maps-and-hash-tables",
      "https://realpython.com/python-dicts/",
      "/account/join/",
      "#dict-your-go-to-dictionary",
      "https://docs.python.org/3/library/stdtypes.html#mapping-types-dict",
      "https://realpython.com/iterate-through-dictionary-python/#using-comprehensions",
      "https://docs.python.org/3/glossary.html#term-hashable",
      "https://realpython.com/courses/immutability-python/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-data-types/",
      "https://realpython.com/python-lists-tuples/#python-tuples",
      "https://realpython.com/python-scope-legb-rule/#class-and-instance-attributes-scope",
      "https://en.wikipedia.org/wiki/Call_stack#Structure",
      "https://realpython.com/python-hash-table/",
      "https://en.wikipedia.org/wiki/Skip_list",
      "https://en.wikipedia.org/wiki/B-tree",
      "#collectionsordereddict-remember-the-insertion-order-of-keys",
      "https://realpython.com/python-ordereddict/",
      "https://mail.python.org/pipermail/python-dev/2016-September/146327.html",
      "https://realpython.com/python38-new-features/",
      "https://realpython.com/python-data-types/",
      "https://docs.python.org/3/library/collections.html#collections.OrderedDict.popitem",
      "#collectionsdefaultdict-return-default-values-for-missing-keys",
      "https://docs.python.org/3/library/collections.html#collections.defaultdict",
      "https://realpython.com/python-keyerror/",
      "/account/join/",
      "#collectionschainmap-search-multiple-dictionaries-as-a-single-mapping",
      "https://docs.python.org/3/library/collections.html#collections.ChainMap",
      "#typesmappingproxytype-a-wrapper-for-making-read-only-dictionaries",
      "https://docs.python.org/3/library/types.html#types.MappingProxyType",
      "#dictionaries-in-python-summary",
      "#array-data-structures",
      "https://files.realpython.com/media/python-linked-list-array-visualization.5b9f4c4040cb.jpeg",
      "/account/join/",
      "#list-mutable-dynamic-arrays",
      "https://docs.python.org/3.6/library/stdtypes.html#lists",
      "#tuple-immutable-containers",
      "https://docs.python.org/3/library/stdtypes.html#tuple",
      "#arrayarray-basic-typed-arrays",
      "https://docs.python.org/3/library/array.html",
      "https://realpython.com/python-mutable-vs-immutable-types/",
      "#str-immutable-arrays-of-unicode-characters",
      "https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str",
      "https://realpython.com/python-encodings-guide/",
      "https://realpython.com/python-thinking-recursively/",
      "/account/join/",
      "#bytes-immutable-arrays-of-single-bytes",
      "https://docs.python.org/3/library/stdtypes.html#bytes-objects",
      "#bytearray-mutable-arrays-of-single-bytes",
      "https://docs.python.org/3.1/library/functions.html#bytearray",
      "#arrays-in-python-summary",
      "https://realpython.com/numpy-array-programming/",
      "https://realpython.com/pandas-dataframe/",
      "#records-structs-and-data-transfer-objects",
      "https://realpython.com/products/python-tricks-book/",
      "https://realpython.com/products/python-tricks-book/",
      "/account/join/",
      "#dict-simple-data-objects",
      "#dictionaries-maps-and-hash-tables",
      "#tuple-immutable-groups-of-objects",
      "https://github.com/python/cpython/blob/1a5856bf9295fa73995898d576e0bedf016aee1f/Include/tupleobject.h#L10-L34",
      "https://github.com/python/cpython/blob/b879fe82e7e5c3f7673c9a7fa4aad42bd05445d8/Include/listobject.h#L4-L41",
      "#write-a-custom-class-more-work-more-control",
      "https://docs.python.org/3.4/reference/datamodel.html#object.__repr__",
      "https://docs.python.org/3/library/functions.html#property",
      "/account/join/",
      "#dataclassesdataclass-python-37-data-classes",
      "https://realpython.com/python-data-classes/",
      "https://realpython.com/python-type-checking/",
      "https://realpython.com/primer-on-python-decorators/",
      "https://realpython.com/python-data-classes/",
      "#collectionsnamedtuple-convenient-data-objects",
      "https://dbader.org/blog/writing-clean-python-with-namedtuples",
      "#typingnamedtuple-improved-namedtuples",
      "https://docs.python.org/3/library/typing.html#typing.NamedTuple",
      "https://docs.python.org/3/library/typing.html",
      "http://mypy-lang.org/",
      "/account/join/",
      "#structstruct-serialized-c-structs",
      "https://docs.python.org/3/library/struct.html#struct.Struct",
      "https://docs.python.org/3/library/struct.html#struct-format-strings",
      "#typessimplenamespace-fancy-attribute-access",
      "https://docs.python.org/3/library/types.html#types.SimpleNamespace",
      "#records-structs-and-data-objects-in-python-summary",
      "https://realpython.com/python-json/",
      "https://realpython.com/python-property/#using-property-as-a-decorator",
      "https://realpython.com/python-getter-setter/",
      "#sets-and-multisets",
      "https://realpython.com/python-sets/",
      "https://wiki.python.org/moin/TimeComplexity",
      "https://realpython.com/list-comprehension-python/#using-set-and-dictionary-comprehensions",
      "/account/join/",
      "#set-your-go-to-set",
      "https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset",
      "https://docs.python.org/3/glossary.html#term-hashable",
      "#frozenset-immutable-sets",
      "https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset",
      "#collectionscounter-multisets",
      "https://docs.python.org/3/library/collections.html#collections.Counter",
      "https://realpython.com/python-counter/",
      "#sets-and-multisets-in-python-summary",
      "#stacks-lifos",
      "https://realpython.com/queue-in-python/#stack-last-in-first-out-lifo",
      "https://realpython.com/how-to-implement-python-stack/",
      "https://en.wikipedia.org/wiki/Depth-first_search",
      "/account/join/",
      "#list-simple-built-in-stacks",
      "https://docs.python.org/3/tutorial/datastructures.html#using-lists-as-stacks",
      "https://en.wikipedia.org/wiki/Amortized_analysis",
      "https://en.wikipedia.org/wiki/Anti-pattern",
      "#collectionsdeque-fast-and-robust-stacks",
      "https://docs.python.org/3/library/collections.html#collections.deque",
      "https://realpython.com/queue-in-python/#deque-double-ended-queue",
      "https://github.com/python/cpython/blob/6e8128f02e1d36e38e5866f9dc36e051caa47bc9/Modules/_collectionsmodule.c#L33-L35",
      "https://realpython.com/linked-lists-python/#introducing-collectionsdeque",
      "#queuelifoqueue-locking-semantics-for-parallel-computing",
      "https://docs.python.org/3/library/queue.html#queue.LifoQueue",
      "#stack-implementations-in-python-summary",
      "/account/join/",
      "#queues-fifos",
      "https://realpython.com/queue-in-python/#queue-first-in-first-out-fifo",
      "https://realpython.com/pycon-guide/",
      "https://en.wikipedia.org/wiki/Breadth-first_search",
      "https://realpython.com/python-heapq-module/#data-structures-heaps-and-priority-queues",
      "#list-terribly-sloooow-queues",
      "https://docs.python.org/3/tutorial/datastructures.html#using-lists-as-queues",
      "#collectionsdeque-fast-and-robust-queues",
      "#queuequeue-locking-semantics-for-parallel-computing",
      "https://docs.python.org/3/library/queue.html#queue.Queue",
      "#multiprocessingqueue-shared-job-queues",
      "https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Queue",
      "https://realpython.com/python-gil/",
      "https://realpython.com/python-pickle-module/",
      "#queues-in-python-summary",
      "#priority-queues",
      "https://realpython.com/queue-in-python/#priority-queue-sorted-from-high-to-low",
      "https://en.wikipedia.org/wiki/Total_order",
      "#list-manually-sorted-queues",
      "https://docs.python.org/3/library/bisect.html#bisect.insort",
      "#heapq-list-based-binary-heaps",
      "https://docs.python.org/3/library/heapq.html",
      "https://realpython.com/python-heapq-module/",
      "https://docs.python.org/3/library/heapq.html#priority-queue-implementation-notes",
      "#queuepriorityqueue-beautiful-priority-queues",
      "https://docs.python.org/3/library/queue.html#queue.PriorityQueue",
      "#priority-queues-in-python-summary",
      "#conclusion-python-data-structures",
      "https://realpython.com/products/python-tricks-book/",
      "https://realpython.com/asins/1848000693/",
      "/feedback/survey/article/python-data-structures/liked/?from=article-footer",
      "/feedback/survey/article/python-data-structures/disliked/?from=article-footer",
      "/courses/stacks-queues-ideal-data-structure/"
    ]
  },
  {
    "id": 57,
    "title": "Namespaces and Scope in Python",
    "url": "https://realpython.com/python-namespaces-scope/",
    "pub_date": "2020-07-29T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn about Python namespaces, the structures used to store and organize the symbolic names created during execution of a Python program. You'll learn when namespaces are created, how they are implemented, and how they define variable scope.",
    "text": "Conclusion\n Virtually everything that a Python program uses or acts on is an object. Even a short program will create many different objects. In a more complex program, they\u2019ll probably number in the thousands. Python has to keep track of all these objects and their names, and it does so with namespaces.In this tutorial, you learned:Many programming techniques take advantage of the fact that every function in Python has its own namespace. In the next two tutorials in this series, you\u2019ll explore two of these techniques: functional programming and recursion.",
    "preview": false,
    "links": [
      "#namespaces-in-python",
      "#the-built-in-namespace",
      "#the-global-namespace",
      "#the-local-and-enclosing-namespaces",
      "#variable-scope",
      "#python-namespace-dictionaries",
      "#the-globals-function",
      "#the-locals-function",
      "#modify-variables-out-of-scope",
      "#the-global-declaration",
      "#the-nonlocal-declaration",
      "#best-practices",
      "#conclusion",
      "/account/join/",
      "/courses/navigate-namespaces-scope/",
      "https://realpython.com/python3-object-oriented-programming",
      "https://realpython.com/python-strings/",
      "https://realpython.com/bonus/python-mastery-course/",
      "#namespaces-in-python",
      "https://realpython.com/python-dicts",
      "https://www.python.org/dev/peps/pep-0020",
      "/account/join/",
      "#the-built-in-namespace",
      "https://realpython.com/python-for-loop/#the-guts-of-the-python-for-loop",
      "https://realpython.com/python-data-types/#built-in-functions",
      "https://realpython.com/python-min-and-max/",
      "https://realpython.com/len-python-function/",
      "#the-global-namespace",
      "https://realpython.com/absolute-vs-relative-python-imports/",
      "https://realpython.com/python-main-function",
      "https://realpython.com/python-modules-packages",
      "https://realpython.com/courses/python-modules-packages",
      "#the-local-and-enclosing-namespaces",
      "https://realpython.com/defining-your-own-python-function",
      "https://realpython.com/inner-functions-what-are-they-good-for/",
      "#variable-scope",
      "https://realpython.com/python-scope-legb-rule/",
      "https://en.wikipedia.org/wiki/Scope_(computer_science)",
      "https://realpython.com/courses/exploring-scopes-and-closures-in-python/",
      "https://realpython.com/courses/python-basics-scopes/",
      "https://docs.python.org/3",
      "https://files.realpython.com/media/t.fd7bd78bbb47.png",
      "https://docs.python.org/3/library/exceptions.html#NameError",
      "https://realpython.com/python-print/",
      "/account/join/",
      "#python-namespace-dictionaries",
      "https://realpython.com/python-namespaces-scope/#namespaces-in-python",
      "#the-globals-function",
      "https://realpython.com/python-is-identity-vs-equality/#comparing-identity-with-the-python-is-and-is-not-operators",
      "#the-locals-function",
      "/account/join/",
      "#modify-variables-out-of-scope",
      "https://realpython.com/defining-your-own-python-function",
      "https://realpython.com/defining-your-own-python-function/#pass-by-value-vs-pass-by-reference-in-pascal",
      "https://realpython.com/defining-your-own-python-function/#pass-by-value-vs-pass-by-reference-in-pascal",
      "https://realpython.com/defining-your-own-python-function/#pass-by-value-vs-pass-by-reference-in-pascal",
      "https://realpython.com/defining-your-own-python-function/#pass-by-value-vs-pass-by-reference-in-python",
      "https://realpython.com/courses/immutability-python/",
      "https://realpython.com/python-variables/#object-references",
      "#the-global-declaration",
      "https://files.realpython.com/media/t.0ee0e5dafa9d.png",
      "https://realpython.com/invalid-syntax-python/",
      "/account/join/",
      "#the-nonlocal-declaration",
      "https://realpython.com/python-keywords/#variable-handling-keywords-del-global-nonlocal",
      "https://realpython.com/python-keywords/#variable-handling-keywords-del-global-nonlocal",
      "https://files.realpython.com/media/t.b7e3c1b7bd96.png",
      "#best-practices",
      "https://realpython.com/defining-your-own-python-function/#side-effects",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/regex-python-part-2/",
      "#",
      "https://realpython.com/python-functional-programming/",
      "/feedback/survey/article/python-namespaces-scope/liked/?from=article-footer",
      "/feedback/survey/article/python-namespaces-scope/disliked/?from=article-footer",
      "/courses/navigate-namespaces-scope/"
    ]
  },
  {
    "id": 58,
    "title": "Python Keywords: An Introduction",
    "url": "https://realpython.com/python-keywords/",
    "pub_date": "2020-06-15T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "Python keywords make up the fundamental building blocks of any Python program. In this tutorial, you'll learn the basic syntax and usage for each of Python's thirty-five keywords so you can write more efficient and readable code.",
    "text": "Conclusion\n Python keywords are the fundamental building blocks of any Python program. Understanding their proper use is key to improving your skills and knowledge of Python. Throughout this article, you\u2019ve seen a few things to solidify your understanding Python keywords and to help you write more efficient and readable code. In this article, you\u2019ve learned:If you understand most of these keywords and feel comfortable using them, then you might be interested to learn more about Python\u2019s grammar and how the statements that use these keywords are specified and constructed.",
    "preview": false,
    "links": [
      "#python-keywords",
      "#how-to-identify-python-keywords",
      "#use-an-ide-with-syntax-highlighting",
      "#use-code-in-a-repl-to-check-keywords",
      "#look-for-a-syntaxerror",
      "#python-keywords-and-their-usage",
      "#value-keywords-true-false-none",
      "#operator-keywords-and-or-not-in-is",
      "#control-flow-keywords-if-elif-else",
      "#iteration-keywords-for-while-break-continue-else",
      "#structure-keywords-def-class-with-as-pass-lambda",
      "#returning-keywords-return-yield",
      "#import-keywords-import-from-as",
      "#exception-handling-keywords-try-except-raise-finally-else-assert",
      "#asynchronous-programming-keywords-async-await",
      "#variable-handling-keywords-del-global-nonlocal",
      "#deprecated-python-keywords",
      "#the-former-print-keyword",
      "#the-former-exec-keyword",
      "#conclusion",
      "/account/join/",
      "/courses/exploring-keywords-in-python/",
      "https://realpython.com/bonus/python-mastery-course/",
      "#python-keywords",
      "https://docs.python.org/3/library/functions.html",
      "https://realpython.com/invalid-syntax-python/#misspelling-missing-or-misusing-python-keywords",
      "https://docs.python.org/3.8/reference/lexical_analysis.html#keywords",
      "#the-true-and-false-keywords",
      "#the-await-keyword",
      "#the-else-keyword",
      "#the-import-keyword",
      "#the-pass-keyword",
      "#the-none-keyword",
      "#the-break-keyword",
      "#the-except-keyword",
      "#the-in-keyword",
      "#the-raise-keyword",
      "#the-true-and-false-keywords",
      "#the-class-keyword",
      "#the-finally-keyword",
      "#the-is-keyword",
      "#the-return-keyword",
      "#the-and-keyword",
      "#the-continue-keyword",
      "#the-for-keyword",
      "#the-lambda-keyword",
      "#the-try-keyword",
      "#the-as-keyword",
      "#the-def-keyword",
      "#the-from-keyword",
      "#the-nonlocal-keyword",
      "#the-while-keyword",
      "#the-assert-keyword",
      "#the-del-keyword",
      "#the-global-keyword",
      "#the-not-keyword",
      "#the-with-keyword",
      "#the-async-keyword",
      "#the-elif-keyword",
      "#the-if-keyword",
      "#the-or-keyword",
      "#the-yield-keyword",
      "#the-else-keyword-used-with-loops",
      "#the-else-keyword-used-with-try-and-except",
      "#the-as-keyword-used-with-with",
      "/account/join/",
      "#how-to-identify-python-keywords",
      "#use-an-ide-with-syntax-highlighting",
      "https://realpython.com/python-ides-code-editors-guide/",
      "#use-code-in-a-repl-to-check-keywords",
      "https://realpython.com/interacting-with-python/#using-the-python-interpreter-interactively",
      "https://realpython.com/python38-new-features/",
      "#look-for-a-syntaxerror",
      "https://realpython.com/invalid-syntax-python/#misspelling-missing-or-misusing-python-keywords",
      "#python-keywords-and-their-usage",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-operators-expressions/#evaluation-of-non-boolean-values-in-boolean-context",
      "/account/join/",
      "#value-keywords-true-false-none",
      "https://python-patterns.guide/gang-of-four/singleton/",
      "#the-true-and-false-keywords",
      "https://realpython.com/python-variables/",
      "#the-none-keyword",
      "https://realpython.com/python-return-statement/",
      "https://realpython.com/null-in-python/",
      "#operator-keywords-and-or-not-in-is",
      "#the-and-keyword",
      "#the-or-keyword",
      "https://realpython.com/python-or-operator/",
      "#the-not-keyword",
      "#the-in-keyword",
      "https://realpython.com/python-in-operator/",
      "#the-is-keyword",
      "https://realpython.com/python-is-identity-vs-equality/",
      "https://realpython.com/python-is-identity-vs-equality/",
      "https://realpython.com/python-operators-expressions/#identity-operators",
      "/account/join/",
      "#control-flow-keywords-if-elif-else",
      "#the-if-keyword",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-conditional-statements/#introduction-to-the-if-statement",
      "https://realpython.com/python-conditional-statements/#conditional-expressions-pythons-ternary-operator",
      "#the-elif-keyword",
      "https://en.wikipedia.org/wiki/Switch_statement",
      "https://realpython.com/courses/emulating-switch-case-python/",
      "#the-else-keyword",
      "https://realpython.com/python-conditional-statements/#the-else-and-elif-clauses",
      "/account/join/",
      "#iteration-keywords-for-while-break-continue-else",
      "#the-for-keyword",
      "https://realpython.com/python-print/",
      "https://en.wikipedia.org/wiki/Foreach_loop",
      "https://realpython.com/python-for-loop/",
      "#the-while-keyword",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/python-sockets/",
      "https://realpython.com/python-while-loop/",
      "#the-break-keyword",
      "https://realpython.com/python-while-loop/#the-python-break-and-continue-statements",
      "https://realpython.com/python-do-while/",
      "#the-continue-keyword",
      "#the-else-keyword-used-with-loops",
      "https://docs.python.org/3.3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops",
      "/account/join/",
      "#structure-keywords-def-class-with-as-pass-lambda",
      "https://realpython.com/defining-your-own-python-function/",
      "https://dbader.org/blog/python-context-managers-and-with-statement",
      "#the-def-keyword",
      "https://realpython.com/defining-your-own-python-function/#function-calls-and-definition",
      "#the-class-keyword",
      "https://realpython.com/python3-object-oriented-programming/#how-to-define-a-class-in-python",
      "#the-with-keyword",
      "https://realpython.com/python-scope-legb-rule/",
      "https://realpython.com/read-write-files-python/",
      "https://realpython.com/working-with-files-in-python/",
      "https://realpython.com/python-timer/#understanding-context-managers-in-python",
      "#the-as-keyword-used-with-with",
      "#the-pass-keyword",
      "https://realpython.com/python-pass/",
      "#the-lambda-keyword",
      "https://realpython.com/python-sort/",
      "https://realpython.com/python-lambda/",
      "/account/join/",
      "#returning-keywords-return-yield",
      "#the-return-keyword",
      "https://realpython.com/python-thinking-recursively/",
      "https://en.wikipedia.org/wiki/Factorial",
      "https://realpython.com/defining-your-own-python-function/#the-return-statement",
      "#the-yield-keyword",
      "https://realpython.com/introduction-to-python-generators/",
      "https://realpython.com/courses/python-generators/",
      "/account/join/",
      "#import-keywords-import-from-as",
      "https://pypi.org/",
      "https://realpython.com/python-modules-packages/#the-import-statement",
      "https://realpython.com/python-import/",
      "#the-import-keyword",
      "https://realpython.com/python-counter/",
      "#the-from-keyword",
      "#the-as-keyword",
      "https://realpython.com/numpy-array-programming/",
      "https://realpython.com/learning-paths/pandas-data-science/",
      "/account/join/",
      "#exception-handling-keywords-try-except-raise-finally-else-assert",
      "https://realpython.com/python-exceptions/",
      "#the-try-keyword",
      "#the-except-keyword",
      "#the-raise-keyword",
      "#the-finally-keyword",
      "#the-else-keyword-used-with-try-and-except",
      "https://realpython.com/python-exceptions/#the-else-clause",
      "#the-assert-keyword",
      "https://realpython.com/python-assert-statement/",
      "/account/join/",
      "#asynchronous-programming-keywords-async-await",
      "https://realpython.com/async-io-python/",
      "https://realpython.com/python-async-features/",
      "#the-async-keyword",
      "https://realpython.com/async-io-python/#the-asyncawait-syntax-and-native-coroutines",
      "#the-await-keyword",
      "#variable-handling-keywords-del-global-nonlocal",
      "#the-del-keyword",
      "https://realpython.com/python-lists-tuples/#python-lists",
      "https://realpython.com/python-dicts/",
      "#the-global-keyword",
      "https://realpython.com/python-scope-legb-rule/#the-global-statement",
      "#the-nonlocal-keyword",
      "https://realpython.com/python-scope-legb-rule/#the-nonlocal-statement",
      "/account/join/",
      "#deprecated-python-keywords",
      "#the-former-print-keyword",
      "https://realpython.com/python-print/",
      "#the-former-exec-keyword",
      "https://realpython.com/run-python-scripts/#hacking-exec",
      "https://realpython.com/python-exec/",
      "#conclusion",
      "https://realpython.com/cpython-source-code-guide/#grammar",
      "https://docs.python.org/3/reference/compound_stmts.html",
      "/feedback/survey/article/python-keywords/liked/?from=article-footer",
      "/feedback/survey/article/python-keywords/disliked/?from=article-footer",
      "/courses/exploring-keywords-in-python/"
    ]
  },
  {
    "id": 59,
    "title": "Regular Expressions: Regexes in Python (Part 2)",
    "url": "https://realpython.com/regex-python-part-2/",
    "pub_date": "2020-06-03T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In the previous tutorial in this series, you learned how to perform sophisticated pattern matching using regular expressions, or regexes, in Python.  This tutorial explores more regex tools and techniques that are available in Python.",
    "text": "Conclusion\n That concludes your tour of Python\u2019s re module!This introductory series contains two tutorials on regular expression processing in Python. If you\u2019ve worked through both the previous tutorial and this one, then you should now know how to:Regular expressions are extremely versatile and powerful\u2014literally a language in their own right. You\u2019ll find them invaluable in your Python coding.Note: The re module is great, and it will likely serve you well in most circumstances. However, there\u2019s an alternative third-party Python module called regex that provides even greater regular expression matching capability. You can learn more about it at the regex project page.Next up in this series, you\u2019ll explore how Python avoids conflict between identifiers in different areas of code. As you\u2019ve already seen, each function in Python has its own namespace, distinct from those of other functions. In the next tutorial, you\u2019ll learn how namespaces are implemented in Python and how they define variable scope.",
    "preview": false,
    "links": [
      "#re-module-functions",
      "#searching-functions",
      "#substitution-functions",
      "#utility-functions",
      "#compiled-regex-objects-in-python",
      "#why-bother-compiling-a-regex",
      "#regular-expression-object-methods",
      "#regular-expression-object-attributes",
      "#match-object-methods-and-attributes",
      "#match-object-methods",
      "#match-object-attributes",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/regex-python",
      "https://realpython.com/bonus/python-basics-sample-free-chapter/",
      "#re-module-functions",
      "https://realpython.com/regex-python/#modifying-regular-expression-matching-with-flags",
      "https://realpython.com/regex-python/#supported-regular-expression-flags",
      "/account/join/",
      "#searching-functions",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/regex-python/",
      "https://realpython.com/null-in-python/",
      "https://realpython.com/regex-python/#modifying-regular-expression-matching-with-flags",
      "/account/join/",
      "#substitution-functions",
      "https://realpython.com/python-strings/#modifying-strings",
      "#substitution-by-string",
      "#substitution-by-function",
      "#limiting-the-number-of-replacements",
      "/account/join/",
      "#utility-functions",
      "https://realpython.com/python-string-contains-substring/",
      "/account/join/",
      "#compiled-regex-objects-in-python",
      "#why-bother-compiling-a-regex",
      "https://en.wikipedia.org/wiki/Modular_programming",
      "https://en.wikipedia.org/wiki/Cache_(computing)#Software_caches",
      "/account/join/",
      "#regular-expression-object-methods",
      "https://realpython.com/python-strings/#string-slicing",
      "#regular-expression-object-attributes",
      "https://realpython.com/courses/dictionaries-python/",
      "/account/join/",
      "#match-object-methods-and-attributes",
      "https://realpython.com/python-data-types/#boolean-type-boolean-context-and-truthiness",
      "#match-object-methods",
      "#a-brief-introduction-to-magic-methods",
      "#back-to-match-objects",
      "https://en.wikipedia.org/wiki/Syntactic_sugar",
      "https://realpython.com/python-strings/#string-slicing",
      "/account/join/",
      "#match-object-attributes",
      "https://docs.python.org/3/library/re.html#re.Match.lastindex",
      "#regular-expression-object-methods",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/regex-python",
      "https://pypi.python.org/pypi/regex",
      "https://realpython.com/python-namespaces-scope/",
      "https://realpython.com/regex-python/",
      "#",
      "https://realpython.com/python-namespaces-scope/",
      "/feedback/survey/article/regex-python-part-2/liked/?from=article-footer",
      "/feedback/survey/article/regex-python-part-2/disliked/?from=article-footer"
    ]
  },
  {
    "id": 60,
    "title": "Regular Expressions: Regexes in Python (Part 1)",
    "url": "https://realpython.com/regex-python/",
    "pub_date": "2020-04-29T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In previous tutorials in this series, you've seen several different ways to compare string values with direct character-by-character comparison. In this tutorial, you'll learn how to perform more complex string pattern matching using regular expressions, or regexes, in Python.",
    "text": "Conclusion\n This concludes your introduction to regular expression matching and Python\u2019s re module. Congratulations! You\u2019ve mastered a tremendous amount of material. You now know how to:But you\u2019ve still seen only one function in the module: re.search()! The re module has many more useful functions and objects to add to your pattern-matching toolkit. The next tutorial in the series will introduce you to what else the regex module in Python has to offer.",
    "preview": false,
    "links": [
      "#regexes-in-python-and-their-uses",
      "#a-very-brief-history-of-regular-expressions",
      "#the-re-module",
      "#how-to-import-research",
      "#first-pattern-matching-example",
      "#python-regex-metacharacters",
      "#metacharacters-supported-by-the-re-module",
      "#metacharacters-that-match-a-single-character",
      "#escaping-metacharacters",
      "#anchors",
      "#quantifiers",
      "#grouping-constructs-and-backreferences",
      "#lookahead-and-lookbehind-assertions",
      "#miscellaneous-metacharacters",
      "#modified-regular-expression-matching-with-flags",
      "#supported-regular-expression-flags",
      "#combining-flags-arguments-in-a-function-call",
      "#setting-and-clearing-flags-within-a-regular-expression",
      "#conclusion",
      "/account/join/",
      "/courses/building-regexes-python/",
      "https://realpython.com/python-strings",
      "https://realpython.com/python-operators-expressions/#comparison-operators",
      "https://realpython.com/python-string-contains-substring/",
      "https://realpython.com/python-strings/#string-operators",
      "https://realpython.com/python-strings/#built-in-string-methods",
      "https://realpython.com/bonus/python-tricks-sample-pdf/",
      "#regexes-in-python-and-their-uses",
      "/account/join/",
      "#a-very-brief-history-of-regular-expressions",
      "https://en.wikipedia.org/wiki/Regular_language",
      "https://en.wikipedia.org/wiki/Regular_expression",
      "https://en.wikipedia.org/wiki/Ken_Thompson",
      "https://en.wikipedia.org/wiki/QED_(text_editor)",
      "https://realpython.com/oop-in-python-vs-java/",
      "#the-re-module",
      "https://realpython.com/null-in-python/",
      "#how-to-import-research",
      "https://realpython.com/lessons/import-statement/",
      "https://realpython.com/python-modules-packages/",
      "#first-pattern-matching-example",
      "https://realpython.com/python-data-types/#boolean-type-boolean-context-and-truthiness",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-strings/#string-slicing",
      "/account/join/",
      "#python-regex-metacharacters",
      "#metacharacters-supported-by-the-re-module",
      "https://en.wikipedia.org/wiki/Phrases_from_The_Hitchhiker%27s_Guide_to_the_Galaxy#Don%27t_Panic",
      "#first-pattern-matching-example",
      "/account/join/",
      "#metacharacters-that-match-a-single-character",
      "https://en.wikipedia.org/wiki/Hexadecimal",
      "/account/join/",
      "#escaping-metacharacters",
      "https://realpython.com/lessons/raw-strings/",
      "/account/join/",
      "#anchors",
      "https://realpython.com/regex-python/#modified-regular-expression-matching-with-flags",
      "https://realpython.com/regex-python/#modified-regular-expression-matching-with-flags",
      "/account/join/",
      "#quantifiers",
      "/account/join/",
      "#grouping-constructs-and-backreferences",
      "#treating-a-group-as-a-unit",
      "#capturing-groups",
      "https://realpython.com/python-lists-tuples/#python-tuples",
      "#backreferences",
      "https://en.wikipedia.org/wiki/Octal",
      "#other-grouping-constructs",
      "https://realpython.com/python-variables/#variable-names",
      "/account/join/",
      "#lookahead-and-lookbehind-assertions",
      "/account/join/",
      "#miscellaneous-metacharacters",
      "https://regex101.com",
      "/account/join/",
      "#modified-regular-expression-matching-with-flags",
      "#supported-regular-expression-flags",
      "https://realpython.com/lessons/triple-quoted-strings/",
      "#deep-dive-debugging-regular-expression-parsing",
      "https://realpython.com/python-strings/#built-in-string-functions",
      "https://realpython.com/python-encodings-guide",
      "https://docs.python.org/3/howto/unicode.html#python-s-unicode-support",
      "https://en.wikipedia.org/wiki/Devanagari#Numerals",
      "https://en.wikipedia.org/wiki/Unicode_Consortium",
      "#combining-flags-arguments-in-a-function-call",
      "https://realpython.com/python-operators-expressions/#bitwise-operators",
      "#setting-and-clearing-flags-within-a-regular-expression",
      "#conclusion",
      "https://realpython.com/defining-your-own-python-function/",
      "#",
      "https://realpython.com/regex-python-part-2/",
      "/feedback/survey/article/regex-python/liked/?from=article-footer",
      "/feedback/survey/article/regex-python/disliked/?from=article-footer",
      "/courses/building-regexes-python/"
    ]
  },
  {
    "id": 61,
    "title": "How to Use any() in Python",
    "url": "https://realpython.com/any-python/",
    "pub_date": "2020-03-30T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "If you've ever wondered how to simplify complex conditionals by determining if at least one in a series of conditions is true, then look no further. This tutorial will teach you all about how to use any() in Python to do just that.",
    "text": "Conclusion\n Congratulations! You\u2019ve learned the ins and outs of using any() in Python and the differences between any() and or. With a deeper understanding of these two tools, you\u2019re well prepared to decide between them in your own code.You now know:If you would like to continue learning about conditional expressions and how to use tools like or and any() in Python, then you can check out the following resources:",
    "preview": false,
    "links": [
      "#how-to-use-any-in-python",
      "#how-to-distinguish-between-or-and-any",
      "#syntax",
      "#return-value",
      "#conclusion",
      "/account/join/",
      "/courses/python-any-boolean-function/",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-conditional-statements/",
      "",
      "#how-to-use-any-in-python",
      "https://realpython.com/python-or-operator/",
      "https://docs.python.org/3/library/stdtypes.html#truth-value-testing",
      "https://realpython.com/python-operators-expressions/#evaluation-of-non-boolean-values-in-boolean-context",
      "https://realpython.com/lessons/looping-over-iterables/",
      "https://realpython.com/python-map-function/",
      "/account/join/",
      "#how-to-distinguish-between-or-and-any",
      "#syntax",
      "https://realpython.com/lessons/operators-and-built-functions/",
      "https://realpython.com/any-python/",
      "https://realpython.com/lessons/python-reduce-function/",
      "https://realpython.com/python-operators-expressions/#compound-logical-expressions-and-short-circuit-evaluation",
      "https://realpython.com/introduction-to-python-generators/#building-generators-with-generator-expressions",
      "https://realpython.com/courses/python-generators/",
      "/account/join/",
      "#return-value",
      "#conclusion",
      "https://docs.python.org/3.4/library/operator.html#operator.or_",
      "https://realpython.com/python-all/",
      "https://realpython.com/python-while-loop/",
      "/feedback/survey/article/any-python/liked/?from=article-footer",
      "/feedback/survey/article/any-python/disliked/?from=article-footer",
      "/courses/python-any-boolean-function/"
    ]
  },
  {
    "id": 62,
    "title": "Using the Python defaultdict Type for Handling Missing Keys",
    "url": "https://realpython.com/python-defaultdict/",
    "pub_date": "2020-03-11T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn how the Python defaultdict type works and how to use it for handling missing keys when you're working with dictionaries. You'll also learn how to use a defaultdict to solve problems like grouping or counting the items in a sequence or collection.",
    "text": "Conclusion\n The Python defaultdict type is a dictionary-like data structure provided by the Python standard library in a module called collections. The class inherits from dict, and its main added functionality is to supply default values for missing keys. In this tutorial, you\u2019ve learned how to use the Python defaultdict type for handling the missing keys in a dictionary.You\u2019re now able to:The Python defaultdict type is a convenient and efficient data structure that\u2019s designed to help you out when you\u2019re dealing with missing keys in a dictionary. Give it a try and make your code faster, more readable, and more Pythonic!",
    "preview": false,
    "links": [
      "#handling-missing-keys-in-dictionaries",
      "#understanding-the-python-defaultdict-type",
      "#using-the-python-defaultdict-type",
      "#grouping-items",
      "#grouping-unique-items",
      "#counting-items",
      "#accumulating-values",
      "#diving-deeper-into-defaultdict",
      "#defaultdict-vs-dict",
      "#defaultdictdefault_factory",
      "#defaultdict-vs-dictsetdefault",
      "#defaultdict__missing__",
      "#emulating-the-python-defaultdict-type",
      "#passing-arguments-to-default_factory",
      "#using-lambda",
      "#using-functoolspartial",
      "#conclusion",
      "/account/join/",
      "/courses/python-defaultdict-type/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-keyerror/",
      "https://docs.python.org/3/library/index.html",
      "https://docs.python.org/3/library/collections.html#module-collections",
      "https://docs.python.org/3/library/collections.html#collections.defaultdict",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/courses/dictionaries-python/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/courses/dictionaries-python/",
      "https://realpython.com/iterate-through-dictionary-python/",
      "",
      "#handling-missing-keys-in-dictionaries",
      "https://realpython.com/python-keyerror/",
      "https://docs.python.org/3/reference/compound_stmts.html#try",
      "https://docs.python.org/",
      "https://docs.python.org/3/library/exceptions.html#KeyError",
      "https://docs.python.org/3/library/stdtypes.html#mapping-types-dict",
      "https://realpython.com/python-traceback/",
      "https://realpython.com/courses/python-traceback/",
      "https://realpython.com/null-in-python/",
      "https://realpython.com/courses/python-conditional-statements/",
      "https://realpython.com/python-in-operator/",
      "https://docs.python.org/3/glossary.html#term-eafp",
      "https://docs.python.org/3/glossary.html#term-lbyl",
      "https://docs.python.org/3/library/index.html",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "https://docs.python.org/3/library/collections.html#collections.defaultdict",
      "/account/join/",
      "#understanding-the-python-defaultdict-type",
      "https://docs.python.org/3/library/collections.html#module-collections",
      "https://docs.python.org/3/library/collections.html#collections.defaultdict.__missing__",
      "https://docs.python.org/3/reference/datamodel.html#object.__init__",
      "https://realpython.com/python-lists-tuples/#python-lists",
      "#using-the-python-defaultdict-type",
      "https://realpython.com/python-sets/",
      "#grouping-items",
      "https://realpython.com/python-append/",
      "https://realpython.com/python-lists-tuples/#python-tuples",
      "https://realpython.com/python-for-loop/",
      "#defaultdict-vs-dictsetdefault",
      "/account/join/",
      "#grouping-unique-items",
      "#counting-items",
      "https://docs.python.org/3/library/functions.html#int",
      "https://realpython.com/python-strings/",
      "https://docs.python.org/3/reference/simple_stmts.html#assignment-statements",
      "https://realpython.com/python-assignment-operator/#augmented-assignment-operators-in-python",
      "https://docs.python.org/3/whatsnew/2.0.html#augmented-assignment",
      "https://realpython.com/python-counter/",
      "#accumulating-values",
      "https://realpython.com/openpyxl-excel-spreadsheets-python/",
      "https://realpython.com/iterate-through-dictionary-python/",
      "/account/join/",
      "#diving-deeper-into-defaultdict",
      "#defaultdict-vs-dict",
      "https://docs.python.org/3/library/functions.html#dir",
      "https://realpython.com/python-sets/",
      "#defaultdictdefault_factory",
      "https://docs.python.org/3/reference/datamodel.html#object.__getitem__",
      "/account/join/",
      "#defaultdict-vs-dictsetdefault",
      "https://realpython.com/run-python-scripts/#how-to-run-python-scripts-using-the-command-line",
      "https://docs.python.org/3/library/timeit.html#python-interface",
      "/account/join/",
      "#defaultdict__missing__",
      "https://docs.python.org/3/reference/expressions.html#subscriptions",
      "#emulating-the-python-defaultdict-type",
      "https://docs.python.org/3/library/collections.html#collections.UserDict",
      "https://realpython.com/python-kwargs-and-args/",
      "https://docs.python.org/3/library/functions.html#callable",
      "https://realpython.com/build-python-c-extension-module/",
      "https://github.com/python/cpython/blob/master/Modules/_collectionsmodule.c",
      "https://realpython.com/cpython-source-code-guide/",
      "https://docs.python.org/3/reference/datamodel.html#object.__setitem__",
      "/account/join/",
      "#passing-arguments-to-default_factory",
      "https://realpython.com/python-lambda/",
      "https://docs.python.org/3/library/functools.html#functools.partial",
      "#using-lambda",
      "https://realpython.com/python-lambda/",
      "#using-functoolspartial",
      "https://docs.python.org/3/library/functools.html#functools.partial",
      "#conclusion",
      "/feedback/survey/article/python-defaultdict/liked/?from=article-footer",
      "/feedback/survey/article/python-defaultdict/disliked/?from=article-footer",
      "/courses/python-defaultdict-type/"
    ]
  },
  {
    "id": 63,
    "title": "Defining Your Own Python Function",
    "url": "https://realpython.com/defining-your-own-python-function/",
    "pub_date": "2020-03-09T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn how to define and call your own Python function.  You'll also learn about passing data to your function, and returning data from your function back to its calling environment.",
    "text": "Conclusion\n As applications grow larger, it becomes increasingly important to modularize code by breaking it up into smaller functions of manageable size.  You now hopefully have all the tools you need to do this.You\u2019ve learned:Next up in this series are two tutorials that cover searching and pattern matching.  You will get an in-depth look at a Python module called re, which contains functionality for searching and matching using a versatile pattern syntax called a regular expression.",
    "preview": false,
    "links": [
      "#functions-in-python",
      "#the-importance-of-python-functions",
      "#abstraction-and-reusability",
      "#modularity",
      "#namespace-separation",
      "#function-calls-and-definition",
      "#argument-passing",
      "#positional-arguments",
      "#keyword-arguments",
      "#default-parameters",
      "#mutable-default-parameter-values",
      "#pass-by-value-vs-pass-by-reference-in-pascal",
      "#pass-by-value-vs-pass-by-reference-in-python",
      "#argument-passing-summary",
      "#side-effects",
      "#the-return-statement",
      "#exiting-a-function",
      "#returning-data-to-the-caller",
      "#revisiting-side-effects",
      "#variable-length-argument-lists",
      "#argument-tuple-packing",
      "#argument-tuple-unpacking",
      "#argument-dictionary-packing",
      "#argument-dictionary-unpacking",
      "#putting-it-all-together",
      "#multiple-unpackings-in-a-python-function-call",
      "#keyword-only-arguments",
      "#positional-only-arguments",
      "#docstrings",
      "#python-function-annotations",
      "#conclusion",
      "/account/join/",
      "/courses/defining-and-calling-functions/",
      "https://realpython.com/python-data-types/#built-in-functions",
      "https://realpython.com/bonus/python-cheat-sheet-short/",
      "#functions-in-python",
      "https://files.realpython.com/media/t.74ec5430f457.png",
      "https://realpython.com/python-variables/#object-identity",
      "https://realpython.com/any-python/",
      "https://realpython.com/python-data-types/#boolean-type-boolean-context-and-truthiness",
      "https://realpython.com/python-interface/",
      "/account/join/",
      "#the-importance-of-python-functions",
      "#abstraction-and-reusability",
      "https://en.wikipedia.org/wiki/Don%27t_repeat_yourself",
      "#modularity",
      "/account/join/",
      "#namespace-separation",
      "https://realpython.com/python-variables/",
      "https://realpython.com/python-namespaces-scope/",
      "#function-calls-and-definition",
      "https://realpython.com/python-conditional-statements/#python-its-all-about-the-indentation",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/courses/mastering-while-loops/",
      "https://realpython.com/courses/writing-beautiful-python-code-pep-8/",
      "https://realpython.com/python-print/",
      "https://files.realpython.com/media/t.f3e2000ecb56.png",
      "https://realpython.com/python-pass/",
      "/account/join/",
      "#argument-passing",
      "#positional-arguments",
      "https://files.realpython.com/media/t.4eefe0ad45c8.png",
      "https://realpython.com/documenting-python-code/",
      "#keyword-arguments",
      "https://realpython.com/courses/special-function-parameters/",
      "/account/join/",
      "#default-parameters",
      "#mutable-default-parameter-values",
      "https://realpython.com/python-mutable-vs-immutable-types/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-append/",
      "https://realpython.com/null-in-python/",
      "/account/join/",
      "#pass-by-value-vs-pass-by-reference-in-pascal",
      "https://en.wikipedia.org/wiki/Pascal_%28programming_language%29",
      "https://www.tutorialspoint.com/compile_pascal_online.php",
      "https://files.realpython.com/media/t.0d34e58b9e92.png",
      "/account/join/",
      "#pass-by-value-vs-pass-by-reference-in-python",
      "https://files.realpython.com/media/t.feb95658ffcd.png",
      "https://files.realpython.com/media/t.c246f52a6217.png",
      "https://realpython.com/lessons/integers/",
      "https://realpython.com/courses/python-dictionary-iteration/",
      "https://realpython.com/python-sets/",
      "https://realpython.com/courses/python-strings/",
      "https://realpython.com/courses/lists-tuples-python/",
      "https://realpython.com/python-lists-tuples/#python-lists",
      "https://realpython.com/python-dicts",
      "/account/join/",
      "#argument-passing-summary",
      "https://realpython.com/lessons/integers/",
      "https://realpython.com/lessons/built-in-string-functions/",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-sets/#frozen-sets",
      "https://realpython.com/python-lists-tuples/#python-lists",
      "https://realpython.com/python-dicts",
      "https://realpython.com/python-sets",
      "#side-effects",
      "#the-return-statement",
      "https://realpython.com/python-return-statement/",
      "#exiting-a-function",
      "https://realpython.com/courses/python-print/",
      "/account/join/",
      "#returning-data-to-the-caller",
      "https://realpython.com/python-lists-tuples/#python-tuples",
      "https://realpython.com/python-operators-expressions/#evaluation-of-non-boolean-values-in-boolean-context",
      "https://realpython.com/python-boolean/",
      "/account/join/",
      "#revisiting-side-effects",
      "https://realpython.com/courses/immutability-python/",
      "#variable-length-argument-lists",
      "https://realpython.com/python-pep8/",
      "/account/join/",
      "#argument-tuple-packing",
      "https://realpython.com/python-lists-tuples/#python-tuples",
      "https://realpython.com/python-type-checking/",
      "https://realpython.com/python-exceptions",
      "#argument-tuple-unpacking",
      "https://realpython.com/python-lists-tuples/#python-lists",
      "https://realpython.com/python-sets",
      "#argument-dictionary-packing",
      "https://realpython.com/python-dicts",
      "https://realpython.com/python-kwargs-and-args/",
      "#argument-dictionary-unpacking",
      "#putting-it-all-together",
      "https://realpython.com/python-kwargs-and-args",
      "#multiple-unpackings-in-a-python-function-call",
      "https://www.python.org/dev/peps/pep-0448",
      "https://realpython.com/invalid-syntax-python",
      "#keyword-only-arguments",
      "#positional-only-arguments",
      "https://realpython.com/python38-new-features/",
      "https://docs.python.org/3.9/whatsnew/3.8.html#positional-only-parameters",
      "#docstrings",
      "https://www.python.org/dev/peps/pep-0257",
      "https://realpython.com/documenting-python-code/#documenting-your-python-code-base-using-docstrings",
      "#python-function-annotations",
      "https://en.wikipedia.org/wiki/Metadata",
      "https://realpython.com/python-lists-tuples/#python-lists",
      "https://realpython.com/python-dicts",
      "https://realpython.com/courses/python-type-checking/",
      "https://www.python.org/dev/peps/pep-0484",
      "http://mypy-lang.org",
      "https://realpython.com/python-pep8",
      "#conclusion",
      "https://realpython.com/python-formatted-output/",
      "#",
      "https://realpython.com/regex-python/",
      "/feedback/survey/article/defining-your-own-python-function/liked/?from=article-footer",
      "/feedback/survey/article/defining-your-own-python-function/disliked/?from=article-footer",
      "/courses/defining-and-calling-functions/"
    ]
  },
  {
    "id": 64,
    "title": "The Beginner's Guide to Python Turtle",
    "url": "https://realpython.com/beginners-guide-python-turtle/",
    "pub_date": "2020-02-26T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn the basics of Python programming with the help of a simple and interactive Python library called turtle. If you're a beginner to Python, then this tutorial will definitely help you on your journey as you take your first steps into the world of programming.",
    "text": "Conclusion\n In this tutorial, you\u2019ve learned how to program with the Python turtle library and grasped some very important programming concepts. You know how to deal with variable initialization, loops, conditional statements, indentations, lists, and operators. This is a great start for you, especially if you\u2019re new to the Python programming language!Now you can:Now you\u2019re ready to venture into some higher-level Python programming. To progress further in your Python journey, check out Introduction to Python and 11 Beginner Tips for Learning Python Programming. Just remember to work hard and keep practicing, and you\u2019ll find that you\u2019re a Python expert in no time!",
    "preview": false,
    "links": [
      "#getting-to-know-the-python-turtle-library",
      "#getting-started-with-turtle",
      "#programming-with-turtle",
      "#moving-the-turtle",
      "#drawing-a-shape",
      "#drawing-preset-figures",
      "#changing-the-screen-color",
      "#changing-the-screen-title",
      "#changing-the-turtle-size",
      "#changing-the-pen-size",
      "#changing-the-turtle-and-pen-color",
      "#filling-in-an-image",
      "#changing-the-turtle-shape",
      "#changing-the-pen-speed",
      "#customizing-in-one-line",
      "#picking-the-pen-up-and-down",
      "#undoing-changes",
      "#clearing-the-screen",
      "#resetting-the-environment",
      "#leaving-a-stamp",
      "#cloning-your-turtle",
      "#using-loops-and-conditional-statements",
      "#for-loops",
      "#while-loops",
      "#conditional-statements",
      "#final-project-the-python-turtle-race",
      "#setting-up-the-game-environment",
      "#setting-up-the-turtles-and-homes",
      "#creating-the-die",
      "#developing-the-game",
      "#conclusion",
      "/account/join/",
      "/courses/python-turtle-beginners/",
      "https://en.wikipedia.org/wiki/Logo_(programming_language)",
      "",
      "#getting-to-know-the-python-turtle-library",
      "https://realpython.com/best-python-books/#python-for-kids-a-playful-introduction-to-programming",
      "https://realpython.com/learning-paths/python3-introduction/",
      "https://files.realpython.com/media/Turtle_Initial_Demo_GIF.923f9cc7d490.gif",
      "/account/join/",
      "#getting-started-with-turtle",
      "https://realpython.com/learning-paths/perfect-your-python-development-setup/",
      "https://realpython.com/python-idle/",
      "https://realpython.com/jupyter-notebook-introduction/",
      "https://realpython.com/interacting-with-python/",
      "https://realpython.com/python-introduction/",
      "https://www.python.org/downloads/",
      "https://realpython.com/installing-python/",
      "https://realpython.com/absolute-vs-relative-python-imports/",
      "https://realpython.com/python-import/",
      "https://realpython.com/python-variables/",
      "https://files.realpython.com/media/Screenshot_2019-12-10_at_7.40.34_AM.86e4071c3bb4.png",
      "/account/join/",
      "#programming-with-turtle",
      "#moving-the-turtle",
      "https://files.realpython.com/media/Update_-_Moving_Turtle_VIDEO_GIF.61623cf40fed.gif",
      "https://files.realpython.com/media/Turtle_EDIT_Graph.790c213ce0ba.jpg",
      "https://www.mathsisfun.com/data/cartesian-coordinates.html",
      "https://files.realpython.com/media/TURTLE_EDIT_GOTO_GIF.ac9b7de34b40.gif",
      "/account/join/",
      "#drawing-a-shape",
      "https://files.realpython.com/media/TURTLE_SQUARE_EDIT.626bc3fccd67.gif",
      "#drawing-preset-figures",
      "https://files.realpython.com/media/Update_-_Turtle_Circle_GIF.14906fdf5060.gif",
      "https://files.realpython.com/media/Turtle_Dot_Pic.8f171e2c7d98.png",
      "#changing-the-screen-color",
      "https://files.realpython.com/media/1-BG_COLOR-GIF.8619d9e1783f.gif",
      "https://en.wikipedia.org/wiki/Web_colors",
      "https://docs.python.org/3/library/turtle.html#turtle.color",
      "/account/join/",
      "#changing-the-screen-title",
      "https://files.realpython.com/media/Change_in_Screen_Title_UPDATE.bf645f90e3d0.jpg",
      "#changing-the-turtle-size",
      "https://files.realpython.com/media/Turtle_Shape_Size_Updated_GIF.3f31c5f85340.gif",
      "https://docs.python.org/3/library/turtle.html#turtle.turtlesize",
      "#changing-the-pen-size",
      "https://files.realpython.com/media/Pen_Size_GIF.4d1fb1beefd6.gif",
      "/account/join/",
      "#changing-the-turtle-and-pen-color",
      "https://files.realpython.com/media/Turtle_Fill_Color_Red_Update.216d34fcf201.png",
      "https://files.realpython.com/media/Turtle_Pen_Color_Updated.362202ac18cb.png",
      "https://files.realpython.com/media/Turtle_Color_One_Line_Green_and_Red_Updated.060568e73634.png",
      "#filling-in-an-image",
      "https://files.realpython.com/media/Turtle_Begin_End_Fill_GIF.849f73374a22.gif",
      "/account/join/",
      "#changing-the-turtle-shape",
      "https://files.realpython.com/media/4-Turtle_Shape-Gif.daf6a648bd8c.gif",
      "https://docs.python.org/3/library/turtle.html#turtle.shape",
      "#changing-the-pen-speed",
      "https://files.realpython.com/media/Update_-_Turtle_Speed_1_and_10.a35c56e8f016.gif",
      "#customizing-in-one-line",
      "https://files.realpython.com/media/TURTLE_EDIT_SINGLE_LINE_CUSTOMISATION_GIF.c30c0839af72.gif",
      "https://docs.python.org/3/library/turtle.html#turtle.pen",
      "/account/join/",
      "#picking-the-pen-up-and-down",
      "https://files.realpython.com/media/Screenshot_2019-10-01_at_9.22.37_PM.20eeea07c674.png",
      "#undoing-changes",
      "#clearing-the-screen",
      "#resetting-the-environment",
      "#leaving-a-stamp",
      "https://files.realpython.com/media/RP_STAMPS_GIF.05609e29d05f.gif",
      "/account/join/",
      "#cloning-your-turtle",
      "https://files.realpython.com/media/TURTLE_EDIT_CLONE_GIF.1736204d0292.gif",
      "#using-loops-and-conditional-statements",
      "#for-loops",
      "https://realpython.com/courses/python-for-loop/",
      "https://realpython.com/python-for-loop/",
      "/account/join/",
      "#while-loops",
      "https://realpython.com/courses/mastering-while-loops/",
      "https://files.realpython.com/media/TURTLE_EDIT_WHILE_LOOP_GIF.c0b9eae029cc.gif",
      "https://realpython.com/python-while-loop/",
      "#conditional-statements",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-assignment-operator/",
      "https://realpython.com/python-operators-expressions/",
      "https://realpython.com/python-print/",
      "https://realpython.com/python-conditional-statements/",
      "/account/join/",
      "#final-project-the-python-turtle-race",
      "#setting-up-the-game-environment",
      "https://realpython.com/python-lists-tuples/",
      "#setting-up-the-turtles-and-homes",
      "https://files.realpython.com/media/UPDATE_Turtle_Race_Setup_Blue_and_Green.16e6da3cc20d.png",
      "#creating-the-die",
      "https://realpython.com/courses/lists-tuples-python/",
      "#developing-the-game",
      "https://files.realpython.com/media/Update_-_Turtle_Race_Green_and_Blue.b1ee6be37a9f.gif",
      "https://realpython.com/python-operators-expressions/#arithmetic-operators",
      "#conclusion",
      "https://realpython.com/learning-paths/python3-introduction/",
      "https://realpython.com/python-beginner-tips/",
      "/feedback/survey/article/beginners-guide-python-turtle/liked/?from=article-footer",
      "/feedback/survey/article/beginners-guide-python-turtle/disliked/?from=article-footer",
      "/courses/python-turtle-beginners/"
    ]
  },
  {
    "id": 65,
    "title": "Introduction to Python SQL Libraries",
    "url": "https://realpython.com/python-sql-libraries/",
    "pub_date": "2020-02-24T14:00:00+00:00",
    "tags": [
      "databases",
      "basics",
      "tools"
    ],
    "description": "In this step-by-step tutorial, you'll learn how to connect to different database management systems by using various Python SQL libraries. You'll interact with SQLite, MySQL, and PostgreSQL databases and perform common database queries using a Python application.",
    "text": "Conclusion\n In this tutorial, you\u2019ve learned how to use three common Python SQL libraries. sqlite3, mysql-connector-python, and psycopg2 allow you to connect a Python application to SQLite, MySQL, and PostgreSQL databases, respectively.Now you can:However, this is just the tip of the iceberg! There are also Python SQL libraries for object-relational mapping, such as SQLAlchemy and Django ORM, that automate the task of database interaction in Python. You\u2019ll learn more about these libraries in other tutorials in our Python databases section.",
    "preview": false,
    "links": [
      "#understanding-the-database-schema",
      "#using-python-sql-libraries-to-connect-to-a-database",
      "#sqlite",
      "#mysql",
      "#postgresql",
      "#creating-tables",
      "#sqlite_1",
      "#mysql_1",
      "#postgresql_1",
      "#inserting-records",
      "#sqlite_2",
      "#mysql_2",
      "#postgresql_2",
      "#selecting-records",
      "#sqlite_3",
      "#mysql_3",
      "#postgresql_3",
      "#updating-table-records",
      "#sqlite_4",
      "#mysql_4",
      "#postgresql_4",
      "#deleting-table-records",
      "#sqlite_5",
      "#mysql_5",
      "#postgresql_5",
      "#conclusion",
      "/account/join/",
      "https://en.wikipedia.org/wiki/Database#Database_management_system",
      "https://realpython.com/absolute-vs-relative-python-imports/",
      "https://realpython.com/bonus/python-cheat-sheet-short/",
      "#understanding-the-database-schema",
      "https://files.realpython.com/media/python-sql-database-schema.3f28bf80fefe.png",
      "https://www.lifewire.com/one-to-many-relationships-1019756",
      "/account/join/",
      "#using-python-sql-libraries-to-connect-to-a-database",
      "https://realpython.com/python-sqlite-sqlalchemy/",
      "https://realpython.com/python-mysql/",
      "https://www.postgresql.org/",
      "https://dev.mysql.com/downloads/",
      "https://www.postgresql.org/download/",
      "https://realpython.com/django-setup/#mysql",
      "https://realpython.com/prevent-python-sql-injection/#setting-up-a-database",
      "#sqlite",
      "https://www.sqlite.org/docs.html",
      "https://realpython.com/installing-python/",
      "https://docs.python.org/2/library/sqlite3.html",
      "https://realpython.com/python-exceptions/",
      "#mysql",
      "https://realpython.com/what-is-pip/",
      "https://realpython.com/python-strings/",
      "/account/join/",
      "#postgresql",
      "https://realpython.com/terminal-commands/",
      "#creating-tables",
      "#sqlite_1",
      "/account/join/",
      "#mysql_1",
      "#postgresql_1",
      "/account/join/",
      "#inserting-records",
      "#sqlite_2",
      "#mysql_2",
      "https://realpython.com/courses/lists-tuples-python/",
      "/account/join/",
      "#postgresql_2",
      "https://realpython.com/python-lists-tuples/",
      "#selecting-records",
      "#sqlite_3",
      "#select",
      "#join",
      "#where",
      "/account/join/",
      "#mysql_3",
      "#postgresql_3",
      "#updating-table-records",
      "#sqlite_4",
      "/account/join/",
      "#mysql_4",
      "#postgresql_4",
      "#deleting-table-records",
      "#sqlite_5",
      "#mysql_5",
      "#postgresql_5",
      "#conclusion",
      "https://realpython.com/tutorials/databases/",
      "/feedback/survey/article/python-sql-libraries/liked/?from=article-footer",
      "/feedback/survey/article/python-sql-libraries/disliked/?from=article-footer"
    ]
  },
  {
    "id": 66,
    "title": "Null in Python: Understanding Python's NoneType Object",
    "url": "https://realpython.com/null-in-python/",
    "pub_date": "2020-02-19T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn about the NoneType object None, which acts as the null in Python. This object represents emptiness, and you can use it to mark default parameters and even show when you have no result. None is a tool for doing everything with nothing!",
    "text": "Conclusion\n None is a powerful tool in the Python toolbox. Like True and False, None is an immutable keyword. As the null in Python, you use it to mark missing values and results, and even default parameters where it\u2019s a much better choice than mutable types.Now you can:How do you use the null in Python? Leave a comment down in the comments section below!",
    "preview": false,
    "links": [
      "#understanding-null-in-python",
      "#using-pythons-null-object-none",
      "#declaring-null-variables-in-python",
      "#using-none-as-a-default-parameter",
      "#using-none-as-a-null-value-in-python",
      "#deciphering-none-in-tracebacks",
      "#checking-for-null-in-python",
      "#taking-a-look-under-the-hood",
      "#conclusion",
      "/account/join/",
      "/courses/python-none/",
      "https://realpython.com/build-python-c-extension-module/",
      "https://realpython.com/oop-in-python-vs-java/",
      "https://realpython.com/pointers-in-python/",
      "https://realpython.com/python-variables/",
      "https://realpython.com/python-keywords/",
      "",
      "#understanding-null-in-python",
      "https://realpython.com/interacting-with-python/",
      "https://realpython.com/python-print/",
      "https://realpython.com/courses/python-print/",
      "https://docs.python.org/3/library/stdtypes.html#list.sort",
      "https://realpython.com/courses/python-type-checking/",
      "/account/join/",
      "#using-pythons-null-object-none",
      "https://docs.python.org/3/library/re.html#re.match",
      "https://realpython.com/regex-python/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-is-identity-vs-equality/",
      "https://realpython.com/lessons/dos-and-donts-python-programming-recommendations/",
      "https://realpython.com/lessons/if-statements/",
      "https://realpython.com/courses/lists-tuples-python/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-sets/",
      "https://realpython.com/courses/python-strings/",
      "https://realpython.com/python-or-operator/",
      "https://realpython.com/python-and-operator/",
      "https://realpython.com/python-not-operator/",
      "#declaring-null-variables-in-python",
      "/account/join/",
      "#using-none-as-a-default-parameter",
      "#using-none-as-a-null-value-in-python",
      "https://realpython.com/python-dicts/#dgetltkeygt-ltdefaultgt",
      "#deciphering-none-in-tracebacks",
      "https://realpython.com/python-traceback/",
      "https://realpython.com/python-append/",
      "https://realpython.com/courses/python-traceback/",
      "/account/join/",
      "#checking-for-null-in-python",
      "https://realpython.com/python-type-checking/",
      "https://realpython.com/python-type-checking/#functions-without-return-values",
      "#taking-a-look-under-the-hood",
      "https://docs.python.org/3/library/builtins.html",
      "https://docs.python.org/3/library/functions.html#getattr",
      "https://docs.python.org/3.8/library/functions.html#id",
      "https://realpython.com/cpython-source-code-guide/",
      "https://realpython.com/invalid-syntax-python/",
      "/account/join/",
      "#conclusion",
      "/feedback/survey/article/null-in-python/liked/?from=article-footer",
      "/feedback/survey/article/null-in-python/disliked/?from=article-footer",
      "/courses/python-none/"
    ]
  },
  {
    "id": 67,
    "title": "A Guide to the Newer Python String Format Techniques",
    "url": "https://realpython.com/python-formatted-output/",
    "pub_date": "2020-02-17T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In the last tutorial in this series, you learned how to format string data using the string modulo operator.  In this tutorial, you'll see two more items to add to your Python string formatting toolkit. You'll learn about Python's string format method and the formatted string literal, or f-string.",
    "text": "Conclusion\n In this tutorial, you mastered two additional techniques that you can use in Python to format string data. You should now have all the tools you need to prepare string data for output or display!You might be wondering which Python formatting technique you should use. Under what circumstances would you choose .format() over the f-string? See Python String Formatting Best Practices for some considerations to take into account.In the next tutorial, you\u2019re going to learn more about functions in Python. Throughout this tutorial series, you\u2019ve seen many examples of Python\u2019s built-in functions. In Python, as in most programming languages, you can define your own custom user-defined functions as well. If you can\u2019t wait to learn how then continue on to the next tutorial!",
    "preview": false,
    "links": [
      "#the-python-string-format-method",
      "#the-string-format-method-arguments",
      "#positional-arguments",
      "#keyword-arguments",
      "#the-string-format-method-simple-replacement-fields",
      "#the-name-component",
      "#the-conversion-component",
      "#the-format_spec-component",
      "#the-string-format-method-nested-replacement-fields",
      "#the-python-formatted-string-literal-f-string",
      "#f-string-syntax",
      "#f-string-expression-limitations",
      "#f-string-formatting",
      "#conclusion",
      "/account/join/",
      "/courses/formatting-python-strings/",
      "https://realpython.com/python-input-output/",
      "https://realpython.com/python-strings/",
      "https://docs.python.org/3.4/library/string.html#template-strings",
      "https://realpython.com/python-modulo-string-formatting/",
      "https://realpython.com/python-f-strings",
      "#the-python-string-format-method",
      "/account/join/",
      "#the-string-format-method-arguments",
      "https://realpython.com/python-input-output/#the-string-modulo-operator",
      "https://files.realpython.com/media/t.e6b8525755da.png",
      "https://realpython.com/python-kwargs-and-args/",
      "https://files.realpython.com/media/t.53be85450e90.png",
      "#positional-arguments",
      "https://realpython.com/courses/lists-tuples-python/",
      "https://realpython.com/courses/python-exceptions-101/",
      "https://realpython.com/python-exceptions/",
      "/account/join/",
      "#keyword-arguments",
      "https://realpython.com/python-keyerror/",
      "https://realpython.com/python-variables/",
      "#the-string-format-method-simple-replacement-fields",
      "/account/join/",
      "#the-name-component",
      "https://realpython.com/courses/dictionaries-python/",
      "https://realpython.com/python-variables/#object-references",
      "https://realpython.com/python-complex-numbers/",
      "#the-conversion-component",
      "/account/join/",
      "#the-format_spec-component",
      "https://realpython.com/python-input-output/#conversion-specifiers",
      "#the-type-subcomponent",
      "https://realpython.com/python-input-output/#conversion-type",
      "https://docs.python.org/3.4/library/string.html#format-specification-mini-language",
      "https://en.wikipedia.org/wiki/IEEE_754-1985",
      "https://realpython.com/python-input-output/#width-and-precision-specifiers",
      "https://realpython.com/python-input-output/#conversion-flags",
      "#the-fill-and-align-subcomponents",
      "#the-sign-subcomponent",
      "#the-subcomponent",
      "#the-0-subcomponent",
      "#the-width-subcomponent",
      "#the-group-subcomponent",
      "#the-prec-subcomponent",
      "/account/join/",
      "#the-string-format-method-nested-replacement-fields",
      "https://realpython.com/python-input-output/#width-and-precision-specifiers",
      "#the-python-formatted-string-literal-f-string",
      "https://www.python.org/dev/peps/pep-0498",
      "/account/join/",
      "#f-string-syntax",
      "https://realpython.com/courses/python-3-f-strings-improved-string-formatting-syntax/",
      "/account/join/",
      "#f-string-expression-limitations",
      "#f-string-formatting",
      "https://realpython.com/courses/python-3-f-strings-improved-string-formatting-syntax",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/python-string-formatting/#which-string-formatting-method-should-you-use",
      "https://realpython.com/python-input-output/",
      "#",
      "https://realpython.com/defining-your-own-python-function/",
      "/feedback/survey/article/python-formatted-output/liked/?from=article-footer",
      "/feedback/survey/article/python-formatted-output/disliked/?from=article-footer",
      "/courses/formatting-python-strings/"
    ]
  },
  {
    "id": 68,
    "title": "Using pandas and Python to Explore Your Dataset",
    "url": "https://realpython.com/pandas-python-explore-dataset/",
    "pub_date": "2020-01-06T14:00:00+00:00",
    "tags": [
      "data-science",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn how to start exploring a dataset with pandas and Python. You'll learn how to access specific rows and columns to answer questions about your data. You'll also see how to handle missing values and prepare to visualize your dataset in a Jupyter notebook.",
    "text": "Conclusion\n In this tutorial, you\u2019ve learned how to start exploring a dataset with the pandas Python library. You saw how you could access specific rows and columns to tame even the largest of datasets. Speaking of taming, you\u2019ve also seen multiple techniques to prepare and clean your data, by specifying the data type of columns, dealing with missing values, and more. You\u2019ve even created queries, aggregations, and plots based on those.Now you can:This journey using the NBA stats only scratches the surface of what you can do with the pandas Python library. You can power up your project with pandas tricks, learn techniques to speed up pandas in Python, and even dive deep to see how pandas works behind the scenes. There are many more features for you to discover, so get out there and tackle those datasets! You can get all the code examples you saw in this tutorial by clicking the link below:Get Jupyter Notebook: Click here to get the Jupyter Notebook you\u2019ll use to explore data with Pandas in this tutorial.",
    "preview": false,
    "links": [
      "#setting-up-your-environment",
      "#using-the-pandas-python-library",
      "#getting-to-know-your-data",
      "#displaying-data-types",
      "#showing-basics-statistics",
      "#exploring-your-dataset",
      "#getting-to-know-pandas-data-structures",
      "#understanding-series-objects",
      "#understanding-dataframe-objects",
      "#accessing-series-elements",
      "#using-the-indexing-operator",
      "#using-loc-and-iloc",
      "#accessing-dataframe-elements",
      "#using-the-indexing-operator_1",
      "#using-loc-and-iloc_1",
      "#querying-your-dataset",
      "#grouping-and-aggregating-your-data",
      "#manipulating-columns",
      "#specifying-data-types",
      "#cleaning-data",
      "#missing-values",
      "#invalid-values",
      "#inconsistent-values",
      "#combining-multiple-datasets",
      "#visualizing-your-pandas-dataframe",
      "#conclusion",
      "/account/join/",
      "/courses/explore-dataset-with-pandas/",
      "https://realpython.com/python-statistics/",
      "https://realpython.com/python-data-structures/",
      "https://realpython.com/bonus/pandas-intro/",
      "#setting-up-your-environment",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/courses/lists-tuples-python/",
      "https://realpython.com/courses/dictionaries-python/",
      "https://realpython.com/effective-python-environment/",
      "https://realpython.com/terminal-commands/",
      "https://realpython.com/courses/using-jupyter-notebooks/",
      "https://realpython.com/installing-python/",
      "https://jupyter.org/try",
      "https://pandas.pydata.org/",
      "https://realpython.com/what-is-pip/",
      "https://docs.conda.io/en/latest/",
      "https://www.anaconda.com/",
      "https://realpython.com/tutorials/data-science/",
      "https://www.anaconda.com/distribution/",
      "https://realpython.com/python-windows-machine-learning-setup/#installing-the-miniconda-python-distribution",
      "https://realpython.com/python37-new-features/",
      "https://realpython.com/jupyter-notebook-introduction/",
      "https://realpython.com/bonus/pandas-intro/",
      "/account/join/",
      "#using-the-pandas-python-library",
      "https://fivethirtyeight.com/",
      "https://realpython.com/courses/reading-and-writing-csv-files/",
      "https://realpython.com/pandas-dataframe/",
      "https://realpython.com/python-variables/",
      "https://realpython.com/pandas-read-write-files/",
      "https://pandas.pydata.org/pandas-docs/stable/reference/io.html",
      "https://files.realpython.com/media/head.7c86dafd4141.png",
      "https://files.realpython.com/media/tail.0dc48c8c2803.png",
      "https://realpython.com/python-print/",
      "https://files.realpython.com/media/tail_3.52cf0045b5ff.png",
      "https://pandas.pydata.org/pandas-docs/stable/",
      "/account/join/",
      "#getting-to-know-your-data",
      "#displaying-data-types",
      "https://realpython.com/python-data-types/",
      "https://files.realpython.com/media/info.80fdd50f4ff7.png",
      "https://realpython.com/numpy-array-programming/",
      "https://realpython.com/asins/B06W2LXLQK/",
      "https://realpython.com/fast-flexible-pandas/",
      "https://pandas.pydata.org/pandas-docs/stable/getting_started/basics.html#basics-dtypes",
      "#showing-basics-statistics",
      "https://files.realpython.com/media/describe.0be00956e704.png",
      "https://files.realpython.com/media/describe_object.2ec0a6039517.png",
      "/account/join/",
      "#exploring-your-dataset",
      "#getting-to-know-pandas-data-structures",
      "#understanding-series-objects",
      "https://realpython.com/courses/lists-tuples-python/",
      "https://realpython.com/how-to-use-numpy-arange/",
      "https://realpython.com/numpy-array-programming/",
      "https://realpython.com/python-keywords/",
      "/account/join/",
      "#understanding-dataframe-objects",
      "#accessing-series-elements",
      "/account/join/",
      "#using-the-indexing-operator",
      "https://realpython.com/python-lists-tuples/",
      "#using-loc-and-iloc",
      "https://files.realpython.com/media/iloc_vs_loc_80_border20.d5280f475f4e.png",
      "https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html",
      "https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#ix-indexer-is-deprecated",
      "/account/join/",
      "#accessing-dataframe-elements",
      "#using-the-indexing-operator_1",
      "#using-loc-and-iloc_1",
      "https://files.realpython.com/media/scores_5555_5559.ac34be4fb1c1.png",
      "/account/join/",
      "#querying-your-dataset",
      "https://realpython.com/courses/splitting-concatenating-and-joining-strings-python/",
      "https://realpython.com/python-operators-expressions/",
      "https://realpython.com/python-pandas-tricks/#8-understand-how-pandas-uses-boolean-operators",
      "https://files.realpython.com/media/BLB_both_over_100_points.6fc6b6ff2d3b.png",
      "https://files.realpython.com/media/LA_on_tour.2fb2e541cfa5.png",
      "/account/join/",
      "#grouping-and-aggregating-your-data",
      "https://realpython.com/pandas-groupby/",
      "#manipulating-columns",
      "https://realpython.com/python-data-cleaning-numpy-pandas/",
      "https://fivethirtyeight.com/features/how-we-calculate-nba-elo-ratings/",
      "/account/join/",
      "#specifying-data-types",
      "https://files.realpython.com/media/info.80fdd50f4ff7.png",
      "https://realpython.com/data-engineer-interview-questions-python/#questions-on-relational-databases",
      "https://pandas.pydata.org/pandas-docs/stable/user_guide/categorical.html",
      "/account/join/",
      "#cleaning-data",
      "#missing-values",
      "https://realpython.com/tutorials/machine-learning/",
      "https://files.realpython.com/media/info.80fdd50f4ff7.png",
      "#invalid-values",
      "https://files.realpython.com/media/describe.0be00956e704.png",
      "https://files.realpython.com/media/0_to_2_game.820df65c4193.png",
      "#inconsistent-values",
      "https://realpython.com/python-data-cleaning-numpy-pandas/",
      "#combining-multiple-datasets",
      "#understanding-dataframe-objects",
      "https://pandas.pydata.org/pandas-docs/stable/user_guide/merging.html#concatenating-objects",
      "https://realpython.com/pandas-merge-join-and-concat/",
      "https://files.realpython.com/media/merge.2725ee7f0ea9.png",
      "https://files.realpython.com/media/merge_left_join.ef63a7b2ad3f.png",
      "#visualizing-your-pandas-dataframe",
      "https://realpython.com/jupyter-notebook-introduction/",
      "https://realpython.com/bonus/pandas-intro/",
      "https://realpython.com/pandas-plot-python/",
      "https://files.realpython.com/media/Knicks_points_sum_plot.ff35174b2854.png",
      "https://files.realpython.com/media/top10_franchises_bar_plot.2c8c4e458aa3.png",
      "https://files.realpython.com/media/Heat_2013_pie_plot.6bc590d29b90.png",
      "https://realpython.com/python-data-visualization-bokeh/",
      "#conclusion",
      "https://realpython.com/python-pandas-tricks/",
      "https://realpython.com/fast-flexible-pandas/",
      "https://realpython.com/asins/B06W2LXLQK/",
      "https://realpython.com/bonus/pandas-intro/",
      "/feedback/survey/article/pandas-python-explore-dataset/liked/?from=article-footer",
      "/feedback/survey/article/pandas-python-explore-dataset/disliked/?from=article-footer",
      "/courses/explore-dataset-with-pandas/"
    ]
  },
  {
    "id": 69,
    "title": "Invalid Syntax in Python: Common Reasons for SyntaxError",
    "url": "https://realpython.com/invalid-syntax-python/",
    "pub_date": "2019-11-20T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll see common examples of invalid syntax in Python and learn how to resolve the issue. If you've ever received a SyntaxError when trying to run your Python code, then this is the guide for you!",
    "text": "Conclusion\n In this tutorial, you\u2019ve seen what information the SyntaxError traceback gives you. You\u2019ve also seen many common examples of invalid syntax in Python and what the solutions are to those problems. Not only will this speed up your workflow, but it will also make you a more helpful code reviewer!When you\u2019re writing code, try to use an IDE that understands Python syntax and provides feedback. If you put many of the invalid Python code examples from this tutorial into a good IDE, then they should highlight the problem lines before you even get to execute your code.Getting a SyntaxError while you\u2019re learning Python can be frustrating, but now you know how to understand traceback messages and what forms of invalid syntax in Python you might come up against. The next time you get a SyntaxError, you\u2019ll be better equipped to fix the problem quickly!",
    "preview": false,
    "links": [
      "#invalid-syntax-in-python",
      "#syntaxerror-exception-and-traceback",
      "#common-syntax-problems",
      "#misusing-the-assignment-operator",
      "#misspelling-missing-or-misusing-python-keywords",
      "#missing-parentheses-brackets-and-quotes",
      "#mistaking-dictionary-syntax",
      "#using-the-wrong-indentation",
      "#defining-and-calling-functions",
      "#changing-python-versions",
      "#conclusion",
      "/account/join/",
      "/courses/identify-invalid-syntax/",
      "https://realpython.com/bonus/python-mastery-course/",
      "#invalid-syntax-in-python",
      "https://realpython.com/python-traceback/",
      "https://realpython.com/python-exceptions/",
      "/account/join/",
      "#syntaxerror-exception-and-traceback",
      "https://realpython.com/python-debug-idle/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-traceback/",
      "https://realpython.com/courses/python-traceback/",
      "#common-syntax-problems",
      "#misusing-the-assignment-operator",
      "https://realpython.com/python-assignment-operator/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-keywords/",
      "/account/join/",
      "#misspelling-missing-or-misusing-python-keywords",
      "https://realpython.com/python-variables/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-for-loop/#the-break-and-continue-statements",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/lessons/pass-statement/",
      "https://realpython.com/python-print/",
      "https://realpython.com/python-print/#print-was-a-statement-in-python-2",
      "https://realpython.com/python-print/#print-is-a-function-in-python-3",
      "/account/join/",
      "#missing-parentheses-brackets-and-quotes",
      "https://realpython.com/python-f-strings/",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-print/",
      "https://realpython.com/lessons/whitespace-expressions-and-statements/",
      "/account/join/",
      "#mistaking-dictionary-syntax",
      "#syntaxerror-exception-and-traceback",
      "#using-the-wrong-indentation",
      "https://realpython.com/lessons/whitespace-expressions-and-statements/",
      "/account/join/",
      "#defining-and-calling-functions",
      "#changing-python-versions",
      "https://realpython.com/python-f-strings/",
      "https://realpython.com/python38-new-features/",
      "https://docs.python.org/3.8/whatsnew/3.8.html#assignment-expressions",
      "https://docs.python.org/3.8/whatsnew/3.8.html#f-strings-support-for-self-documenting-expressions-and-debugging",
      "https://docs.python.org/3.8/whatsnew/3.8.html#positional-only-parameters",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/python-ides-code-editors-guide/",
      "/feedback/survey/article/invalid-syntax-python/liked/?from=article-footer",
      "/feedback/survey/article/invalid-syntax-python/disliked/?from=article-footer",
      "/courses/identify-invalid-syntax/"
    ]
  },
  {
    "id": 70,
    "title": "Getting Started With Python IDLE",
    "url": "https://realpython.com/python-idle/",
    "pub_date": "2019-11-13T14:00:00+00:00",
    "tags": [
      "basics"
    ],
    "description": "In this tutorial, you'll learn how to use the development environment included with your Python installation. Python IDLE is a small program that packs a big punch!  You'll learn how to use Python IDLE to interact with Python directly, work with Python files, and improve your development workflow.",
    "text": "Conclusion\n In this tutorial, you\u2019ve learned all the basics of using IDLE to write Python programs. You know what Python IDLE is and how you can use it to interact with Python directly. You\u2019ve also learned how to work with Python files and customize Python IDLE to your liking.You\u2019ve learned how to:Now you\u2019re armed with a new tool that will let you productively write Pythonic code and save you countless hours down the road. Happy programming!",
    "preview": false,
    "links": [
      "#what-is-python-idle",
      "#an-interactive-interpreter",
      "#a-file-editor",
      "#how-to-use-the-python-idle-shell",
      "#how-to-work-with-python-files",
      "#opening-a-file",
      "#editing-a-file",
      "#executing-a-file",
      "#how-to-improve-your-workflow",
      "#automatic-indentation",
      "#code-completion-and-call-tips",
      "#code-context",
      "#how-to-debug-in-idle",
      "#interpreter-debug-mode",
      "#breakpoints",
      "#errors-and-exceptions",
      "#how-to-customize-python-idle",
      "#fontstabs",
      "#highlights",
      "#keys",
      "#general",
      "#extensions",
      "#conclusion",
      "/account/join/",
      "/courses/starting-python-idle/",
      "",
      "#what-is-python-idle",
      "https://realpython.com/python-ides-code-editors-guide/",
      "/account/join/",
      "#an-interactive-interpreter",
      "https://realpython.com/interacting-with-python/",
      "https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop",
      "https://realpython.com/python-repl/",
      "#a-file-editor",
      "#how-to-use-the-python-idle-shell",
      "https://files.realpython.com/media/interpreter.d318506e97e0.png",
      "https://files.realpython.com/media/hello_idle.294af1398cd8.png",
      "https://realpython.com/python-print/",
      "https://files.realpython.com/media/shell_menu.5f695ce3c2bc.png",
      "https://files.realpython.com/media/restart-idle-shell.0c8ca8c935b4.png",
      "https://realpython.com/python-variables/",
      "https://realpython.com/python-traceback/",
      "https://files.realpython.com/media/interrupt.ae9ab3e96951.png",
      "/account/join/",
      "#how-to-work-with-python-files",
      "#opening-a-file",
      "https://files.realpython.com/media/starter_file.81538f283fa7.png",
      "#editing-a-file",
      "https://files.realpython.com/media/saved_file.dd2e6e22a35e.png",
      "https://files.realpython.com/media/unsaved_file.ab491608753b.png",
      "/account/join/",
      "#executing-a-file",
      "#how-to-improve-your-workflow",
      "#automatic-indentation",
      "https://realpython.com/python-pep8/",
      "#code-completion-and-call-tips",
      "https://realpython.com/python-lists-tuples/",
      "https://files.realpython.com/media/calltips.9e385e2c8879.png",
      "#code-context",
      "https://files.realpython.com/media/code_context.912646215db2.png",
      "https://realpython.com/python-main-function/",
      "#how-to-debug-in-idle",
      "https://realpython.com/python-debug-idle/",
      "https://realpython.com/courses/python-debugging-pdb/",
      "/account/join/",
      "#interpreter-debug-mode",
      "https://files.realpython.com/media/debugger.9321857cf6e5.png",
      "https://en.wikipedia.org/wiki/Breakpoint",
      "#breakpoints",
      "#errors-and-exceptions",
      "https://realpython.com/courses/python-traceback/",
      "https://realpython.com/python-exceptions/",
      "#how-to-customize-python-idle",
      "/account/join/",
      "#fontstabs",
      "https://files.realpython.com/media/settings-font.8f3ea098e581.png",
      "https://realpython.com/python-pep8/",
      "#highlights",
      "https://files.realpython.com/media/settings-syntax.488479f37483.png",
      "#keys",
      "https://files.realpython.com/media/settings-shortcuts.668a028871da.png",
      "#creating-your-own-shortcuts",
      "https://files.realpython.com/media/settings-shortcuts-custom.98546cf5241d.png",
      "/account/join/",
      "#general",
      "https://files.realpython.com/media/settings-general.b158ff73a471.png",
      "#extensions",
      "http://idlex.sourceforge.net/extensions.html",
      "#conclusion",
      "/feedback/survey/article/python-idle/liked/?from=article-footer",
      "/feedback/survey/article/python-idle/disliked/?from=article-footer",
      "/courses/starting-python-idle/"
    ]
  },
  {
    "id": 71,
    "title": "When to Use a List Comprehension in Python",
    "url": "https://realpython.com/list-comprehension-python/",
    "pub_date": "2019-11-06T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "Python list comprehensions make it easy to create lists while performing sophisticated filtering, mapping, and conditional logic on their members. In this tutorial, you'll learn when to use a list comprehension in Python and how to create them effectively.",
    "text": "Conclusion\n In this tutorial, you learned how to use a list comprehension in Python to accomplish complex tasks without making your code overly complicated.Now you can:Whenever you have to choose a list creation method, try multiple implementations and consider what\u2019s easiest to read and understand in your specific scenario. If performance is important, then you can use profiling tools to give you actionable data instead of relying on hunches or guesses about what works the best.Remember that while Python list comprehensions get a lot of attention, your intuition and ability to use data when it counts will help you write clean code that serves the task at hand. This, ultimately, is the key to making your code Pythonic!",
    "preview": false,
    "links": [
      "#how-to-create-lists-in-python",
      "#using-for-loops",
      "#using-map-objects",
      "#using-list-comprehensions",
      "#benefits-of-using-list-comprehensions",
      "#how-to-supercharge-your-comprehensions",
      "#using-conditional-logic",
      "#using-set-and-dictionary-comprehensions",
      "#using-the-walrus-operator",
      "#when-not-to-use-a-list-comprehension-in-python",
      "#watch-out-for-nested-comprehensions",
      "#choose-generators-for-large-datasets",
      "#profile-to-optimize-performance",
      "#conclusion",
      "/account/join/",
      "/courses/understand-list-comprehensions/",
      "https://realpython.com/bonus/python-tricks-sample-pdf/",
      "#how-to-create-lists-in-python",
      "https://realpython.com/python-lists-tuples/",
      "/account/join/",
      "#using-for-loops",
      "https://realpython.com/courses/python-for-loop/",
      "https://realpython.com/python-range/",
      "https://realpython.com/python-append/",
      "https://realpython.com/python-numbers/",
      "#using-map-objects",
      "https://realpython.com/python-map-function/",
      "https://realpython.com/python-functional-programming/",
      "#using-list-comprehensions",
      "https://realpython.com/python-sets/",
      "https://realpython.com/introduction-to-python-generators/",
      "/account/join/",
      "#benefits-of-using-list-comprehensions",
      "https://realpython.com/courses/idiomatic-python-101/",
      "https://realpython.com/python-lists-tuples/",
      "#how-to-supercharge-your-comprehensions",
      "https://realpython.com/courses/using-list-comprehensions-effectively/",
      "https://realpython.com/python38-new-features/",
      "#using-conditional-logic",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-filter-function/",
      "/account/join/",
      "#using-set-and-dictionary-comprehensions",
      "https://realpython.com/python-dicts/",
      "#using-the-walrus-operator",
      "https://www.python.org/dev/peps/pep-0572/",
      "https://realpython.com/python-variables/",
      "#when-not-to-use-a-list-comprehension-in-python",
      "#watch-out-for-nested-comprehensions",
      "/account/join/",
      "#choose-generators-for-large-datasets",
      "https://realpython.com/courses/python-generators/",
      "#profile-to-optimize-performance",
      "https://docs.python.org/3/library/timeit.html",
      "#conclusion",
      "/feedback/survey/article/list-comprehension-python/liked/?from=article-footer",
      "/feedback/survey/article/list-comprehension-python/disliked/?from=article-footer",
      "/courses/understand-list-comprehensions/"
    ]
  },
  {
    "id": 72,
    "title": "Using the Python zip() Function for Parallel Iteration",
    "url": "https://realpython.com/python-zip-function/",
    "pub_date": "2019-10-02T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn how to use the Python zip() function to solve common programming problems. You'll learn how to traverse multiple iterables in parallel and create dictionaries with just a few lines of code.",
    "text": "Conclusion\n In this tutorial, you\u2019ve learned how to use Python\u2019s zip() function. zip() can receive multiple iterables as input. It returns an iterator that can generate tuples with paired elements from each argument. The resulting iterator can be quite useful when you need to process multiple iterables in a single loop and perform some actions on their items at the same time.Now you can:You\u2019ve also coded a few examples that you can use as a starting point for implementing your own solutions using Python\u2019s zip() function. Feel free to modify these examples as you explore zip() in depth!",
    "preview": false,
    "links": [
      "#understanding-the-python-zip-function",
      "#using-zip-in-python",
      "#passing-n-arguments",
      "#passing-no-arguments",
      "#passing-one-argument",
      "#passing-arguments-of-unequal-length",
      "#comparing-zip-in-python-3-and-2",
      "#looping-over-multiple-iterables",
      "#traversing-lists-in-parallel",
      "#traversing-dictionaries-in-parallel",
      "#unzipping-a-sequence",
      "#sorting-in-parallel",
      "#calculating-in-pairs",
      "#building-dictionaries",
      "#conclusion",
      "/account/join/",
      "/courses/python-zip-function/",
      "https://realpython.com/courses/dictionaries-python/",
      "https://realpython.com/bonus/python-mastery-course/",
      "#understanding-the-python-zip-function",
      "https://docs.python.org/3/library/builtins.html",
      "https://docs.python.org/3/library/functions.html#zip",
      "https://docs.python.org/3/library/functions.html#zip",
      "/account/join/",
      "#using-zip-in-python",
      "https://docs.python.org/3/glossary.html#term-iterable",
      "https://realpython.com/read-write-files-python/",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-sets/",
      "#passing-n-arguments",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-sets/",
      "#passing-no-arguments",
      "https://realpython.com/python-variables/",
      "https://realpython.com/python-exceptions/",
      "https://docs.python.org/3/library/functions.html#next",
      "#passing-one-argument",
      "/account/join/",
      "#passing-arguments-of-unequal-length",
      "https://realpython.com/python-range/",
      "https://docs.python.org/3/library/itertools.html#itertools.zip_longest",
      "https://realpython.com/null-in-python/",
      "https://realpython.com/python310-new-features/",
      "https://docs.python.org/3/library/functions.html#zip",
      "https://www.python.org/dev/peps/pep-0618/",
      "https://docs.python.org/3/library/exceptions.html#ValueError",
      "#comparing-zip-in-python-3-and-2",
      "https://realpython.com/python-pass/",
      "/account/join/",
      "#looping-over-multiple-iterables",
      "#traversing-lists-in-parallel",
      "https://realpython.com/courses/python-for-loop/",
      "https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences",
      "https://realpython.com/courses/idiomatic-python-101/",
      "https://realpython.com/python-for-loop/",
      "#traversing-dictionaries-in-parallel",
      "https://docs.python.org/3/whatsnew/3.6.html#whatsnew36-compactdict",
      "https://realpython.com/iterate-through-dictionary-python/",
      "#unzipping-a-sequence",
      "https://realpython.com/python-kwargs-and-args/#unpacking-with-the-asterisk-operators",
      "/account/join/",
      "#sorting-in-parallel",
      "https://realpython.com/sorting-algorithms-python/",
      "https://realpython.com/python-sort/",
      "#calculating-in-pairs",
      "#building-dictionaries",
      "https://realpython.com/python-dicts/",
      "/account/join/",
      "#conclusion",
      "/feedback/survey/article/python-zip-function/liked/?from=article-footer",
      "/feedback/survey/article/python-zip-function/disliked/?from=article-footer",
      "/courses/python-zip-function/"
    ]
  },
  {
    "id": 73,
    "title": "How to Convert a Python String to int",
    "url": "https://realpython.com/convert-python-string-to-int/",
    "pub_date": "2019-09-18T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "There are several ways to represent integers in Python. In this quick and practical tutorial, you'll learn how you can store integers using int and str as well as how you can convert a Python string to an int and vice versa.",
    "text": "Conclusion\n Congratulations! You\u2019ve learned so much about integers and how to represent and convert them between Python string and int data types.In this tutorial, you learned:Now that you know so much about str and int, you can learn more about representing numerical types using float(), hex(), oct(), and bin()!",
    "preview": false,
    "links": [
      "#representing-integers-in-python",
      "#converting-a-python-string-to-an-int",
      "#converting-a-python-int-to-a-string",
      "#conclusion",
      "/account/join/",
      "/courses/convert-python-string-int/",
      "https://en.wikipedia.org/wiki/Integer",
      "https://realpython.com/python-data-types/#integers",
      "https://realpython.com/python-data-types/#strings",
      "https://realpython.com/python-strings/",
      "",
      "#representing-integers-in-python",
      "https://realpython.com/python-data-types/",
      "https://docs.python.org/3/library/stdtypes.html#textseq",
      "https://docs.python.org/3/library/stdtypes.html#numeric-types-int-float-complex",
      "https://realpython.com/python-encodings-guide/#covering-all-the-bases-other-number-systems",
      "https://simple.wikipedia.org/wiki/Base_(mathematics)",
      "https://docs.python.org/reference/lexical_analysis.html#integers",
      "/account/join/",
      "#converting-a-python-string-to-an-int",
      "#converting-a-python-int-to-a-string",
      "https://realpython.com/python-f-strings/",
      "https://docs.python.org/library/string.html#format-specification-mini-language",
      "/account/join/",
      "#conclusion",
      "https://docs.python.org/3/library/functions.html#float",
      "https://docs.python.org/3/library/functions.html#hex",
      "https://docs.python.org/3/library/functions.html#oct",
      "https://docs.python.org/3/library/functions.html#bin",
      "/feedback/survey/article/convert-python-string-to-int/liked/?from=article-footer",
      "/feedback/survey/article/convert-python-string-to-int/disliked/?from=article-footer",
      "/courses/convert-python-string-int/"
    ]
  },
  {
    "id": 74,
    "title": "MATLAB vs Python: Why and How to Make the Switch",
    "url": "https://realpython.com/matlab-vs-python/",
    "pub_date": "2019-09-09T14:00:00+00:00",
    "tags": [
      "best-practices",
      "data-science",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn about MATLAB vs Python, why you should switch from MATLAB to Python, the packages you'll need to make a smooth transition, and the bumps you'll most likely encounter along the way.",
    "text": "Further Reading\n There are tons of resources on the Web covering the differences in MATLAB vs Python. Here are a few of the resources that I found helpful when I transitioned from MATLAB to Python:",
    "preview": false,
    "links": [
      "#matlab-vs-python-comparing-features-and-philosophy",
      "#setting-up-your-environment-for-python",
      "#getting-python-via-anaconda",
      "#getting-an-integrated-development-environment",
      "#spyder",
      "#jupyterlab",
      "#learning-about-pythons-mathematical-libraries",
      "#numpy-numerical-python",
      "#scipy-scientific-python",
      "#matplotlib-matlab-like-plotting-library",
      "#other-important-python-libraries",
      "#syntax-differences-between-matlab-and-python",
      "#you-will-probably-see-this-syntax",
      "#you-will-probably-see-these-but-you-can-learn-them-when-you-need-to",
      "#you-will-only-need-these-in-specialized-situations",
      "#an-overview-of-basic-array-operations",
      "#basic-mathematical-operators-work-element-wise-in-numpy",
      "#one-dimensional-arrays-are-vectors-in-numpy",
      "#creating-arrays-is-very-flexible-in-numpy",
      "#the-colon-operator-is-very-powerful-in-numpy",
      "#array-slices-are-views-of-arrays-in-numpy",
      "#tips-and-tricks-to-make-your-code-pythonic",
      "#you-should-not-use-semicolons-to-end-lines-in-python",
      "#you-should-not-import-from-a-module-in-python",
      "#you-should-take-advantage-of-the-different-data-types-in-python",
      "#exceptions-help-you-control-program-flow-in-python",
      "#how-to-handle-exceptions-in-python",
      "#there-is-an-official-guide-to-writing-good-code-in-python",
      "#python-has-a-fantastic-and-supportive-community",
      "#areas-where-you-should-still-use-matlab",
      "#conclusion",
      "#further-reading",
      "/account/join/",
      "#",
      "#matlab-vs-python-comparing-features-and-philosophy",
      "https://redditblog.com/2005/12/05/on-lisp/",
      "https://anvilventures.com/blog/looking-inside-the-box.html",
      "https://stackoverflow.com/questions/2560310/heavy-usage-of-python-at-google/2561008#2561008",
      "https://thenewstack.io/instagram-makes-smooth-move-python-3/",
      "https://www.sciencenews.org/article/black-hole-first-picture-event-horizon-telescope",
      "https://github.com/achael/eht-imaging",
      "https://medium.com/netflix-techblog/python-at-netflix-86b6028b3b3e",
      "https://en.wikipedia.org/wiki/Paul_Romer",
      "https://paulromer.net/jupyter-mathematica-and-the-future-of-the-research-paper/",
      "https://realpython.com/python-introduction/",
      "https://realpython.com/learning-paths/python3-introduction/#",
      "https://realpython.com/learning-paths/python3-introduction/",
      "https://realpython.com/arduino-python/",
      "https://www.gnu.org/software/octave/",
      "/account/join/",
      "#setting-up-your-environment-for-python",
      "#getting-python-via-anaconda",
      "https://python.org",
      "https://anaconda.com",
      "https://anaconda.com/download",
      "https://realpython.com/python38-new-features/",
      "https://files.realpython.com/media/anaconda-navigator.bff710edb0a0.png",
      "https://realpython.com/python-windows-machine-learning-setup/",
      "https://realpython.com/what-is-pip/",
      "#getting-an-integrated-development-environment",
      "https://realpython.com/python-variables/",
      "#spyder",
      "#changing-the-default-window-layout-in-spyder",
      "https://files.realpython.com/media/spyder-default.0ad112e1eb06.png",
      "https://files.realpython.com/media/spyder-matlab-view.c9e6fbfcffe4.png",
      "https://ipython.org/",
      "#running-statements-in-the-console-in-spyder",
      "https://www.python.org/dev/peps/pep-0020/",
      "https://xkcd.com/353",
      "https://files.realpython.com/media/spyder-variable-explorer.bed4ebb8ed14.png",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-data-structures/",
      "#running-code-in-files-in-spyder",
      "https://realpython.com/documenting-python-code/#documenting-your-python-code-base-using-docstrings",
      "#comments-start-with-in-python",
      "https://files.realpython.com/media/spyder-run-settings.784e177e3ab9.png",
      "https://realpython.com/python-debugging-pdb/",
      "#summarizing-your-experience-in-spyder",
      "https://realpython.com/python-modules-packages/",
      "https://realpython.com/pypi-publish-python-package/",
      "https://realpython.com/courses/how-to-publish-your-own-python-package-pypi/",
      "https://docs.spyder-ide.org/index.html",
      "https://github.com/spyder-ide/spyder/wiki/Troubleshooting-Guide-and-FAQ",
      "https://github.com/spyder-ide/spyder/wiki",
      "/account/join/",
      "#jupyterlab",
      "https://files.realpython.com/media/jupyterlab-main-window.d9420a33f736.png",
      "https://blog.jupyter.org/jupyterlab-is-ready-for-users-5a6f039b8906",
      "https://jupyterlab.readthedocs.io/en/stable/",
      "https://realpython.com/jupyter-notebook-introduction/",
      "https://realpython.com/courses/using-jupyter-notebooks/",
      "#learning-about-pythons-mathematical-libraries",
      "https://realpython.com/installing-python/",
      "https://realpython.com/creating-modifying-pdf/",
      "https://realpython.com/linear-programming-python/",
      "https://realpython.com/python-scipy-fft/",
      "https://realpython.com/python-scipy-linalg/",
      "https://realpython.com/pandas-python-explore-dataset/",
      "#numpy-numerical-python",
      "http://www.numpy.org",
      "https://realpython.com/python-scipy-cluster-optimize/",
      "https://realpython.com/tutorials/numpy/",
      "https://realpython.com/numpy-array-programming/",
      "https://realpython.com/how-to-use-numpy-arange/",
      "https://realpython.com/python-histograms/",
      "/account/join/",
      "#scipy-scientific-python",
      "https://docs.scipy.org/doc/scipy/reference/",
      "#matplotlib-matlab-like-plotting-library",
      "https://matplotlib.org",
      "https://matplotlib.org/3.1.0/api/toolkits/mplot3d.html",
      "https://scitools.org.uk/cartopy/docs/latest/",
      "https://matplotlib.org/3.1.0/thirdpartypackages/index.html",
      "https://realpython.com/python-matplotlib-guide/",
      "https://matplotlib.org/tutorials/introductory/sample_plots.html",
      "https://matplotlib.org/gallery/index.html",
      "#other-important-python-libraries",
      "https://pandas.pydata.org/",
      "https://realpython.com/pandas-dataframe/",
      "https://www.sympy.org/en/index.html",
      "https://scikit-learn.org/stable/index.html",
      "https://scikit-image.org/",
      "https://www.tensorflow.org/",
      "https://keras.io/",
      "https://docs.python.org/3/library/multiprocessing.html",
      "https://pint.readthedocs.io",
      "http://www.pytables.org/",
      "http://docs.pymc.io/",
      "#syntax-differences-between-matlab-and-python",
      "#you-will-probably-see-this-syntax",
      "#comments-start-with-in-python",
      "https://www.mathworks.com/help/matlab/matlab_prog/add-help-for-your-program.html",
      "https://www.python.org/dev/peps/pep-0257/",
      "https://docs.python.org/3/tutorial/introduction.html#strings",
      "#function-definitions-start-with-def-and-return-values-in-python",
      "#whitespace-at-the-beginning-of-a-line-is-significant-in-python",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-while-loop/",
      "#console-output-is-shown-with-print-in-python",
      "#there-is-an-official-guide-to-writing-good-code-in-python",
      "#conditional-statements-use-elif-in-python",
      "https://www.mathworks.com/help/matlab/ref/if.html",
      "https://docs.python.org/3/tutorial/controlflow.html#if-statements",
      "#calling-functions-and-indexing-sequences-use-different-brackets-in-python",
      "https://realpython.com/python-lists-tuples/",
      "#an-overview-of-basic-array-operations",
      "#the-first-index-in-a-sequence-is-0-in-python",
      "#the-last-element-of-a-sequence-has-index-1-in-python",
      "https://www.mathworks.com/help/matlab/ref/end.html",
      "#exponentiation-is-done-with-in-python",
      "https://www.mathworks.com/help/matlab/ref/mpower.html",
      "#the-length-of-a-sequence-is-found-with-len-in-python",
      "https://www.mathworks.com/help/matlab/ref/length.html",
      "#console-output-is-shown-with-print-in-python",
      "https://realpython.com/python-f-strings/",
      "https://realpython.com/python-formatted-output/",
      "https://realpython.com/python38-new-features/#simpler-debugging-with-f-strings",
      "https://realpython.com/python-print/",
      "/account/join/",
      "#you-will-probably-see-these-but-you-can-learn-them-when-you-need-to",
      "#function-definitions-start-with-def-and-return-values-in-python",
      "https://www.mathworks.com/help/matlab/ref/function.html",
      "https://realpython.com/python-return-statement/",
      "#functions-accept-positional-and-keyword-arguments-in-python",
      "https://www.mathworks.com/help/matlab/ref/nargin.html",
      "https://docs.python.org/3/tutorial/controlflow.html#keyword-arguments",
      "#there-are-no-switchcase-blocks-in-python",
      "https://www.mathworks.com/help/matlab/ref/switch.html",
      "#namespaces-are-one-honking-great-idea-in-python",
      "https://www.mathworks.com/help/matlab/matlab_prog/function-precedence-order.html",
      "https://realpython.com/python-namespaces-scope/",
      "https://realpython.com/python-square-root-function/",
      "https://realpython.com/python-modules-packages/",
      "https://docs.python.org/3/library/functions.html",
      "#the-most-recent-unassigned-result-is-available-as-_-in-python",
      "https://www.mathworks.com/help/matlab/ref/ans.html",
      "#there-are-no-private-properties-or-methods-in-python",
      "#anonymous-functions-are-created-with-the-lambda-keyword-in-python",
      "https://www.mathworks.com/help/matlab/matlab_prog/anonymous-functions.html",
      "https://www.python.org/dev/peps/pep-0008/#programming-recommendations",
      "https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.quad.html#scipy.integrate.quad",
      "https://realpython.com/python-lambda/",
      "https://realpython.com/courses/python-lambda-functions/",
      "/account/join/",
      "#you-will-only-need-these-in-specialized-situations",
      "#class-definitions-start-with-class-in-python",
      "https://www.mathworks.com/help/matlab/matlab_oop/create-a-simple-class.html",
      "https://www.mathworks.com/help/matlab/ref/classdef.html",
      "https://www.mathworks.com/help/matlab/matlab_oop/methods-in-separate-files.html",
      "https://docs.python.org/3/tutorial/classes.html",
      "#there-are-no-private-properties-or-methods-in-python",
      "https://www.mathworks.com/help/matlab/matlab_oop/method-attributes.html",
      "https://realpython.com/instance-class-and-static-methods-demystified/",
      "#the-most-recent-unassigned-result-is-available-as-_-in-python",
      "https://dbader.org/blog/python-dunder-methods",
      "https://realpython.com/oop-in-python-vs-java/",
      "#a-class-refers-to-itself-as-self-in-python",
      "https://www.mathworks.com/help/matlab/matlab_oop/ordinary-methods.html",
      "https://www.mathworks.com/help/matlab/matlab_oop/static-methods.html",
      "https://realpython.com/instance-class-and-static-methods-demystified/",
      "#there-is-one-string-type-in-python",
      "https://black.readthedocs.io/en/stable/the_black_code_style.html#strings",
      "#comments-start-with-in-python",
      "https://realpython.com/python-data-types/#strings",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-encodings-guide/",
      "https://docs.scipy.org/doc/numpy/reference/arrays.dtypes.html#index-6",
      "https://docs.scipy.org/doc/numpy/glossary.html#term-little-endian",
      "https://docs.scipy.org/doc/numpy/reference/arrays.dtypes.html#index-6",
      "#one-dimensional-arrays-are-vectors-in-numpy",
      "#libraries-are-not-automatically-reloaded-in-python",
      "https://docs.spyder-ide.org/ipythonconsole.html#using-umr-to-reload-changed-modules",
      "https://ipython.readthedocs.io/en/stable/config/extensions/autoreload.html",
      "/account/join/",
      "#an-overview-of-basic-array-operations",
      "https://docs.scipy.org/doc/numpy/user/numpy-for-matlab-users.html#array-or-matrix-which-should-i-use",
      "https://realpython.com/numpy-array-programming/",
      "#basic-mathematical-operators-work-element-wise-in-numpy",
      "/account/join/",
      "#one-dimensional-arrays-are-vectors-in-numpy",
      "/account/join/",
      "#creating-arrays-is-very-flexible-in-numpy",
      "https://docs.scipy.org/doc/numpy/user/numpy-for-matlab-users.html#table-of-rough-matlab-numpy-equivalents",
      "https://realpython.com/np-linspace-numpy/",
      "https://docs.scipy.org/doc/numpy/reference/generated/numpy.logspace.html",
      "https://docs.scipy.org/doc/numpy/reference/generated/numpy.ones.html",
      "https://docs.scipy.org/doc/numpy/reference/generated/numpy.zeros.html#numpy.zeros",
      "https://docs.scipy.org/doc/numpy/reference/routines.array-creation.html",
      "https://realpython.com/how-to-use-numpy-arange/",
      "https://www.mathworks.com/help/matlab/ref/colon.html",
      "#functions-accept-positional-and-keyword-arguments-in-python",
      "/account/join/",
      "#the-colon-operator-is-very-powerful-in-numpy",
      "#the-last-element-of-a-sequence-has-index-1-in-python",
      "/account/join/",
      "#array-slices-are-views-of-arrays-in-numpy",
      "https://blogs.mathworks.com/loren/2006/05/10/memory-management-for-functions-and-variables/",
      "https://undocumentedmatlab.com/blog/internal-matlab-memory-optimizations",
      "#tips-and-tricks-to-make-your-code-pythonic",
      "https://realpython.com/learning-paths/writing-pythonic-code/",
      "#you-should-not-use-semicolons-to-end-lines-in-python",
      "#you-should-not-import-from-a-module-in-python",
      "#namespaces-are-one-honking-great-idea-in-python",
      "#you-should-take-advantage-of-the-different-data-types-in-python",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-dicts/",
      "#lists",
      "https://realpython.com/courses/python-for-loop/",
      "https://realpython.com/python-enumerate/",
      "https://en.wikipedia.org/wiki/Off-by-one_error",
      "https://en.wikipedia.org/wiki/Off-by-one_error#Fencepost_error",
      "https://realpython.com/python-lists-tuples",
      "https://realpython.com/python-for-loop",
      "https://realpython.com/courses/using-list-comprehensions-effectively",
      "#dictionaries",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-keyerror/",
      "https://realpython.com/python-dicts",
      "https://realpython.com/python-keyerror",
      "https://realpython.com/iterate-through-dictionary-python",
      "#exceptions-help-you-control-program-flow-in-python",
      "https://realpython.com/python-exceptions/",
      "https://realpython.com/python-traceback/",
      "#nameerror",
      "#syntaxerror",
      "https://realpython.com/invalid-syntax-python/",
      "#keyerror",
      "https://realpython.com/python-dicts/#dgetltkeygt-ltdefaultgt",
      "https://realpython.com/python-keyerror/",
      "#indexerror",
      "#importerrormodulenotfounderror",
      "#typeerrorvalueerror",
      "#attributeerror",
      "#how-to-handle-exceptions-in-python",
      "https://www.mathworks.com/help/matlab/ref/try.html",
      "https://realpython.com/python-exceptions/#the-try-and-except-block-handling-exceptions",
      "#there-is-an-official-guide-to-writing-good-code-in-python",
      "https://www.python.org/dev/peps/pep-0008/",
      "https://realpython.com/python-pep8/",
      "https://realpython.com/courses/idiomatic-python-101",
      "https://realpython.com/must-watch-pycon-talks/#2-beyond-pep-8-best-practices-for-beautiful-intelligible-code",
      "https://realpython.com/python-modules-packages/",
      "https://flake8.readthedocs.io",
      "https://black.readthedocs.io/en/stable/",
      "https://github.com/google/yapf",
      "https://github.com/hhatto/autopep8",
      "#python-has-a-fantastic-and-supportive-community",
      "https://realpython.com/pycon-guide",
      "https://stackoverflow.com/questions/tagged/python",
      "https://stackoverflow.com/help/how-to-ask",
      "https://www.python.org/community/lists/",
      "https://mail.python.org/mailman/listinfo/python-list",
      "https://mail.python.org/mailman3/lists/python-dev.python.org/",
      "https://realpython.com/learning-paths/",
      "#areas-where-you-should-still-use-matlab",
      "#conclusion",
      "#further-reading",
      "https://www.youtube.com/watch?v=YkCegjtoHFQ",
      "https://www.enthought.com/wp-content/uploads/Enthought-MATLAB-to-Python-White-Paper.pdf",
      "https://tobydriscoll.net/blog/matlab-vs.-julia-vs.-python/",
      "https://phillipmfeldman.org/Python/Advantages_of_Python_Over_Matlab.html",
      "https://web.archive.org/web/20190403064043/https://www.stat.washington.edu/~hoytak/blog/whypython.html",
      "/feedback/survey/article/matlab-vs-python/liked/?from=article-footer",
      "/feedback/survey/article/matlab-vs-python/disliked/?from=article-footer"
    ]
  },
  {
    "id": 75,
    "title": "An Effective Python Environment: Making Yourself at Home",
    "url": "https://realpython.com/effective-python-environment/",
    "pub_date": "2019-08-14T14:00:00+00:00",
    "tags": [
      "basics",
      "tools"
    ],
    "description": "This guide will walk you through the decisions you need to make when customizing your development environment for working with Python.",
    "text": "Conclusion\n You learned about many facets of the typical Python environment. Armed with this knowledge, you can:When you\u2019ve got your Python environment just so, I hope you\u2019ll share screenshots, screencasts, or blog posts about your perfect setup \u2728",
    "preview": false,
    "links": [
      "#shells",
      "#unix-shells",
      "#windows-shells",
      "#terminal-emulators",
      "#macos-terminals",
      "#windows-terminals",
      "#python-version-management",
      "#pyenv",
      "#conda",
      "#virtual-environments",
      "#venv",
      "#pyenv-virtualenv",
      "#conda_1",
      "#pipenv",
      "#package-management",
      "#pip",
      "#pipenv_1",
      "#poetry",
      "#conda_2",
      "#python-interpreters",
      "#ipython",
      "#bpython",
      "#text-editors",
      "#python-environment-tips-and-tricks",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/intermediate-python-project-ideas/",
      "https://realpython.com/python-coding-setup-windows/",
      "",
      "#shells",
      "https://realpython.com/command-line-interfaces-python-argparse/#what-is-a-command-line-interface",
      "/account/join/",
      "#unix-shells",
      "https://en.wikipedia.org/wiki/Unix",
      "https://realpython.com/courses/using-terminal-linux/",
      "#bourne-shell-sh",
      "#bourne-again-shell-bash",
      "#z-shell-zsh",
      "https://ohmyz.sh",
      "https://support.apple.com/en-us/HT208050",
      "#xonsh",
      "https://xon.sh",
      "#windows-shells",
      "https://realpython.com/courses/using-terminal-windows/",
      "#cmd-cmdexe",
      "#powershell",
      "#windows-subsystem-for-linux",
      "https://docs.microsoft.com/en-us/windows/wsl/install-win10",
      "https://opensource.com/article/18/5/dual-boot-linux",
      "https://en.wikipedia.org/wiki/Comparison_of_command_shells",
      "/account/join/",
      "#terminal-emulators",
      "#macos-terminals",
      "#terminal",
      "https://support.apple.com/guide/terminal/welcome/mac",
      "https://realpython.com/courses/using-terminal-macos/",
      "#iterm2",
      "https://iterm2.com",
      "#hyper",
      "https://hyper.is/",
      "https://electronjs.org/",
      "#windows-terminals",
      "#command-prompt",
      "#cygwin",
      "#windows-terminal",
      "https://github.com/Microsoft/Terminal",
      "/account/join/",
      "#python-version-management",
      "https://realpython.com/installing-python/",
      "#pyenv",
      "https://github.com/pyenv/pyenv",
      "https://github.com/pyenv/pyenv#homebrew-on-macos",
      "https://github.com/pyenv-win/pyenv-win#installation",
      "https://realpython.com/intro-to-pyenv/",
      "https://realpython.com/python-pre-release/",
      "#conda",
      "https://www.anaconda.com/distribution/",
      "https://docs.conda.io/en/latest/miniconda.html",
      "https://realpython.com/effective-python-environment/",
      "#virtual-environments",
      "/account/join/",
      "#venv",
      "https://docs.python.org/3/library/venv.html",
      "https://virtualenv.pypa.io/en/stable/",
      "#pyenv-virtualenv",
      "https://github.com/pyenv/pyenv-virtualenv",
      "#conda_1",
      "https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html",
      "#pipenv",
      "https://docs.pipenv.org/en/latest/",
      "https://realpython.com/python-virtual-environments-a-primer",
      "/account/join/",
      "#package-management",
      "#pip",
      "https://realpython.com/courses/what-is-pip/",
      "https://realpython.com/what-is-pip/",
      "https://realpython.com/what-is-pip/",
      "#pipenv_1",
      "https://docs.pipenv.org/en/latest/",
      "https://github.com/python/black",
      "http://flake8.pycqa.org/en/latest/",
      "/account/join/",
      "#poetry",
      "https://poetry.eustace.io",
      "https://realpython.com/courses/packaging-with-pyproject-toml/",
      "https://www.python.org/dev/peps/pep-0518/#file-format",
      "#conda_2",
      "https://realpython.com/python-windows-machine-learning-setup/",
      "#python-interpreters",
      "https://realpython.com/python-repl/",
      "#ipython",
      "https://ipython.org/",
      "https://matplotlib.org/",
      "https://jupyter.org/",
      "https://ipython.readthedocs.io/en/stable/config/intro.html",
      "https://ipython.org/ipython-doc/3/interactive/tutorial.html#magic-functions",
      "/account/join/",
      "#bpython",
      "https://realpython.com/bpython-alternative-python-repl/",
      "#text-editors",
      "https://realpython.com/python-ides-code-editors-guide/",
      "https://www.vim.org/",
      "https://www.jetbrains.com/pycharm/",
      "#python-environment-tips-and-tricks",
      "https://xkcd.com/1205/",
      "https://github.com/daneah/dotfiles/blob/master/source/pystartup",
      "#conclusion",
      "/feedback/survey/article/effective-python-environment/liked/?from=article-footer",
      "/feedback/survey/article/effective-python-environment/disliked/?from=article-footer"
    ]
  },
  {
    "id": 76,
    "title": "Your Guide to the Python print() Function",
    "url": "https://realpython.com/python-print/",
    "pub_date": "2019-08-12T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn about the print() function in Python and discover some of its lesser-known features. Avoid common mistakes, take your \"hello world\" to the next level, and know when to use a better alternative.",
    "text": "Conclusion\n You\u2019re now armed with a body of knowledge about the print() function in Python, as well as many surrounding topics. You have a deep understanding of what it is and how it works, involving all of its key elements. Numerous examples gave you insight into its evolution from Python 2.Apart from that, you learned how to:Now that you know all this, you can make interactive programs that communicate with users or produce data in popular file formats. You\u2019re able to quickly diagnose problems in your code and protect yourself from them. Last but not least, you know how to implement the classic snake game.If you\u2019re still thirsty for more information, have questions, or simply would like to share your thoughts, then feel free to reach out in the comments section below.",
    "preview": false,
    "links": [
      "#printing-in-a-nutshell",
      "#calling-print",
      "#separating-multiple-arguments",
      "#preventing-line-breaks",
      "#printing-to-a-file",
      "#buffering-print-calls",
      "#printing-custom-data-types",
      "#understanding-python-print",
      "#print-is-a-function-in-python-3",
      "#print-was-a-statement-in-python-2",
      "#printing-with-style",
      "#pretty-printing-nested-data-structures",
      "#adding-colors-with-ansi-escape-sequences",
      "#building-console-user-interfaces",
      "#living-it-up-with-cool-animations",
      "#making-sounds-with-print",
      "#mocking-python-print-in-unit-tests",
      "#print-debugging",
      "#tracing",
      "#logging",
      "#debugging",
      "#thread-safe-printing",
      "#python-print-counterparts",
      "#built-in",
      "#third-party",
      "#conclusion",
      "/account/join/",
      "/courses/python-print/",
      "https://realpython.com/python-beginner-tips/",
      "",
      "#printing-in-a-nutshell",
      "/account/join/",
      "#calling-print",
      "https://realpython.com/lessons/example-function/",
      "https://realpython.com/python-strings/",
      "https://www.python.org/dev/peps/pep-0008/#string-quotes",
      "https://realpython.com/python-variables/",
      "https://realpython.com/lessons/concatenating-joining-strings-python/",
      "https://realpython.com/python-f-strings/",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/courses/python-exceptions-101/",
      "https://realpython.com/python-traceback/",
      "https://realpython.com/python-data-types/",
      "https://realpython.com/null-in-python/",
      "#understanding-python-print",
      "https://realpython.com/python-lists-tuples/#python-tuples",
      "/account/join/",
      "#separating-multiple-arguments",
      "https://docs.python.org/dev/tutorial/controlflow.html#arbitrary-argument-lists",
      "https://realpython.com/courses/reading-and-writing-csv-files/",
      "/account/join/",
      "#preventing-line-breaks",
      "https://realpython.com/oop-in-python-vs-java/",
      "https://realpython.com/read-write-files-python/",
      "/account/join/",
      "#printing-to-a-file",
      "https://realpython.com/run-python-scripts/",
      "https://files.realpython.com/media/pycharm-console-streams.69affb3462e4.png",
      "https://realpython.com/working-with-files-in-python/",
      "https://realpython.com/read-write-files-python",
      "https://realpython.com/python-encodings-guide/",
      "https://www.python.org/dev/peps/pep-0263/",
      "/account/join/",
      "#buffering-print-calls",
      "https://files.realpython.com/media/print_countdown.ba38eb242915.gif",
      "https://realpython.com/python-flush-print-output/",
      "#printing-custom-data-types",
      "https://realpython.com/python-namedtuple/",
      "https://realpython.com/inheritance-composition-python/",
      "https://realpython.com/python-pass/",
      "https://realpython.com/python-ellipsis/",
      "https://realpython.com/python-data-classes/",
      "https://www.python.org/dev/peps/pep-0526/",
      "https://realpython.com/python-eval-function/",
      "/account/join/",
      "#understanding-python-print",
      "#print-is-a-function-in-python-3",
      "#mocking-python-print-in-unit-tests",
      "https://realpython.com/lessons/functions-first-class-objects-python/",
      "https://realpython.com/lessons/functions-are-first-class-citizens-python/",
      "https://stackoverflow.com/a/1638961",
      "https://realpython.com/python-functional-programming/",
      "https://pymotw.com/3/functools/",
      "https://realpython.com/python-lambda/",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-conditional-statements/#conditional-expressions-pythons-ternary-operator",
      "/account/join/",
      "#print-was-a-statement-in-python-2",
      "https://realpython.com/python38-new-features/",
      "https://www.python.org/dev/peps/pep-0572/",
      "#printing-in-a-nutshell",
      "/account/join/",
      "#printing-with-style",
      "#pretty-printing-nested-data-structures",
      "https://realpython.com/interacting-with-python/",
      "https://realpython.com/jupyter-notebook-introduction/",
      "https://pypi.org/",
      "https://realpython.com/python-json/",
      "/account/join/",
      "#adding-colors-with-ansi-escape-sequences",
      "https://en.wikipedia.org/wiki/ANSI_escape_code",
      "https://pypi.org/project/colorama/",
      "https://files.realpython.com/media/ansi.21ed85878eb9.png",
      "/account/join/",
      "#building-console-user-interfaces",
      "https://docs.python.org/3/howto/curses.html",
      "https://files.realpython.com/media/snake.a9589582b58a.gif",
      "https://realpython.com/python-zip-function/",
      "https://realpython.com/python-map-function/",
      "#living-it-up-with-cool-animations",
      "https://files.realpython.com/media/spinning_wheel.c595af6f83ea.gif",
      "https://files.realpython.com/media/progress.6bd055d8dcc4.gif",
      "https://pypi.org/project/progressbar2/",
      "#making-sounds-with-print",
      "https://en.wikipedia.org/wiki/Bell_character",
      "#mocking-python-print-in-unit-tests",
      "https://realpython.com/python-testing/",
      "https://realpython.com/python-code-quality/#linters",
      "https://realpython.com/python-type-checking/",
      "https://realpython.com/python-mock-library/",
      "https://martinfowler.com/bliki/TestDouble.html",
      "https://realpython.com/python-assert-statement/",
      "https://en.wikipedia.org/wiki/Monkey_patch",
      "https://realpython.com/primer-on-python-decorators/",
      "#print-debugging",
      "https://en.wikipedia.org/wiki/Debugging#Origin_of_the_term",
      "#tracing",
      "https://realpython.com/python-rounding/",
      "https://realpython.com/courses/logging-python/",
      "#logging",
      "https://realpython.com/python-logging/",
      "#debugging",
      "https://realpython.com/python-debugging-pdb/",
      "https://realpython.com/python37-new-features/#the-breakpoint-built-in",
      "https://www.jetbrains.com/pycharm/",
      "https://realpython.com/python-ides-code-editors-guide/",
      "https://en.wikipedia.org/wiki/Race_condition",
      "https://en.wikipedia.org/wiki/Uncertainty_principle",
      "#thread-safe-printing",
      "https://realpython.com/intro-to-python-threading/",
      "https://realpython.com/python-gil/",
      "#python-print-counterparts",
      "#built-in",
      "#third-party",
      "https://realpython.com/python-modules-packages/",
      "https://pythonbytes.fm/",
      "https://github.com/Mckinsey666/bullet",
      "https://pypi.org/project/cooked-input/",
      "https://pypi.org/project/prompt_toolkit/",
      "https://github.com/kylebebak/questionnaire",
      "#conclusion",
      "/feedback/survey/article/python-print/liked/?from=article-footer",
      "/feedback/survey/article/python-print/disliked/?from=article-footer",
      "/courses/python-print/"
    ]
  },
  {
    "id": 77,
    "title": "Understanding the Python Traceback",
    "url": "https://realpython.com/python-traceback/",
    "pub_date": "2019-07-29T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn how to read and understand the information you can get from a Python traceback. You'll walk through several examples of tracebacks and see some of the most common tracebacks in Python.",
    "text": "Conclusion\n The Python traceback contains great information that can help you find what is going wrong in your Python code. These tracebacks can look a little intimidating, but once you break it down to see what it\u2019s trying to show you, they can be super helpful. Going through a few tracebacks line by line will give you a better understanding of the information they contain and help you get the most out of them.Getting a Python traceback output when you run your code is an opportunity to improve your code. It\u2019s one way Python tries to help you out.Now that you know how to read a Python traceback, you can benefit from learning more about some tools and techniques for diagnosing the problems that your traceback output is telling you about. Python\u2019s built-in traceback module can be used to work with and inspect tracebacks. The traceback module can be helpful when you need to get more out of the traceback output. It would also be helpful to learn more about some techniques for debugging your Python code and ways to debug in IDLE.",
    "preview": false,
    "links": [
      "#what-is-a-python-traceback",
      "#how-do-you-read-a-python-traceback",
      "#python-traceback-overview",
      "#specific-traceback-walkthrough",
      "#what-are-some-common-tracebacks-in-python",
      "#attributeerror",
      "#importerror",
      "#indexerror",
      "#keyerror",
      "#nameerror",
      "#syntaxerror",
      "#typeerror",
      "#valueerror",
      "#how-do-you-log-a-traceback",
      "#conclusion",
      "/account/join/",
      "/courses/python-traceback/",
      "",
      "#what-is-a-python-traceback",
      "https://realpython.com/python-variables/",
      "https://realpython.com/python-print/",
      "https://realpython.com/python-exceptions/",
      "/account/join/",
      "#how-do-you-read-a-python-traceback",
      "#python-traceback-overview",
      "https://files.realpython.com/media/python_traceback_2.b27a4eb060a8.png",
      "https://realpython.com/python-repl/",
      "#specific-traceback-walkthrough",
      "https://realpython.com/courses/python-print/",
      "/account/join/",
      "#what-are-some-common-tracebacks-in-python",
      "#attributeerror",
      "https://docs.python.org/3/library/exceptions.html#AttributeError",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-append/",
      "https://realpython.com/null-in-python/",
      "#importerror",
      "https://realpython.com/absolute-vs-relative-python-imports/",
      "https://realpython.com/python-import/",
      "https://docs.python.org/3/library/exceptions.html#ImportError",
      "#indexerror",
      "https://realpython.com/python-lists-tuples/",
      "https://docs.python.org/3/library/exceptions.html#IndexError",
      "/account/join/",
      "#keyerror",
      "https://realpython.com/python-dicts/",
      "https://docs.python.org/3/library/exceptions.html#KeyError",
      "https://realpython.com/python-keyerror/",
      "#nameerror",
      "https://docs.python.org/3/library/exceptions.html#NameError",
      "#syntaxerror",
      "https://realpython.com/invalid-syntax-python/",
      "https://docs.python.org/3/library/exceptions.html#SyntaxError",
      "/account/join/",
      "#typeerror",
      "https://docs.python.org/3/library/exceptions.html#TypeError",
      "#valueerror",
      "https://docs.python.org/3/library/exceptions.html#ValueError",
      "#how-do-you-log-a-traceback",
      "https://2.python-requests.org/en/master/",
      "https://realpython.com/python-requests/",
      "https://realpython.com/python-command-line-arguments/",
      "https://realpython.com/python-exceptions/#the-try-and-except-block-handling-exceptions",
      "https://realpython.com/python-exceptions/#the-else-clause",
      "https://realpython.com/python-logging/",
      "https://realpython.com/python-logging-source-code/",
      "/account/join/",
      "#conclusion",
      "https://docs.python.org/3.7/library/traceback.html",
      "https://realpython.com/search?q=debugging",
      "https://realpython.com/python-debug-idle/",
      "/feedback/survey/article/python-traceback/liked/?from=article-footer",
      "/feedback/survey/article/python-traceback/disliked/?from=article-footer",
      "/courses/python-traceback/"
    ]
  },
  {
    "id": 78,
    "title": "The Python Square Root Function",
    "url": "https://realpython.com/python-square-root-function/",
    "pub_date": "2019-07-08T14:00:00+00:00",
    "tags": [
      "basics"
    ],
    "description": "In this quick and practical tutorial, you'll learn what a square root is and how to calculate one in Python. You'll even see how you can use the Python square root function to solve a real-world problem.",
    "text": "Conclusion\n Congratulations! You now know all about the Python square root function.You\u2019ve covered:Knowing how to use sqrt() is only half the battle. Understanding when to use it is the other. Now, you know both, so go and apply your newfound mastery of the Python square root function!",
    "preview": false,
    "links": [
      "#square-roots-in-mathematics",
      "#the-python-square-root-function",
      "#the-square-root-of-a-positive-number",
      "#the-square-root-of-zero",
      "#the-square-root-of-negative-numbers",
      "#square-roots-in-the-real-world",
      "#conclusion",
      "/account/join/",
      "/courses/square-root-function-python/",
      "",
      "#square-roots-in-mathematics",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/interacting-with-python/#using-the-python-interpreter-interactively",
      "/account/join/",
      "#the-python-square-root-function",
      "https://realpython.com/python-math-module/",
      "https://docs.python.org/3/library/math.html#math.sqrt",
      "https://realpython.com/absolute-vs-relative-python-imports/",
      "https://realpython.com/python-data-types/#floating-point-numbers",
      "#the-square-root-of-a-positive-number",
      "https://realpython.com/python-data-types/#integers",
      "https://realpython.com/python-data-types/#floating-point-numbers",
      "#the-square-root-of-zero",
      "https://realpython.com/python-variables/",
      "/account/join/",
      "#the-square-root-of-negative-numbers",
      "https://en.wikipedia.org/wiki/Real_number",
      "https://en.wikipedia.org/wiki/Complex_number",
      "#square-roots-in-the-real-world",
      "https://en.wikipedia.org/wiki/Rafael_Nadal",
      "https://en.wikipedia.org/wiki/Tennis_court",
      "https://files.realpython.com/media/untitled.b0437a7fab5e.png",
      "https://files.realpython.com/media/untitled_1.9226ba6799b4.png",
      "https://en.wikipedia.org/wiki/Tennis_court#/media/File:Tennis_court_imperial.svg",
      "https://files.realpython.com/media/Tennis_Court_1.12dcfe313971.png",
      "https://en.wikipedia.org/wiki/Pythagorean_theorem",
      "https://files.realpython.com/media/pythagorean_theorem_solve.1176a7b846c3.png",
      "#conclusion",
      "/feedback/survey/article/python-square-root-function/liked/?from=article-footer",
      "/feedback/survey/article/python-square-root-function/disliked/?from=article-footer",
      "/courses/square-root-function-python/"
    ]
  },
  {
    "id": 79,
    "title": "Using the \"or\" Boolean Operator in Python",
    "url": "https://realpython.com/python-or-operator/",
    "pub_date": "2019-07-03T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you'll learn how the Python \"or\" operator works and how to use it. You'll get to know its special features and see what kind of programming problems you can solve by using \"or\" in Python.",
    "text": "Conclusion\n You now know how the Python or operator works as well as how to use it for solving some common programming problems in Python. Now that you know the basics of the Python or operator, you\u2019ll be able to:Use the Python or operator in Boolean and non-Boolean contextsSolve several kind of programming problems by effectively using the Python or operatorWrite better and more Pythonic code by taking advantage of the somewhat special features of or in PythonRead and better understand other people\u2019s code when they make use of the Python or operatorIn addition, you\u2019ve learned a little bit about Boolean logic, as well as some of its main concepts in Python.",
    "preview": false,
    "links": [
      "#boolean-logic",
      "#the-python-boolean-operators",
      "#how-the-python-or-operator-works",
      "#using-or-with-boolean-expressions",
      "#using-or-with-common-objects",
      "#mixing-boolean-expressions-and-objects",
      "#short-circuit-evaluation",
      "#section-recap",
      "#boolean-contexts",
      "#if-statements",
      "#while-loops",
      "#non-boolean-contexts",
      "#default-values-for-variables",
      "#default-return-values",
      "#mutable-default-arguments",
      "#zero-division",
      "#multiple-expressions-in-lambda",
      "#conclusion",
      "/account/join/",
      "/courses/using-python-or-operator/",
      "https://realpython.com/bonus/python-tricks-sample-pdf/",
      "#boolean-logic",
      "https://en.wikipedia.org/wiki/George_Boole",
      "https://en.wikipedia.org/wiki/Boolean_algebra",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-variables/",
      "/account/join/",
      "#the-python-boolean-operators",
      "https://realpython.com/python-and-operator/",
      "https://realpython.com/python-keywords/#the-or-keyword",
      "https://realpython.com/python-not-operator/",
      "#how-the-python-or-operator-works",
      "#using-or-with-boolean-expressions",
      "/account/join/",
      "#using-or-with-common-objects",
      "https://docs.python.org/3/reference/datamodel.html#object.__bool__",
      "https://docs.python.org/3/reference/datamodel.html#object.__len__",
      "https://docs.python.org/3/library/stdtypes.html#truth-value-testing",
      "#mixing-boolean-expressions-and-objects",
      "/account/join/",
      "#short-circuit-evaluation",
      "#section-recap",
      "#boolean-contexts",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-while-loop/",
      "/account/join/",
      "#if-statements",
      "https://realpython.com/python-input-output/",
      "#while-loops",
      "https://realpython.com/python-time-module/#suspending-execution",
      "https://realpython.com/python-f-strings/",
      "#non-boolean-contexts",
      "https://realpython.com/python-assignment-operator/",
      "/account/join/",
      "#default-values-for-variables",
      "https://realpython.com/null-in-python/",
      "#default-return-values",
      "https://realpython.com/python-min-and-max/",
      "https://realpython.com/courses/introduction-python-exceptions/",
      "#mutable-default-arguments",
      "/account/join/",
      "#zero-division",
      "#multiple-expressions-in-lambda",
      "https://realpython.com/python-lambda/",
      "https://realpython.com/python-print/",
      "#conclusion",
      "/feedback/survey/article/python-or-operator/liked/?from=article-footer",
      "/feedback/survey/article/python-or-operator/disliked/?from=article-footer",
      "/courses/using-python-or-operator/"
    ]
  },
  {
    "id": 80,
    "title": "Basic Input, Output, and String Formatting in Python",
    "url": "https://realpython.com/python-input-output/",
    "pub_date": "2019-06-24T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step Python tutorial, you'll learn how to take user input from the keyboard with the built-in function input(), how to display output to the console with the built-in function print(), and how to format string data with Python f-strings.",
    "text": "Python Input and Output: Conclusion\n In this tutorial, you learned about input and output in Python and how your Python program can communicate with the user. You\u2019ve also explored some of the arguments you can work with to add a message to the input prompt or customize how Python displays the output back to your users.You\u2019ve learned how to: In the following tutorial of this introductory series, you\u2019ll learn about another string formatting technique, and you\u2019ll dive deeper into using f-strings.",
    "preview": false,
    "links": [
      "#reading-input-from-the-keyboard",
      "#writing-output-to-the-console",
      "#printing-with-advanced-features",
      "#separating-printed-values",
      "#controlling-the-newline-character",
      "#sending-output-to-a-stream",
      "#using-formatted-strings",
      "#python-input-and-output-conclusion",
      "/account/join/",
      "/courses/reading-input-writing-output-python/",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-for-loop/",
      "",
      "#reading-input-from-the-keyboard",
      "https://docs.python.org/3/library/functions.html#input",
      "https://docs.python.org/3/library/functions.html#input",
      "https://realpython.com/python-strings/",
      "https://realpython.com/convert-python-string-to-int/",
      "https://realpython.com/python-print/",
      "https://realpython.com/python-eval-function/",
      "/account/join/",
      "#writing-output-to-the-console",
      "https://docs.python.org/3/library/functions.html#print",
      "https://docs.python.org/3/library/functions.html#print",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/defining-your-own-python-function/",
      "#printing-with-advanced-features",
      "https://realpython.com/defining-your-own-python-function/",
      "#separating-printed-values",
      "/account/join/",
      "#controlling-the-newline-character",
      "#sending-output-to-a-stream",
      "https://realpython.com/python-flush-print-output/",
      "#using-formatted-strings",
      "https://realpython.com/python-print/",
      "https://realpython.com/python-f-strings/#f-strings-a-new-and-improved-way-to-format-strings-in-python",
      "https://realpython.com/python-string-formatting/",
      "https://realpython.com/python-f-strings/",
      "https://realpython.com/python-formatted-output/",
      "https://realpython.com/python-f-strings/",
      "/account/join/",
      "#python-input-and-output-conclusion",
      "https://realpython.com/python-for-loop/",
      "#",
      "https://realpython.com/python-formatted-output/",
      "/feedback/survey/article/python-input-output/liked/?from=article-footer",
      "/feedback/survey/article/python-input-output/disliked/?from=article-footer",
      "/courses/reading-input-writing-output-python/"
    ]
  },
  {
    "id": 81,
    "title": "How to Implement a Python Stack",
    "url": "https://realpython.com/how-to-implement-python-stack/",
    "pub_date": "2019-06-05T14:00:00+00:00",
    "tags": [
      "basics"
    ],
    "description": "In this tutorial, you'll learn how to implement a Python stack. You'll see how to recognize when a stack is a good choice for data structures, how to decide which implementation is best for a program, and what extra considerations to make about stacks in a threading or multiprocessing environment.",
    "text": "Conclusion\n You now know what a stack is and have seen situations where they can be used in real-life programs. You\u2019ve evaluated three different options for implementing stacks and seen that deque is a great choice for non-threaded programs. If you\u2019re implementing a stack in a threading environment, then it\u2019s likely a good idea to use a LifoQueue.You are now able to:If you still have questions, feel free to reach out in the comments sections below. Now, go write some code since you gained another tool to help you solve your programming problems!",
    "preview": false,
    "links": [
      "#what-is-a-stack",
      "#implementing-a-python-stack",
      "#using-list-to-create-a-python-stack",
      "#using-collectionsdeque-to-create-a-python-stack",
      "#python-stacks-and-threading",
      "#python-stacks-which-implementation-should-you-use",
      "#conclusion",
      "/account/join/",
      "/courses/python-stack/",
      "https://realpython.com/python-lists-tuples/",
      "",
      "#what-is-a-stack",
      "https://realpython.com/queue-in-python/#stack-last-in-first-out-lifo",
      "https://realpython.com/python-data-structures/",
      "https://realpython.com/queue-in-python/#queue-first-in-first-out-fifo",
      "https://files.realpython.com/media/stack_push_add_function.b406cffbe2dd.png",
      "https://files.realpython.com/media/stack_push_delete_word.6a64fed15fde.png",
      "https://files.realpython.com/media/stack_push_indent.01223b7d94a7.png",
      "https://files.realpython.com/media/stack_pop_indent.e28029c81831.png",
      "https://files.realpython.com/media/stack_pop_delete_word.89f14f6ed390.png",
      "https://files.realpython.com/media/stack_pop_add_function.a4f66332971a.png",
      "/account/join/",
      "#implementing-a-python-stack",
      "#using-list-to-create-a-python-stack",
      "https://realpython.com/python-append/",
      "#using-collectionsdeque-to-create-a-python-stack",
      "https://docs.python.org/3/library/collections.html#collections.deque",
      "https://realpython.com/queue-in-python/#deque-double-ended-queue",
      "#why-have-deque-and-list",
      "https://files.realpython.com/media/stack_list_memory_usage.bf57ab8fa608.png",
      "https://files.realpython.com/media/stack_list_memory_push.8ad17a48f40a.png",
      "https://realpython.com/linked-lists-python/",
      "https://files.realpython.com/media/stack_deque_memory.e414da68dce1.png",
      "/account/join/",
      "#python-stacks-and-threading",
      "https://realpython.com/intro-to-python-threading/",
      "https://docs.python.org/3/library/queue.html",
      "https://en.wikipedia.org/wiki/Program_optimization#When_to_optimize",
      "#python-stacks-which-implementation-should-you-use",
      "/account/join/",
      "#conclusion",
      "/feedback/survey/article/how-to-implement-python-stack/liked/?from=article-footer",
      "/feedback/survey/article/how-to-implement-python-stack/disliked/?from=article-footer",
      "/courses/python-stack/"
    ]
  },
  {
    "id": 82,
    "title": "Playing and Recording Sound in Python",
    "url": "https://realpython.com/playing-and-recording-sound-python/",
    "pub_date": "2019-05-13T14:00:00+00:00",
    "tags": [
      "basics"
    ],
    "description": "In this tutorial, you'll learn about libraries that can be used for playing and recording sound in Python, such as PyAudio and python-sounddevice. You'll also see code snippets for playing and recording sound files and arrays, as well as for converting between different sound file formats.",
    "text": "Conclusion: Playing and Recording Sound in Python\n In this tutorial, you learned how to use some of the most popular audio libraries to play and record audio in Python. You also saw how to save your audio in a range of different formats.You are now able to:You now have the information you need to help you decide which libraries to use to start working with audio in Python. Go forth, and develop some awesome audio applications!",
    "preview": false,
    "links": [
      "#playing-audio-files",
      "#playsound",
      "#simpleaudio",
      "#winsound",
      "#python-sounddevice",
      "#pydub",
      "#pyaudio",
      "#recording-audio",
      "#python-sounddevice_1",
      "#pyaudio_1",
      "#saving-and-converting-audio",
      "#wavio",
      "#soundfile",
      "#pydub_1",
      "#comparison-of-audio-libraries",
      "#conclusion-playing-and-recording-sound-in-python",
      "/account/join/",
      "/courses/playing-and-recording-sound-python/",
      "https://wiki.python.org/moin/Audio/",
      "https://realpython.com/bonus/python-tricks-sample-pdf/",
      "#playing-audio-files",
      "/account/join/",
      "#playsound",
      "https://pypi.org/project/playsound/",
      "https://pypi.org/project/playsound/",
      "https://pypi.org/project/playsound/",
      "#simpleaudio",
      "https://simpleaudio.readthedocs.io/en/latest/",
      "https://realpython.com/courses/managing-python-dependencies/",
      "https://realpython.com/tutorials/numpy/",
      "https://realpython.com/pipenv-guide/",
      "#winsound",
      "https://docs.python.org/3.6/library/winsound.html",
      "/account/join/",
      "#python-sounddevice",
      "https://python-sounddevice.readthedocs.io/en/latest/",
      "#pydub",
      "https://www.github.com/jiaaro/pydub",
      "https://www.ffmpeg.org/download.html",
      "https://libav.org/download/",
      "https://github.com/jiaaro/pydub#getting-ffmpeg-set-up",
      "https://github.com/kkroening/ffmpeg-python",
      "http://www.ffmpeg.org/general.html#File-Formats",
      "https://github.com/jiaaro/pydub/blob/master/API.markdown",
      "#pyaudio",
      "https://people.csail.mit.edu/hubert/pyaudio/",
      "/account/join/",
      "#recording-audio",
      "https://python-sounddevice.readthedocs.io/en/latest/",
      "https://people.csail.mit.edu/hubert/pyaudio/",
      "#python-sounddevice_1",
      "https://python-sounddevice.readthedocs.io/en/latest/",
      "https://docs.scipy.org/doc/scipy/reference/generated/scipy.io.wavfile.write.html",
      "#pyaudio_1",
      "#pyaudio",
      "https://people.csail.mit.edu/hubert/pyaudio/docs/#class-stream",
      "#saving-and-converting-audio",
      "#python-sounddevice",
      "https://pypi.org/project/wavio/",
      "https://github.com/jiaaro/pydub",
      "https://pypi.org/project/SoundFile/",
      "#wavio",
      "#soundfile",
      "https://pypi.org/project/SoundFile/",
      "http://www.mega-nerd.com/libsndfile/#Features",
      "/account/join/",
      "#pydub_1",
      "https://github.com/jiaaro/pydub",
      "https://www.ffmpeg.org/general.html#File-Formats",
      "https://www.ffmpeg.org/general.html#File-Formats",
      "#comparison-of-audio-libraries",
      "https://pypi.org/project/playsound/",
      "https://simpleaudio.readthedocs.io/en/latest/",
      "https://docs.python.org/3.6/library/winsound.html",
      "https://python-sounddevice.readthedocs.io/en/latest/",
      "[pydub](https://github.com/jiaaro/pydub)",
      "http://www.ffmpeg.org/general.html#File-Formats",
      "http://www.ffmpeg.org/general.html#File-Formats",
      "https://people.csail.mit.edu/hubert/pyaudio/",
      "https://pypi.org/project/wavio/",
      "https://pypi.org/project/SoundFile/",
      "http://www.mega-nerd.com/libsndfile/#Features",
      "https://wiki.python.org/moin/Audio/",
      "#conclusion-playing-and-recording-sound-in-python",
      "/feedback/survey/article/playing-and-recording-sound-python/liked/?from=article-footer",
      "/feedback/survey/article/playing-and-recording-sound-python/disliked/?from=article-footer",
      "/courses/playing-and-recording-sound-python/"
    ]
  },
  {
    "id": 83,
    "title": "How to Use sorted() and sort() in Python",
    "url": "https://realpython.com/python-sort/",
    "pub_date": "2019-05-06T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you\u2019ll learn how to sort in Python. You'll know how to sort various types of data in different data structures, customize the order, and work with two different ways of sorting in Python.",
    "text": "How to Sort in Python: Conclusion\n .sort() and sorted() can provide exactly the sort order you need if you use them properly with both the reverse and key optional keyword arguments. Both have very different characteristics when it comes to output and in-place modifications, so make sure you think through any application functionality or program that will be using .sort() as it can irrevocably overwrite data. For the avid Pythonistas looking for a challenge with sorting, try using more complex data types in sorting: nested iterables. Also, feel free to dive into the open source Python code implementations for the built-ins and read about the sort algorithm used in Python called Timsort. And if you\u2019re looking to sort dictionaries, then check out Sorting a Python Dictionary: Values, Keys, and More.",
    "preview": false,
    "links": [
      "#ordering-values-with-sorted",
      "#sorting-numbers",
      "#sorting-strings",
      "#limitations-and-gotchas-with-python-sorting",
      "#lists-with-non-comparable-data-types-cant-be-sorted",
      "#when-youre-sorting-strings-case-matters",
      "#using-sorted-with-a-reverse-argument",
      "#sorted-with-a-key-argument",
      "#ordering-values-with-sort",
      "#when-to-use-sorted-and-when-to-use-sort",
      "#how-to-sort-in-python-conclusion",
      "/account/join/",
      "/courses/python-sorting-data/",
      "https://realpython.com/python-data-structures/",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-sets/",
      "https://realpython.com/bonus/python-tricks-sample-pdf/",
      "#ordering-values-with-sorted",
      "https://realpython.com/python-strings/",
      "/account/join/",
      "#sorting-numbers",
      "https://realpython.com/python-variables/",
      "https://realpython.com/python-assignment-operator/",
      "#sorting-strings",
      "/account/join/",
      "#limitations-and-gotchas-with-python-sorting",
      "#lists-with-non-comparable-data-types-cant-be-sorted",
      "https://realpython.com/null-in-python/",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/list-comprehension-python/",
      "https://realpython.com/convert-python-string-to-int/",
      "https://realpython.com/python-boolean/",
      "#when-youre-sorting-strings-case-matters",
      "https://en.wikipedia.org/wiki/Code_point",
      "/account/join/",
      "#using-sorted-with-a-reverse-argument",
      "#sorted-with-a-key-argument",
      "https://realpython.com/lessons/example-function/",
      "https://realpython.com/python-lambda/",
      "https://docs.python.org/3/reference/simple_stmts.html",
      "https://realpython.com/python-namedtuple/",
      "/account/join/",
      "#ordering-values-with-sort",
      "#when-to-use-sorted-and-when-to-use-sort",
      "/account/join/",
      "#how-to-sort-in-python-conclusion",
      "https://en.wikipedia.org/wiki/Timsort",
      "https://realpython.com/sort-python-dictionary/",
      "/feedback/survey/article/python-sort/liked/?from=article-footer",
      "/feedback/survey/article/python-sort/disliked/?from=article-footer",
      "/courses/python-sorting-data/"
    ]
  },
  {
    "id": 84,
    "title": "Python KeyError Exceptions and How to Handle Them",
    "url": "https://realpython.com/python-keyerror/",
    "pub_date": "2019-04-24T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn how to handle Python KeyError exceptions. They are often caused by a bad key lookup in a dictionary, but there are a few other situations when a KeyError can be raised as well. Knowing how to handle these exceptions is essential to writing good Python code.",
    "text": "Conclusion\n You now know some common places where Python\u2019s KeyError exception could be raised and some great solutions you could use to prevent them from stopping your program.Now, the next time you see a KeyError raised, you will know that it is probably just a bad dictionary key lookup. You will also be able to find all the information you need to determine where the error is coming from by looking at the last few lines of the traceback.If the problem is a dictionary key lookup in your own code, then you can switch from accessing the key directly on the dictionary to using the safer .get() method with a default return value. If the problem isn\u2019t coming from your own code, then using the try except block is your best bet for controlling your code\u2019s flow.Exceptions don\u2019t have to be scary. Once you know how to understand the information provided to you in their tracebacks and the root cause of the exception, then you can use these solutions to make your programs flow more predictably.",
    "preview": false,
    "links": [
      "#what-a-python-keyerror-usually-means",
      "#where-else-you-might-see-a-python-keyerror-in-the-standard-library",
      "#when-you-need-to-raise-a-python-keyerror-in-your-own-code",
      "#how-to-handle-a-python-keyerror-when-you-see-it",
      "#the-usual-solution-get",
      "#the-rare-solution-checking-for-keys",
      "#the-general-solution-try-except",
      "#conclusion",
      "/account/join/",
      "/courses/python-keyerror/",
      "",
      "#what-a-python-keyerror-usually-means",
      "https://realpython.com/python-exceptions/",
      "https://realpython.com/python-dicts/",
      "https://docs.python.org/3/library/exceptions.html#KeyError",
      "https://docs.python.org/3/library/exceptions.html#LookupError",
      "https://realpython.com/python-traceback/",
      "https://realpython.com/courses/python-traceback/",
      "https://realpython.com/python-f-strings/",
      "/account/join/",
      "#where-else-you-might-see-a-python-keyerror-in-the-standard-library",
      "https://realpython.com/python-zipfile/",
      "#when-you-need-to-raise-a-python-keyerror-in-your-own-code",
      "https://realpython.com/python-exceptions/#raising-an-exception",
      "https://realpython.com/python-keywords/",
      "#how-to-handle-a-python-keyerror-when-you-see-it",
      "#the-usual-solution-get",
      "https://realpython.com/python-variables/",
      "https://realpython.com/null-in-python/",
      "/account/join/",
      "#the-rare-solution-checking-for-keys",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-api/",
      "#the-general-solution-try-except",
      "#conclusion",
      "/feedback/survey/article/python-keyerror/liked/?from=article-footer",
      "/feedback/survey/article/python-keyerror/disliked/?from=article-footer",
      "/courses/python-keyerror/"
    ]
  },
  {
    "id": 85,
    "title": "How to Run Your Python Scripts",
    "url": "https://realpython.com/run-python-scripts/",
    "pub_date": "2019-02-18T06:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "This step-by-step tutorial will guide you through a series of ways to run Python scripts, depending on your environment, platform, needs, and skills as a programmer.",
    "text": "Conclusion\n With the reading of this tutorial, you have acquired the knowledge and skills you need to be able to run Python scripts and code in several ways and in a variety of situations and development environments.You are now able to run Python scripts from:These skills will make your development process much faster, as well as more productive and flexible. Take the Quiz: Test your knowledge with our interactive \u201cHow to Run Your Python Scripts\u201d quiz. Upon completion you will receive a score so you can track your learning progress over time:",
    "preview": false,
    "links": [
      "#scripts-vs-modules",
      "#whats-the-python-interpreter",
      "#how-to-run-python-code-interactively",
      "#how-does-the-interpreter-run-python-scripts",
      "#how-to-run-python-scripts-using-the-command-line",
      "#using-the-python-command",
      "#redirecting-the-output",
      "#running-modules-with-the-m-option",
      "#using-the-script-filename",
      "#how-to-run-python-scripts-interactively",
      "#taking-advantage-of-import",
      "#using-importlib-and-imp",
      "#using-runpyrun_module-and-runpyrun_path",
      "#hacking-exec",
      "#using-execfile-python-2x-only",
      "#how-to-run-python-scripts-from-an-ide-or-a-text-editor",
      "#how-to-run-python-scripts-from-a-file-manager",
      "#conclusion",
      "/account/join/",
      "/courses/running-python-scripts/",
      "https://realpython.com/bonus/python-tricks-sample-pdf/",
      "/quizzes/run-python-scripts/",
      "#scripts-vs-modules",
      "https://realpython.com/python-modules-packages/",
      "/account/join/",
      "#whats-the-python-interpreter",
      "https://realpython.com/what-can-i-do-with-python/",
      "https://realpython.com/c-for-python-programmers/",
      "https://www.python.org/about/",
      "https://realpython.com/oop-in-python-vs-java/",
      "http://www.jython.org/index.html",
      "https://realpython.com/pypy-faster-python/",
      "http://ironpython.net/",
      "https://realpython.com/installing-python/",
      "#how-to-run-python-code-interactively",
      "/account/join/",
      "#how-does-the-interpreter-run-python-scripts",
      "#how-to-run-python-scripts-using-the-command-line",
      "https://realpython.com/products/sublime-python/",
      "#using-the-python-command",
      "https://realpython.com/add-python-to-path/",
      "#redirecting-the-output",
      "/account/join/",
      "#running-modules-with-the-m-option",
      "#using-the-script-filename",
      "/account/join/",
      "#how-to-run-python-scripts-interactively",
      "#taking-advantage-of-import",
      "https://realpython.com/absolute-vs-relative-python-imports/",
      "https://realpython.com/absolute-vs-relative-python-imports/",
      "https://realpython.com/python-modules-packages/#the-module-search-path",
      "#using-importlib-and-imp",
      "https://docs.python.org/3/library/index.html",
      "https://docs.python.org/3/library/importlib.html",
      "/account/join/",
      "#using-runpyrun_module-and-runpyrun_path",
      "https://docs.python.org/3/library/runpy.html",
      "https://realpython.com/python-namespaces-scope/",
      "#hacking-exec",
      "https://realpython.com/python-exec/",
      "#using-execfile-python-2x-only",
      "/account/join/",
      "#how-to-run-python-scripts-from-an-ide-or-a-text-editor",
      "https://realpython.com/python-ides-code-editors-guide/",
      "https://realpython.com/python-idle/",
      "https://www.sublimetext.com",
      "https://code.visualstudio.com/docs",
      "#how-to-run-python-scripts-from-a-file-manager",
      "#conclusion",
      "/quizzes/run-python-scripts/",
      "/feedback/survey/article/run-python-scripts/liked/?from=article-footer",
      "/feedback/survey/article/run-python-scripts/disliked/?from=article-footer",
      "/courses/running-python-scripts/"
    ]
  },
  {
    "id": 86,
    "title": "Python \"for\" Loops (Definite Iteration)",
    "url": "https://realpython.com/python-for-loop/",
    "pub_date": "2019-01-30T06:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this introductory tutorial, you'll learn all about how to perform definite iteration with Python for loops. You\u2019ll see how other programming languages implement definite iteration, learn about iterables and iterators, and tie it all together to learn about Python\u2019s for loop.",
    "text": "Conclusion\n This tutorial presented the for loop, the workhorse of definite iteration in Python.You also learned about the inner workings of iterables and iterators, two important object types that underlie definite iteration, but also figure prominently in a wide variety of other Python code.In the next two tutorials in this introductory series, you will shift gears a little and explore how Python programs can interact with the user via input from the keyboard and output to the console.",
    "preview": false,
    "links": [
      "#a-survey-of-definite-iteration-in-programming",
      "#numeric-range-loop",
      "#three-expression-loop",
      "#collection-based-or-iterator-based-loop",
      "#the-python-for-loop",
      "#iterables",
      "#iterators",
      "#the-guts-of-the-python-for-loop",
      "#iterating-through-a-dictionary",
      "#the-range-function",
      "#altering-for-loop-behavior",
      "#the-break-and-continue-statements",
      "#the-else-clause",
      "#conclusion",
      "/account/join/",
      "/courses/python-for-loop/",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/bonus/python-tricks-sample-pdf/",
      "#a-survey-of-definite-iteration-in-programming",
      "https://realpython.com/python-keywords/",
      "/account/join/",
      "#numeric-range-loop",
      "https://realpython.com/python-variables/",
      "#three-expression-loop",
      "https://realpython.com/c-for-python-programmers/",
      "https://realpython.com/python-vs-cpp/",
      "https://realpython.com/oop-in-python-vs-java/",
      "#collection-based-or-iterator-based-loop",
      "https://en.wikipedia.org/wiki/For_loop",
      "#the-python-for-loop",
      "https://realpython.com/python-print/",
      "/account/join/",
      "#iterables",
      "https://realpython.com/python-iterators-iterables/#getting-to-know-python-iterables",
      "https://realpython.com/python-iterators-iterables/#getting-to-know-python-iterators",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-lists-tuples/#python-lists",
      "https://realpython.com/python-lists-tuples/#python-tuples",
      "https://realpython.com/python-dicts/",
      "https://realpython.com/python-sets/",
      "https://realpython.com/python-sets/#frozen-sets",
      "#iterators",
      "https://realpython.com/introduction-to-python-generators/",
      "https://realpython.com/python-itertools/",
      "https://en.wikipedia.org/wiki/Hang_(computing)",
      "/account/join/",
      "#the-guts-of-the-python-for-loop",
      "https://files.realpython.com/media/t.ba63222d63f5.png",
      "#iterating-through-a-dictionary",
      "https://realpython.com/iterate-through-dictionary-python/",
      "https://realpython.com/python-dicts/#built-in-dictionary-methods",
      "/account/join/",
      "#the-range-function",
      "https://realpython.com/python-for-loop/#numeric-range-loop",
      "https://realpython.com/python-range",
      "/account/join/",
      "#altering-for-loop-behavior",
      "https://realpython.com/python-while-loop/#interruption-of-loop-iteration",
      "https://realpython.com/python-while-loop/#the-else-clause",
      "#the-break-and-continue-statements",
      "#the-else-clause",
      "#conclusion",
      "https://realpython.com/python-while-loop/",
      "#",
      "https://realpython.com/python-input-output/",
      "/feedback/survey/article/python-for-loop/liked/?from=article-footer",
      "/feedback/survey/article/python-for-loop/disliked/?from=article-footer",
      "/courses/python-for-loop/"
    ]
  },
  {
    "id": 87,
    "title": "Working With Files in Python",
    "url": "https://realpython.com/working-with-files-in-python/",
    "pub_date": "2019-01-21T06:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn how you can work with files in Python by using built-in modules to perform practical tasks that involve groups of files, like renaming them, moving them around, archiving them, and getting their metadata.",
    "text": "Conclusion\n You now know how to use Python to perform the most common operations on files and groups of files. You\u2019ve learned about the different built-in modules used to read, find, and manipulate them.You\u2019re now equipped to use Python to:",
    "preview": false,
    "links": [
      "#pythons-with-open-as-pattern",
      "#getting-a-directory-listing",
      "#directory-listing-in-legacy-python-versions",
      "#directory-listing-in-modern-python-versions",
      "#listing-all-files-in-a-directory",
      "#listing-subdirectories",
      "#getting-file-attributes",
      "#making-directories",
      "#creating-a-single-directory",
      "#creating-multiple-directories",
      "#filename-pattern-matching",
      "#using-string-methods",
      "#simple-filename-pattern-matching-using-fnmatch",
      "#more-advanced-pattern-matching",
      "#filename-pattern-matching-using-glob",
      "#traversing-directories-and-processing-files",
      "#making-temporary-files-and-directories",
      "#deleting-files-and-directories",
      "#deleting-files-in-python",
      "#deleting-directories",
      "#deleting-entire-directory-trees",
      "#copying-moving-and-renaming-files-and-directories",
      "#copying-files-in-python",
      "#copying-directories",
      "#moving-files-and-directories",
      "#renaming-files-and-directories",
      "#archiving",
      "#reading-zip-files",
      "#extracting-zip-archives",
      "#extracting-data-from-password-protected-archives",
      "#creating-new-zip-archives",
      "#opening-tar-archives",
      "#extracting-files-from-a-tar-archive",
      "#creating-new-tar-archives",
      "#working-with-compressed-archives",
      "#an-easier-way-of-creating-archives",
      "#reading-multiple-files",
      "#conclusion",
      "/account/join/",
      "/courses/practical-recipes-files/",
      "https://realpython.com/bonus/python-mastery-course/",
      "#pythons-with-open-as-pattern",
      "https://realpython.com/read-write-files-python/",
      "https://dbader.org/blog/python-file-io",
      "/account/join/",
      "#getting-a-directory-listing",
      "#directory-listing-in-legacy-python-versions",
      "https://realpython.com/python-lists-tuples/",
      "#directory-listing-in-modern-python-versions",
      "https://www.python.org/dev/peps/pep-0471/",
      "https://realpython.com/get-all-files-in-directory-python/",
      "https://realpython.com/python-pathlib/",
      "https://realpython.com/courses/python-basics-file-system-operations/",
      "https://realpython.com/courses/python-file-system-exercises/",
      "/account/join/",
      "#listing-all-files-in-a-directory",
      "https://realpython.com/python-for-loop/",
      "https://realpython.com/python-conditional-statements/",
      "https://dbader.org/blog/python-generator-expressions",
      "https://realpython.com/introduction-to-python-generators/",
      "#listing-subdirectories",
      "/account/join/",
      "#getting-file-attributes",
      "https://en.wikipedia.org/wiki/Epoch_(reference_date)#Computing",
      "https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior",
      "http://strftime.org/",
      "#making-directories",
      "#creating-a-single-directory",
      "https://realpython.com/python-exceptions/",
      "/account/join/",
      "#creating-multiple-directories",
      "https://docs.python.org/3/library/os.html#os.makedirs",
      "#filename-pattern-matching",
      "http://linuxcommand.org/lc3_lts0080.php",
      "/account/join/",
      "#using-string-methods",
      "https://realpython.com/python-strings/",
      "#simple-filename-pattern-matching-using-fnmatch",
      "#more-advanced-pattern-matching",
      "#filename-pattern-matching-using-glob",
      "https://realpython.com/python-thinking-recursively/",
      "/account/join/",
      "#traversing-directories-and-processing-files",
      "#making-temporary-files-and-directories",
      "/account/join/",
      "#deleting-files-and-directories",
      "#deleting-files-in-python",
      "https://realpython.com/python-f-strings/",
      "#deleting-directories",
      "/account/join/",
      "#deleting-entire-directory-trees",
      "#copying-moving-and-renaming-files-and-directories",
      "#copying-files-in-python",
      "#copying-directories",
      "/account/join/",
      "#moving-files-and-directories",
      "#renaming-files-and-directories",
      "#archiving",
      "#reading-zip-files",
      "https://realpython.com/python-zipfile/",
      "https://realpython.com/python-repl/",
      "/account/join/",
      "#extracting-zip-archives",
      "#extracting-data-from-password-protected-archives",
      "#creating-new-zip-archives",
      "#opening-tar-archives",
      "#extracting-files-from-a-tar-archive",
      "#creating-new-tar-archives",
      "#working-with-compressed-archives",
      "#an-easier-way-of-creating-archives",
      "#reading-multiple-files",
      "https://realpython.com/python-command-line-arguments/",
      "https://docs.python.org/3/library/fileinput.html",
      "#conclusion",
      "/feedback/survey/article/working-with-files-in-python/liked/?from=article-footer",
      "/feedback/survey/article/working-with-files-in-python/disliked/?from=article-footer",
      "/courses/practical-recipes-files/"
    ]
  },
  {
    "id": 88,
    "title": "Django Migrations: A Primer",
    "url": "https://realpython.com/django-migrations-a-primer/",
    "pub_date": "2019-01-09T12:10:21+00:00",
    "tags": [
      "databases",
      "web-dev",
      "basics",
      "django"
    ],
    "description": "In this tutorial, you\u2019ll get comfortable with Django migrations and learn how to create database tables without writing any SQL, how to automatically modify your database after you changed your models, and how to revert changes made to your database.",
    "text": "Conclusion\n You covered quite a bit of ground in this tutorial and learned the fundamentals of Django migrations.To recap, the basic steps to use Django migrations look like this:That\u2019s it! This workflow will work the majority of the time, but if things don\u2019t work out as expected, you also know how to list and unapply migrations.If you previously created and modified your database tables with hand-written SQL, you have now become much more efficient by delegating this work to Django migrations.In the next tutorial in this series, you will dig deeper into the topic and learn how Django Migrations work under the hood.Free Bonus: Click here to get access to a free Django Learning Resources Guide (PDF) that shows you tips and tricks as well as common pitfalls to avoid when building Python + Django web applications.Cheers!",
    "preview": false,
    "links": [
      "#the-problems-that-migrations-solve",
      "#making-database-changes-without-sql",
      "#avoiding-repetition",
      "#ensuring-model-definitions-and-the-database-schema-in-sync",
      "#tracking-database-schema-change-in-version-control",
      "#setting-up-a-django-project",
      "#creating-migrations",
      "#applying-migrations",
      "#changing-models",
      "#listing-out-migrations",
      "#unapplying-migrations",
      "#naming-migrations",
      "#conclusion",
      "#video",
      "/account/join/",
      "/courses/django-migrations-101/",
      "https://realpython.com/get-started-with-django-1/",
      "https://realpython.com/digging-deeper-into-migrations/",
      "https://realpython.com/data-migrations/",
      "https://realpython.com/django-migrations-a-primer/#video",
      "#",
      "#the-problems-that-migrations-solve",
      "https://en.wikipedia.org/wiki/Relational_database",
      "https://www.postgresql.org/",
      "https://www.mysql.com/de/",
      "https://www.sqlite.org/index.html",
      "https://realpython.com/python3-object-oriented-programming/",
      "https://docs.djangoproject.com/en/2.1/topics/db/models/",
      "https://files.realpython.com/media/model_to_schema.4e4b8506dc26.png",
      "/account/join/",
      "#making-database-changes-without-sql",
      "https://www.phpmyadmin.net/",
      "#avoiding-repetition",
      "https://en.wikipedia.org/wiki/Don%27t_repeat_yourself",
      "#ensuring-model-definitions-and-the-database-schema-in-sync",
      "#tracking-database-schema-change-in-version-control",
      "https://realpython.com/python-git-github-intro/",
      "#setting-up-a-django-project",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://realpython.com/python-sqlite-sqlalchemy/",
      "/account/join/",
      "#creating-migrations",
      "https://realpython.com/python-mysql/",
      "https://docs.djangoproject.com/en/2.1/ref/django-admin/#dbshell",
      "#applying-migrations",
      "https://realpython.com/django-user-management/",
      "/account/join/",
      "#changing-models",
      "#listing-out-migrations",
      "/account/join/",
      "#unapplying-migrations",
      "#naming-migrations",
      "#conclusion",
      "https://realpython.com/digging-deeper-into-migrations/",
      "#",
      "/account/join/",
      "#video",
      "/feedback/survey/article/django-migrations-a-primer/liked/?from=article-footer",
      "/feedback/survey/article/django-migrations-a-primer/disliked/?from=article-footer",
      "/courses/django-migrations-101/"
    ]
  },
  {
    "id": 89,
    "title": "Thonny: The Beginner-Friendly Python Editor",
    "url": "https://realpython.com/python-thonny/",
    "pub_date": "2018-12-12T14:00:00+00:00",
    "tags": [
      "basics",
      "tools"
    ],
    "description": "In this tutorial, you\u2019ll learn all about Thonny, a free Python Integrated Development Environment (IDE) that was especially designed with the beginner Pythonista in mind. It has a built-in debugger and allows you to do step-through expression evaluation.",
    "text": "Conclusion\n Awesome job getting through this tutorial on Thonny!You can now start using Thonny to write, debug, and run Python code! If you like Thonny, you might also like some of the other IDEs we\u2019ve listed in Python IDEs and Code Editors (Guide).Thonny is actively maintained, and new features are being added all the time. There are several awesome new features that are currently in beta that can be found on the Thonny Blog. Thonny\u2019s main development takes place at the Institute of Computer Science of the University of Tartu, Estonia, as well as by contributors around the world.",
    "preview": false,
    "links": [
      "#installing-thonny",
      "#web-download",
      "#command-line-download",
      "#the-user-interface",
      "#the-code-editor-and-shell",
      "#the-icons",
      "#other-ui-features",
      "#the-code-editor",
      "#write-some-code",
      "#save-your-code",
      "#run-your-code",
      "#debug-your-code",
      "#stop-running-your-code",
      "#find-syntax-errors-in-your-code",
      "#the-package-manager",
      "#check-your-understanding",
      "#part-1-create-a-file-add-some-code-and-understand-the-code",
      "#part-2-save-the-file-view-the-variables-and-run-your-code",
      "#other-great-beginner-features",
      "#debugging",
      "#variable-scope-highlighting",
      "#code-completion",
      "#working-on-a-pre-existing-project",
      "#conclusion",
      "/account/join/",
      "/courses/python-thonny/",
      "https://realpython.com/python-ides-code-editors-guide/",
      "",
      "#installing-thonny",
      "https://realpython.com/installing-python/",
      "/account/join/",
      "#web-download",
      "https://thonny.org/",
      "https://files.realpython.com/media/Screenshot_2018-10-20_10.52.50.5b35603b597b.png",
      "#command-line-download",
      "#the-user-interface",
      "#the-code-editor-and-shell",
      "https://files.realpython.com/media/Screenshot_2018-10-20_11.03.57.d46d970db1e6.png",
      "#the-icons",
      "https://files.realpython.com/media/Screenshot_2018-10-20_11.09.16.7c059cfba13c.png",
      "http://www.computerhistory.org/tdih/september/9/",
      "#lets-try-it",
      "/account/join/",
      "#other-ui-features",
      "https://files.realpython.com/media/Screenshot_2018-10-20_11.15.24.2f90db2108e7.png",
      "https://realpython.com/python-numbers/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-variables/",
      "#the-code-editor",
      "#write-some-code",
      "#save-your-code",
      "#run-your-code",
      "https://files.realpython.com/media/Screenshot_2018-10-11_23.49.22.af82669bc586.png",
      "#debug-your-code",
      "https://files.realpython.com/media/Screenshot_2018-10-23_22.47.50.5613862c2c62.png",
      "/account/join/",
      "#stop-running-your-code",
      "https://realpython.com/python-print/",
      "#find-syntax-errors-in-your-code",
      "https://realpython.com/invalid-syntax-python/",
      "https://files.realpython.com/media/Screenshot_2018-10-12_00.11.56.451e383e9c31.png",
      "https://files.realpython.com/media/Screenshot_2018-10-20_10.18.50.1f3845020f38.png",
      "#the-package-manager",
      "https://pypi.org/project/simplecalculator/",
      "https://files.realpython.com/media/Screenshot_2018-10-11_23.22.41.544b108e9748.png",
      "/account/join/",
      "#check-your-understanding",
      "#part-1-create-a-file-add-some-code-and-understand-the-code",
      "https://pypi.org/project/simplecalculator/",
      "https://realpython.com/python-code-quality/",
      "https://realpython.com/python3-object-oriented-programming/",
      "#part-2-save-the-file-view-the-variables-and-run-your-code",
      "https://files.realpython.com/media/Screenshot_2018-10-20_11.18.36.528db7d62861.png",
      "#other-great-beginner-features",
      "#debugging",
      "https://realpython.com/products/real-python-course/",
      "#lets-try-it_1",
      "https://files.realpython.com/media/create_add_string.f45ac64b9aaf.png",
      "https://realpython.com/python-string-formatting/",
      "https://realpython.com/python-f-strings/",
      "/account/join/",
      "#variable-scope-highlighting",
      "https://files.realpython.com/media/Screenshot_2018-10-11_23.37.10.0579f93ea6df.png",
      "#code-completion",
      "https://files.realpython.com/media/code_complete.d1514f5cc85f.png",
      "#working-on-a-pre-existing-project",
      "#find-a-file-on-your-computer",
      "#the-package-manager",
      "#work-on-a-project-from-github",
      "https://realpython.com/python-git-github-intro/",
      "https://github.com/realpython/book1-exercises",
      "#conclusion",
      "https://realpython.com/python-ides-code-editors-guide/",
      "https://thonny.org/blog/",
      "https://www.cs.ut.ee/et",
      "https://www.ut.ee/et",
      "/feedback/survey/article/python-thonny/liked/?from=article-footer",
      "/feedback/survey/article/python-thonny/disliked/?from=article-footer",
      "/courses/python-thonny/"
    ]
  },
  {
    "id": 90,
    "title": "Python \"while\" Loops (Indefinite Iteration)",
    "url": "https://realpython.com/python-while-loop/",
    "pub_date": "2018-11-07T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial, you'll learn about indefinite iteration using the Python while loop. You\u2019ll be able to construct basic and complex while loops, interrupt loop execution with break and continue, use the else clause with a while loop, and deal with infinite loops.",
    "text": "Conclusion\n In this tutorial, you learned about indefinite iteration using the Python while loop.  You\u2019re now able to:You should now have a good grasp of how to execute a piece of code repetitively. Take the Quiz: Test your knowledge with our interactive \u201cPython \"while\" Loops\u201d quiz. Upon completion you will receive a score so you can track your learning progress over time:The next tutorial in this series covers definite iteration with for loops\u2014recurrent execution where the number of repetitions is specified explicitly.",
    "preview": false,
    "links": [
      "#the-while-loop",
      "#the-python-break-and-continue-statements",
      "#the-else-clause",
      "#infinite-loops",
      "#nested-while-loops",
      "#one-line-while-loops",
      "#conclusion",
      "/account/join/",
      "/courses/mastering-while-loops/",
      "",
      "/quizzes/python-while-loop/",
      "#the-while-loop",
      "https://realpython.com/python-conditional-statements/",
      "https://realpython.com/python-conditional-statements/#python-its-all-about-the-indentation",
      "https://realpython.com/python-data-types/#boolean-type-boolean-context-and-truthiness",
      "https://realpython.com/python-operators-expressions/#evaluation-of-non-boolean-values-in-boolean-context",
      "/account/join/",
      "#the-python-break-and-continue-statements",
      "https://realpython.com/python-keywords/",
      "https://files.realpython.com/media/t.899f357dd948.png",
      "https://realpython.com/python-print/",
      "https://realpython.com/c-for-python-programmers/",
      "https://realpython.com/python-vs-cpp/",
      "https://realpython.com/java-vs-python/",
      "https://realpython.com/python-vs-javascript/",
      "https://realpython.com/python-do-while/",
      "#the-else-clause",
      "https://files.realpython.com/media/t.a370f09e82c4.png",
      "https://en.wikipedia.org/wiki/Guido_van_Rossum",
      "/account/join/",
      "#infinite-loops",
      "https://realpython.com/python-lists-tuples/",
      "#nested-while-loops",
      "/account/join/",
      "#one-line-while-loops",
      "https://www.python.org/dev/peps/pep-0008/#other-recommendations",
      "#conclusion",
      "/quizzes/python-while-loop/",
      "https://realpython.com/python-conditional-statements/",
      "#",
      "https://realpython.com/python-for-loop/",
      "/feedback/survey/article/python-while-loop/liked/?from=article-footer",
      "/feedback/survey/article/python-while-loop/disliked/?from=article-footer",
      "/courses/mastering-while-loops/"
    ]
  },
  {
    "id": 91,
    "title": "Writing Comments in Python (Guide)",
    "url": "https://realpython.com/python-comments-guide/",
    "pub_date": "2018-11-05T14:00:00+00:00",
    "tags": [
      "best-practices",
      "basics"
    ],
    "description": "Learn how to write Python comments that are clean, concise, and useful. Quickly get up to speed on what the best practices are, which types of comments it's best to avoid, and how you can practice writing cleaner comments.",
    "text": "Conclusion\n Learning to comment well is a valuable tool. Not only will you learn how to write more clearly and concisely in general, but you\u2019ll no doubt gain a deeper understanding of Python as well.Knowing how to write comments in Python can make life easier for all developers, including yourself! They can help other devs get up to speed on what your code does, and help you get re-acquainted with old code of your own.By noticing when you\u2019re using comments to try and support poorly written code, you\u2019ll be able to go back and modify your code to be more robust. Commenting previously written code, whether your own or another developer\u2019s, is a great way to practice writing clean comments in Python.As you learn more about documenting your code, you can consider moving on to the next level of documentation. Check out our tutorial on Documenting Python Code to take the next step.",
    "preview": false,
    "links": [
      "#why-commenting-your-code-is-so-important",
      "#when-reading-your-own-code",
      "#when-others-are-reading-your-code",
      "#how-to-write-comments-in-python",
      "#python-commenting-basics",
      "#python-multiline-comments",
      "#python-commenting-shortcuts",
      "#python-commenting-best-practices",
      "#when-writing-code-for-yourself",
      "#when-writing-code-for-others",
      "#python-commenting-worst-practices",
      "#avoid-wet-comments",
      "#avoid-smelly-comments",
      "#avoid-rude-comments",
      "#how-to-practice-commenting",
      "#conclusion",
      "/account/join/",
      "/courses/writing-comments-python/",
      "https://realpython.com/python-variables/",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/bonus/python-mastery-course/",
      "#why-commenting-your-code-is-so-important",
      "/account/join/",
      "#when-reading-your-own-code",
      "#when-others-are-reading-your-code",
      "https://realpython.com/django-setup/",
      "#how-to-write-comments-in-python",
      "#python-commenting-basics",
      "https://www.python.org/dev/peps/pep-0008/#maximum-line-length",
      "/account/join/",
      "#python-multiline-comments",
      "https://realpython.com/c-for-python-programmers/",
      "https://realpython.com/oop-in-python-vs-java/",
      "https://realpython.com/invalid-syntax-python/",
      "https://realpython.com/python-strings/",
      "https://dbader.org/blog/python-multiline-comment",
      "https://www.geeksforgeeks.org/python-docstrings/",
      "https://realpython.com/documenting-python-code/",
      "#python-commenting-shortcuts",
      "https://files.realpython.com/media/gif_multi-cursor.6d8f5974124b.gif",
      "https://files.realpython.com/media/gif_toggle.6424d45ed925.gif",
      "https://files.realpython.com/media/gif_hide.6314ae5dad5e.gif",
      "/account/join/",
      "#python-commenting-best-practices",
      "#when-writing-code-for-yourself",
      "https://realpython.com/python-debugging-pdb/",
      "#when-writing-code-for-others",
      "https://www.python.org/dev/peps/pep-0257/#one-line-docstrings",
      "https://www.python.org/dev/peps/pep-0257/#multi-line-docstrings",
      "/account/join/",
      "#python-commenting-worst-practices",
      "#avoid-wet-comments",
      "#avoid-smelly-comments",
      "#avoid-rude-comments",
      "#how-to-practice-commenting",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/documenting-python-code/",
      "/feedback/survey/article/python-comments-guide/liked/?from=article-footer",
      "/feedback/survey/article/python-comments-guide/disliked/?from=article-footer",
      "/courses/writing-comments-python/"
    ]
  },
  {
    "id": 92,
    "title": "Setting Up Python for Machine Learning on Windows",
    "url": "https://realpython.com/python-windows-machine-learning-setup/",
    "pub_date": "2018-10-31T14:00:00+00:00",
    "tags": [
      "machine-learning",
      "data-science",
      "basics"
    ],
    "description": "In this step-by-step tutorial, you\u2019ll cover the basics of setting up a Python numerical computation environment for machine learning on a Windows machine using the Anaconda Python distribution.",
    "text": "Where To Go From Here\n Data science and machine learning applications are emerging in the most diverse areas, attracting more people. However, setting up an environment for numerical computation can be a complicated task, and it\u2019s common to find users having trouble in data science workshops, especially when using Windows.In this article, you\u2019ve covered the basics of setting up a Python numerical computation environment on a Windows machine using the Anaconda Python distribution.Free Bonus: Click here to get access to a Conda cheat sheet with handy usage examples for managing your Python environment and packages.Now that you have a working environment, it\u2019s time to start working with some applications. Python is one of the most used languages for data science and machine learning, and Anaconda is one of the most popular distributions, used in various companies and research laboratories. It provides several packages to install libraries that Python relies on for data acquisition, wrangling, processing, and visualization.Fortunately there are a lot of tutorials about these libraries available at Real Python, including the following:Also, if you\u2019d like a deeper understanding of Anaconda and Conda, check out the following links:",
    "preview": false,
    "links": [
      "#introducing-anaconda-and-conda",
      "#installing-the-miniconda-python-distribution",
      "#understanding-conda-environments",
      "#understanding-basic-package-management-with-conda",
      "#searching-and-installing-packages",
      "#updating-and-removing-packages",
      "#using-channels",
      "#using-pip-inside-conda-environments",
      "#a-simple-machine-learning-example",
      "#where-to-go-from-here",
      "/account/join/",
      "http://www.numpy.org/",
      "https://realpython.com/bonus/conda-cheatsheet/",
      "#introducing-anaconda-and-conda",
      "https://pypi.org/project/pip/",
      "https://realpython.com/courses/what-is-pip/",
      "https://www.anaconda.com/distribution/",
      "https://conda.io/",
      "https://realpython.com/what-is-pip/",
      "https://www.python.org/dev/peps/pep-0427/",
      "http://jakevdp.github.io/blog/2016/08/25/conda-myths-and-misconceptions/#Myth-#6:-Now-that-pip-uses-wheels,-conda-is-no-longer-necessary",
      "https://www.anaconda.com/distribution/",
      "https://pydata.org/",
      "https://conda.io/miniconda.html",
      "https://conda.io",
      "https://en.wikipedia.org/wiki/APT_(Debian)",
      "https://en.wikipedia.org/wiki/Yum_(software)",
      "https://www.youtube.com/watch?v=QjXJLVINsSA&feature=youtu.be&t=3555",
      "http://jakevdp.github.io/blog/2016/08/25/conda-myths-and-misconceptions/#Myth-#4:-Creating-conda-in-the-first-place-was-irresponsible-&-divisive",
      "http://technicaldiscovery.blogspot.com/2013/12/why-i-promote-conda.html",
      "/account/join/",
      "#installing-the-miniconda-python-distribution",
      "https://realpython.com/python-coding-setup-windows/",
      "https://docs.anaconda.com/anaconda/packages/py3.6_win-64",
      "https://docs.anaconda.com/anaconda/navigator/",
      "https://conda.io/miniconda.html",
      "https://files.realpython.com/media/miniconda_installer_1.8e05d1208356.png",
      "https://files.realpython.com/media/miniconda_installer_2.0541a4c97d48.png",
      "https://files.realpython.com/media/miniconda_installer_3.7deacd2d6e61.png",
      "https://files.realpython.com/media/miniconda_installer_4.9eee34622f05.png",
      "https://files.realpython.com/media/miniconda_installer_5.8c8633be4ae6.png",
      "https://files.realpython.com/media/miniconda_installer_6.769a977abed5.png",
      "https://files.realpython.com/media/miniconda_installer_7.5794961b1a9d.png",
      "https://files.realpython.com/media/miniconda_installer_8.9c04f88bc142.png",
      "https://files.realpython.com/media/anaconda_prompt_start.7e8fc1f5a8c2.png",
      "/account/join/",
      "#understanding-conda-environments",
      "https://www.kaggle.com/",
      "https://github.com/",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://virtualenv.pypa.io/en/stable/#",
      "https://realpython.com/python-modules-packages/",
      "/account/join/",
      "#understanding-basic-package-management-with-conda",
      "#searching-and-installing-packages",
      "/account/join/",
      "#updating-and-removing-packages",
      "#using-channels",
      "https://realpython.com/pytorch-vs-tensorflow/",
      "https://anaconda.org/search",
      "https://files.realpython.com/media/pytorch_anaconda_search.dcb73b6d552d.png",
      "#using-pip-inside-conda-environments",
      "https://anaconda.org/search",
      "https://realpython.com/python-git-github-intro/",
      "/account/join/",
      "#a-simple-machine-learning-example",
      "https://en.wikipedia.org/wiki/XOR_gate",
      "https://en.wikipedia.org/wiki/Exclusive_or",
      "https://keras.io/",
      "https://www.tensorflow.org/",
      "https://files.realpython.com/media/nnxor.a334b7848a9b.png",
      "https://files.realpython.com/media/nnxor_file.799d361d9286.png",
      "https://en.wikipedia.org/wiki/Sigmoid_function",
      "https://en.wikipedia.org/wiki/Stochastic_gradient_descent",
      "https://en.wikipedia.org/wiki/Mean_squared_error",
      "/account/join/",
      "#where-to-go-from-here",
      "https://realpython.com/bonus/conda-cheatsheet/",
      "https://realpython.com/tutorials/data-science/",
      "https://realpython.com/tutorials/numpy/",
      "https://realpython.com/python-matplotlib-guide/",
      "https://realpython.com/python-histograms/",
      "https://realpython.com/numpy-tensorflow-performance/",
      "https://realpython.com/python-pandas-tricks/",
      "https://realpython.com/fast-flexible-pandas/",
      "https://realpython.com/python-data-cleaning-numpy-pandas/",
      "https://medium.freecodecamp.org/why-you-need-python-environments-and-how-to-manage-them-with-conda-85f155f4353c",
      "http://jakevdp.github.io/blog/2016/08/25/conda-myths-and-misconceptions/",
      "/feedback/survey/article/python-windows-machine-learning-setup/liked/?from=article-footer",
      "/feedback/survey/article/python-windows-machine-learning-setup/disliked/?from=article-footer"
    ]
  },
  {
    "id": 93,
    "title": "The Python range() Function (Guide)",
    "url": "https://realpython.com/python-range/",
    "pub_date": "2018-10-15T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "Master the Python range() function, learn how its implementation differs in Python 3 vs 2, and see how you can use it to write faster and more Pythonic code.",
    "text": "Go Forth and Loop\n You now understand how to use range() and work around its limitations. You also have an idea of how this important function has evolved between Python 2 and Python 3.The next time you need to perform an action a specific number of times, you\u2019ll be all set to loop your heart out!Happy Pythoning!",
    "preview": false,
    "links": [
      "#the-history-of-pythons-range-function",
      "#lets-loop",
      "#python-range-basics",
      "#incrementing-with-range",
      "#decrementing-with-range",
      "#advanced-usage-examples-for-pythons-range-function",
      "#floats-and-range",
      "#a-word-on-floats",
      "#using-range-with-numpy",
      "#go-forth-and-loop",
      "/account/join/",
      "/courses/python-range-function/",
      "",
      "#the-history-of-pythons-range-function",
      "https://realpython.com/python-numbers/",
      "https://en.wikipedia.org/wiki/Lazy_evaluation",
      "https://www.python.org/dev/peps/pep-3100",
      "https://www.python.org/dev/peps/",
      "https://www.python.org/dev/peps/pep-0001/",
      "/account/join/",
      "#lets-loop",
      "https://en.wikipedia.org/wiki/Control_flow#Loops",
      "https://realpython.com/python-string-formatting/",
      "https://realpython.com/python-f-strings/",
      "#python-range-basics",
      "https://realpython.com/python-iterators-iterables/#getting-to-know-python-iterables",
      "https://realpython.com/python-iterators-iterables/#understanding-iteration-in-python",
      "https://docs.python.org/3/reference/expressions.html#in",
      "https://dbader.org/blog/pythonic-loops",
      "#rangestop",
      "#rangestart-stop",
      "#rangestart-stop-step",
      "/account/join/",
      "#incrementing-with-range",
      "#decrementing-with-range",
      "https://realpython.com/python-absolute-value",
      "https://realpython.com/python-reverse-list/",
      "https://realpython.com/python-print/",
      "https://dbader.org/blog/python-reverse-string",
      "/account/join/",
      "#advanced-usage-examples-for-pythons-range-function",
      "https://realpython.com/python-lists-tuples/",
      "https://realpython.com/python-itertools/",
      "http://treyhunner.com/2018/02/python-range-is-not-an-iterator/",
      "#floats-and-range",
      "#a-word-on-floats",
      "/account/join/",
      "#using-range-with-numpy",
      "http://www.numpy.org/",
      "https://realpython.com/python37-new-features/#timing-precision",
      "https://docs.python.org/3/tutorial/floatingpoint.html",
      "https://docs.python.org/3/library/decimal.html",
      "https://realpython.com/python-rounding/",
      "https://realpython.com/np-linspace-numpy/",
      "https://realpython.com/numpy-array-programming/",
      "https://docs.scipy.org/doc/numpy/reference/",
      "/account/join/",
      "#go-forth-and-loop",
      "/feedback/survey/article/python-range/liked/?from=article-footer",
      "/feedback/survey/article/python-range/disliked/?from=article-footer",
      "/courses/python-range-function/"
    ]
  },
  {
    "id": 94,
    "title": "Splitting, Concatenating, and Joining Strings in Python",
    "url": "https://realpython.com/python-string-split-concatenate-join/",
    "pub_date": "2018-10-01T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this beginner-friendly article, you\u2019ll learn some of the most fundamental string operations: splitting, concatenating, and joining. Not only will you learn how to use these tools, but you\u2019ll walk away with a deeper understanding of how they work under the hood in Python.",
    "text": "Tying It All Together\n While this concludes this overview of the most basic string operations in Python (splitting, concatenating, and joining), there is still a whole universe of string methods that can make your experiences with manipulating strings much easier. Once you have mastered these basic string operations, you may want to learn more. Luckily, we have a number of great tutorials to help you complete your mastery of Python\u2019s features that enable smart string manipulation: Take the Quiz: Test your knowledge with our interactive \u201cSplitting, Concatenating, and Joining Strings in Python\u201d quiz. Upon completion you will receive a score so you can track your learning progress over time:",
    "preview": false,
    "links": [
      "#splitting-strings",
      "#splitting-without-parameters",
      "#specifying-separators",
      "#limiting-splits-with-maxsplit",
      "#concatenating-and-joining-strings",
      "#concatenating-with-the-operator",
      "#going-from-a-list-to-a-string-in-python-with-join",
      "#tying-it-all-together",
      "/account/join/",
      "/courses/splitting-concatenating-and-joining-strings-python/",
      "/quizzes/python-split-strings/",
      "",
      "#splitting-strings",
      "https://docs.python.org/3/library/stdtypes.html#str",
      "https://docs.python.org/3/tutorial/classes.html#instance-objects",
      "https://realpython.com/instance-class-and-static-methods-demystified/",
      "https://realpython.com/python-append/",
      "https://realpython.com/python-lists-tuples/",
      "/account/join/",
      "#splitting-without-parameters",
      "#specifying-separators",
      "#limiting-splits-with-maxsplit",
      "https://realpython.com/python-variables/",
      "https://www.oreilly.com/learning/how-do-i-use-the-slice-notation-in-python",
      "/account/join/",
      "#concatenating-and-joining-strings",
      "#concatenating-with-the-operator",
      "https://realpython.com/python-exceptions/",
      "#going-from-a-list-to-a-string-in-python-with-join",
      "https://realpython.com/instance-class-and-static-methods-demystified/",
      "https://realpython.com/python-web-scraping-practical-introduction/",
      "https://dbader.org/blog/list-dict-set-comprehensions-in-python",
      "/account/join/",
      "#tying-it-all-together",
      "https://realpython.com/python-f-strings/",
      "https://realpython.com/python-string-formatting/",
      "https://realpython.com/python-strings/",
      "/quizzes/python-split-strings/",
      "/feedback/survey/article/python-string-split-concatenate-join/liked/?from=article-footer",
      "/feedback/survey/article/python-string-split-concatenate-join/disliked/?from=article-footer",
      "/courses/splitting-concatenating-and-joining-strings-python/"
    ]
  },
  {
    "id": 95,
    "title": "The Best Python Books",
    "url": "https://realpython.com/best-python-books/",
    "pub_date": "2018-09-10T14:00:00+00:00",
    "tags": [
      "intermediate",
      "basics",
      "community"
    ],
    "description": "Find the right books to help you get started with Python or take your coding to the next level with this detailed guide to the best Python books out there.",
    "text": "Get Coding!\n One of the awesome things about Python is it has a relatively low barrier to entry, compared to many other languages.\nDespite this, learning Python is a never-ending process.\nThe language is relevant for such a wide variety of tasks, and evolves so much that there will always be something new to discover and learn.\nWhile you can pick up enough Python to do some fun things in a week or two, people who\u2019ve been using Python for twenty years will tell you they\u2019re still learning new things they can do with this flexible and evolving language.To ultimately be successful as a Python programmer, you need to begin with a solid foundation, then gain a deeper understanding of how the language works, and how to best put it to use.\nTo gain a solid foundation, you really can\u2019t go wrong with any of the best books to learn Python.\nIf you want to learn Python with a child, or maybe teach a group of kids, check out the list of best Python books for kids.\nAfter you\u2019ve got your feet wet, check out some of the best intermediate and advanced Python books to dig in deeper to less obvious concepts that will improve the efficiency of your code.All of these books will teach you what you need to know to legitimately call yourself a Python coder.\nThe only ingredient missing is you.",
    "preview": false,
    "links": [
      "#best-books-for-learning-python",
      "#python-crash-course",
      "#head-first-python-2nd-edition",
      "#invent-your-own-computer-games-with-python-4th-edition",
      "#think-python-how-to-think-like-a-computer-scientist-2nd-edition",
      "#effective-computation-in-physics-field-guide-to-research-with-python",
      "#learn-python-3-the-hard-way",
      "#real-python-course-part-1",
      "#best-python-books-for-kids",
      "#python-for-kids-a-playful-introduction-to-programming",
      "#teach-your-kids-to-code-a-parent-friendly-guide-to-python-programming",
      "#best-intermediate-and-advanced-python-books",
      "#python-tricks-a-buffet-of-awesome-python-features",
      "#fluent-python-clear-concise-and-effective-programming",
      "#effective-python-59-ways-to-write-better-python",
      "#python-cookbook",
      "#get-coding",
      "/account/join/",
      "#best-books-for-learning-python",
      "#best-python-books-for-kids",
      "#best-intermediate-and-advanced-python-books",
      "#best-books-for-learning-python",
      "#best-books-for-learning-python",
      "#best-intermediate-and-advanced-python-books",
      "#think-python",
      "#fluent-python",
      "#effective-python-59-ways-to-write-better-python",
      "#python-cookbook",
      "https://docs.python.org/3/tutorial/index.html",
      "/account/join/",
      "#python-crash-course",
      "https://realpython.com/asins/1593276036/",
      "https://realpython.com/python-while-loop/",
      "https://realpython.com/asins/1593276036/",
      "https://nostarch.com/pythoncrashcourse",
      "#head-first-python-2nd-edition",
      "https://realpython.com/asins/1491919531/",
      "http://shop.oreilly.com/product/0636920036777.do",
      "https://realpython.com/asins/1491919531/",
      "http://shop.oreilly.com/product/0636920036777.do",
      "/account/join/",
      "#invent-your-own-computer-games-with-python-4th-edition",
      "https://realpython.com/asins/1593277954/",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/asins/1593277954/",
      "https://inventwithpython.com/",
      "#think-python-how-to-think-like-a-computer-scientist-2nd-edition",
      "https://realpython.com/asins/1491939362/",
      "https://realpython.com/asins/1491939362/",
      "https://greenteapress.com/wp/think-python-2e/",
      "/account/join/",
      "#effective-computation-in-physics-field-guide-to-research-with-python",
      "https://realpython.com/asins/1491901535/",
      "https://gitforwindows.org/",
      "https://realpython.com/python3-object-oriented-programming/",
      "https://realpython.com/tutorials/data-science/",
      "https://realpython.com/asins/1491901535/",
      "http://shop.oreilly.com/product/0636920033424.do",
      "#learn-python-3-the-hard-way",
      "https://realpython.com/asins/0134692888/",
      "https://learnpythonthehardway.org/book/",
      "https://pypi.org/project/lpthw.web/",
      "https://realpython.com/asins/0134692888/",
      "https://learnpythonthehardway.org/python3/",
      "https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem",
      "https://sopython.com/wiki/LPTHW_Complaints",
      "https://sopython.com/wiki/What_tutorial_should_I_read%3F",
      "https://docs.python.org/3/tutorial/",
      "https://realpython.com/asins/1430224150/",
      "http://inventwithpython.com/",
      "#invent-your-own-computer-games-with-python",
      "#think-python-how-to-think-like-a-computer-scientist-2nd-edition",
      "https://realpython.com/asins/0134692888/",
      "/account/join/",
      "#real-python-course-part-1",
      "https://realpython.com/products/real-python-course/",
      "https://realpython.com/products/real-python-course/",
      "https://realpython.com/products/real-python-course/",
      "#best-python-books-for-kids",
      "#python-for-kids-a-playful-introduction-to-programming",
      "https://realpython.com/asins/1593274076/",
      "https://en.wikipedia.org/wiki/Pong",
      "https://www.gimp.org/",
      "https://realpython.com/asins/1593274076/",
      "https://nostarch.com/pythonforkids",
      "/account/join/",
      "#teach-your-kids-to-code-a-parent-friendly-guide-to-python-programming",
      "https://realpython.com/asins/1593276141/",
      "#python-for-kids-a-playful-introduction-to-programming",
      "#best-books-for-learning-python",
      "#python-for-kids-a-playful-introduction-to-programming",
      "http://brysonpayne.com/2018/04/24/bryson-payne-tedx-talk-coding-cyber-new-literacy/",
      "https://realpython.com/asins/1593276141/",
      "https://nostarch.com/teachkids",
      "#best-intermediate-and-advanced-python-books",
      "#python-tricks-a-buffet-of-awesome-python-features",
      "https://realpython.com/asins/1775093301/",
      "https://realpython.com/asins/1775093301/",
      "https://realpython.com/products/python-tricks-book/",
      "https://realpython.com/asins/1775093301/#customerReviews",
      "/account/join/",
      "#fluent-python-clear-concise-and-effective-programming",
      "https://realpython.com/asins/1491946008/",
      "https://realpython.com/asins/1491946008/",
      "http://shop.oreilly.com/product/0636920032519.do",
      "#effective-python-59-ways-to-write-better-python",
      "https://realpython.com/asins/0134034287/",
      "https://realpython.com/asins/0134853989/",
      "https://effectivepython.com/",
      "/account/join/",
      "#python-cookbook",
      "https://realpython.com/asins/1449340377/",
      "https://www.dabeaz.com/talks.html",
      "https://realpython.com/asins/0672329786/",
      "https://www.meetup.com/pug-ip/?_cookie-check=09STgWAF3KD4GDD6",
      "https://realpython.com/asins/1449340377/",
      "http://shop.oreilly.com/product/0636920027072.do",
      "#get-coding",
      "#best-books-for-learning-python",
      "#best-python-books-for-kids",
      "#best-intermediate-and-advanced-python-books",
      "/feedback/survey/article/best-python-books/liked/?from=article-footer",
      "/feedback/survey/article/best-python-books/disliked/?from=article-footer"
    ]
  },
  {
    "id": 96,
    "title": "Conditional Statements in Python",
    "url": "https://realpython.com/python-conditional-statements/",
    "pub_date": "2018-09-05T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this step-by-step tutorial you'll learn how to work with conditional (\"if\") statements in Python. Master if-statements and see how to write complex decision making code in your programs.",
    "text": "Conclusion\n With the completion of this tutorial, you are beginning to write Python code that goes beyond simple sequential execution:All of these concepts are crucial to developing more complex Python code.The next two tutorials will present two new control structures:  the while statement and the for statement.  These structures facilitate iteration, execution of a statement or block of statements repeatedly. Take the Quiz: Test your knowledge with our interactive \u201cPython Conditional Statements\u201d quiz. Upon completion you will receive a score so you can track your learning progress over time:",
    "preview": false,
    "links": [
      "#introduction-to-the-if-statement",
      "#grouping-statements-indentation-and-blocks",
      "#python-its-all-about-the-indentation",
      "#what-do-other-languages-do",
      "#which-is-better",
      "#the-else-and-elif-clauses",
      "#one-line-if-statements",
      "#conditional-expressions-pythons-ternary-operator",
      "#the-python-pass-statement",
      "#conclusion",
      "/account/join/",
      "/courses/python-conditional-statements/",
      "https://en.wikipedia.org/wiki/Control_flow",
      "/quizzes/python-conditional-statements/",
      "#introduction-to-the-if-statement",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-operators-expressions/#logical-operators",
      "/account/join/",
      "#grouping-statements-indentation-and-blocks",
      "#python-its-all-about-the-indentation",
      "https://en.wikipedia.org/wiki/Off-side_rule",
      "https://en.wikipedia.org/wiki/Off-side_rule#Off-side_rule_languages",
      "https://realpython.com/python-program-structure/#whitespace-as-indentation",
      "https://files.realpython.com/media/t.78f3bacaa261.png",
      "https://realpython.com/python-print/",
      "https://realpython.com/courses/python-print/",
      "/account/join/",
      "#what-do-other-languages-do",
      "https://realpython.com/oop-in-python-vs-java/",
      "https://en.wikipedia.org/wiki/List_of_programming_languages_by_type#Curly-bracket_languages",
      "https://files.realpython.com/media/t.7dbd895afc69.png",
      "#which-is-better",
      "#the-else-and-elif-clauses",
      "https://realpython.com/python-dicts/#built-in-dictionary-methods",
      "https://realpython.com/python-variables/",
      "/account/join/",
      "#one-line-if-statements",
      "https://www.python.org/dev/peps/pep-0008/#other-recommendations",
      "#conditional-expressions-pythons-ternary-operator",
      "https://www.python.org/dev/peps/pep-0308",
      "https://realpython.com/python-min-and-max/",
      "https://realpython.com/python-operators-expressions/#compound-logical-expressions-and-short-circuit-evaluation",
      "/account/join/",
      "#the-python-pass-statement",
      "https://realpython.com/python-pass/",
      "#conclusion",
      "/quizzes/python-conditional-statements/",
      "https://realpython.com/python-program-structure/",
      "#",
      "https://realpython.com/python-while-loop/",
      "/feedback/survey/article/python-conditional-statements/liked/?from=article-footer",
      "/feedback/survey/article/python-conditional-statements/disliked/?from=article-footer",
      "/courses/python-conditional-statements/"
    ]
  },
  {
    "id": 97,
    "title": "Python Program Lexical Structure",
    "url": "https://realpython.com/python-program-structure/",
    "pub_date": "2018-09-03T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial you'll dig deeper into Python's lexical structure and start arranging code into more complex groupings. You'll learn about the syntactic elements that comprise statements, the basic units that make up a Python program.",
    "text": "Conclusion\n This tutorial introduced you to Python program lexical structure.  You learned what constitutes a valid Python statement and how to use implicit and explicit line continuation to write a statement that spans multiple lines.  You also learned about commenting Python code, and about use of whitespace to enhance readability.Next, you will learn how to group statements into more complex decision-making constructs using conditional statements. Take the Quiz: Test your knowledge with our interactive \u201cPython Program Structure\u201d quiz. Upon completion you will receive a score so you can track your learning progress over time:",
    "preview": false,
    "links": [
      "#python-statements",
      "#line-continuation",
      "#implicit-line-continuation",
      "#explicit-line-continuation",
      "#multiple-statements-per-line",
      "#comments",
      "#whitespace",
      "#whitespace-as-indentation",
      "#conclusion",
      "/account/join/",
      "/quizzes/python-program-structure/",
      "#python-statements",
      "https://realpython.com/python-operators-expressions/",
      "/account/join/",
      "#line-continuation",
      "https://files.realpython.com/media/line-wrap.d1637102a183.png",
      "https://www.python.org/dev/peps/pep-0008",
      "https://www.python.org/dev/peps/pep-0008/#maximum-line-length",
      "https://www.python.org/dev/peps",
      "#implicit-line-continuation",
      "#parentheses",
      "#curly-braces",
      "#square-brackets",
      "/account/join/",
      "#explicit-line-continuation",
      "https://realpython.com/invalid-syntax-python/",
      "#multiple-statements-per-line",
      "https://www.python.org/dev/peps/pep-0008/?#other-recommendations",
      "#comments",
      "https://realpython.com/c-for-python-programmers/",
      "https://realpython.com/oop-in-python-vs-java/",
      "https://realpython.com/documenting-python-code/#documenting-your-python-code-base-using-docstrings",
      "https://www.python.org/dev/peps/pep-0008/?#block-comments",
      "https://realpython.com/documenting-python-code",
      "/account/join/",
      "#whitespace",
      "https://realpython.com/python-keywords/",
      "https://realpython.com/python-encodings-guide/",
      "https://www.python.org/dev/peps/pep-0008/?#whitespace-in-expressions-and-statements",
      "/account/join/",
      "#whitespace-as-indentation",
      "#conclusion",
      "/quizzes/python-program-structure/",
      "https://realpython.com/python-sets/",
      "#",
      "https://realpython.com/python-conditional-statements/",
      "/feedback/survey/article/python-program-structure/liked/?from=article-footer",
      "/feedback/survey/article/python-program-structure/disliked/?from=article-footer"
    ]
  },
  {
    "id": 98,
    "title": "Sets in Python",
    "url": "https://realpython.com/python-sets/",
    "pub_date": "2018-08-20T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial you'll learn how to work effectively with Python's set data type. You'll see how to define set objects in Python and discover the operations that they support and by the end of the tutorial you'll have a good feel for when a set is an appropriate choice in your own programs.",
    "text": "Conclusion\n In this tutorial, you learned how to define set objects in Python, and you became familiar with the functions, operators, and methods that can be used to work with sets.You should now be comfortable with the basic built-in data types that Python provides.Next, you will begin to explore how the code that operates on those objects is organized and structured in a Python program. Take the Quiz: Test your knowledge with our interactive \u201cPython Sets\u201d quiz. Upon completion you will receive a score so you can track your learning progress over time:",
    "preview": false,
    "links": [
      "#defining-a-set",
      "#set-size-and-membership",
      "#operating-on-a-set",
      "#operators-vs-methods",
      "#available-operators-and-methods",
      "#modifying-a-set",
      "#augmented-assignment-operators-and-methods",
      "#other-methods-for-modifying-sets",
      "#frozen-sets",
      "#conclusion",
      "/account/join/",
      "/courses/sets-python/",
      "https://files.realpython.com/media/t.8b7abb515ae8.png",
      "/quizzes/python-sets/",
      "#defining-a-set",
      "https://realpython.com/python-mutable-vs-immutable-types/",
      "https://realpython.com/python-strings/",
      "https://realpython.com/python-boolean/",
      "https://realpython.com/python-numbers/",
      "/account/join/",
      "#set-size-and-membership",
      "https://realpython.com/python-in-operator/",
      "#operating-on-a-set",
      "https://en.wikipedia.org/wiki/Set_(mathematics)#Basic_operations",
      "#operators-vs-methods",
      "/account/join/",
      "#available-operators-and-methods",
      "https://files.realpython.com/media/t.ca57b915cec6.png",
      "https://files.realpython.com/media/t.9c6d33717cdc.png",
      "https://files.realpython.com/media/t.a90b4c323d99.png",
      "https://files.realpython.com/media/t.b37d6f78f99a.png",
      "https://en.wikipedia.org/wiki/Symmetric_difference",
      "https://files.realpython.com/media/t.604de51646cc.png",
      "/account/join/",
      "#modifying-a-set",
      "#augmented-assignment-operators-and-methods",
      "https://realpython.com/python-assignment-operator/#augmented-assignment-operators-in-python",
      "/account/join/",
      "#other-methods-for-modifying-sets",
      "/account/join/",
      "#frozen-sets",
      "https://realpython.com/python-dicts",
      "#conclusion",
      "/quizzes/python-sets/",
      "https://realpython.com/python-dicts/",
      "#",
      "https://realpython.com/python-program-structure/",
      "/feedback/survey/article/python-sets/liked/?from=article-footer",
      "/feedback/survey/article/python-sets/disliked/?from=article-footer",
      "/courses/sets-python/"
    ]
  },
  {
    "id": 99,
    "title": "Dictionaries in Python",
    "url": "https://realpython.com/python-dicts/",
    "pub_date": "2018-08-06T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this Python dictionaries tutorial, you'll cover the basic characteristics and learn how to access and manage dictionary data. Once you have finished this tutorial, you should have a good sense of when a dictionary is the appropriate data type to use, and how to do so.",
    "text": "Conclusion\n In this tutorial, you covered the basic properties of the Python dictionary and learned how to access and manipulate dictionary data.Lists and dictionaries are two of the most frequently used Python types.  As you have seen, they have several similarities, but differ in how their elements are accessed.  Lists elements are accessed by numerical index based on order, and dictionary elements are accessed by keyBecause of this difference, lists and dictionaries tend to be appropriate for different circumstances.  You should now have a good feel for which, if either, would be best for a given situation.Next you will learn about Python sets.  The set is another composite data type, but it is quite different from either a list or dictionary. Take the Quiz: Test your knowledge with our interactive \u201cPython Dictionaries\u201d quiz. Upon completion you will receive a score so you can track your learning progress over time:",
    "preview": false,
    "links": [
      "#defining-a-dictionary",
      "#accessing-dictionary-values",
      "#dictionary-keys-vs-list-indices",
      "#building-a-dictionary-incrementally",
      "#restrictions-on-dictionary-keys",
      "#restrictions-on-dictionary-values",
      "#operators-and-built-in-functions",
      "#built-in-dictionary-methods",
      "#dclear",
      "#dgetkey-default",
      "#ditems",
      "#dkeys",
      "#dvalues",
      "#dpopkey-default",
      "#dpopitem",
      "#dupdateobj",
      "#conclusion",
      "/account/join/",
      "/courses/dictionaries-python/",
      "https://realpython.com/python-data-types/",
      "/quizzes/python-dicts/",
      "#defining-a-dictionary",
      "https://files.realpython.com/media/t.b3e3d8f2d100.png",
      "https://realpython.com/sort-python-dictionary/",
      "/account/join/",
      "#accessing-dictionary-values",
      "#dictionary-keys-vs-list-indices",
      "https://realpython.com/python-keyerror/",
      "https://realpython.com/courses/immutability-python/",
      "https://realpython.com/python37-new-features/#the-order-of-dictionaries-is-guaranteed",
      "/account/join/",
      "#building-a-dictionary-incrementally",
      "https://realpython.com/python-boolean/",
      "#restrictions-on-dictionary-keys",
      "https://realpython.com/python-lists-tuples/#defining-and-using-tuples",
      "https://realpython.com/python-mutable-vs-immutable-types/",
      "https://docs.python.org/3/glossary.html#term-hashable",
      "https://realpython.com/python-hash-table/#understand-the-hash-function",
      "/account/join/",
      "#restrictions-on-dictionary-values",
      "#operators-and-built-in-functions",
      "https://realpython.com/python-strings",
      "https://realpython.com/python-lists-tuples/#python-lists",
      "https://realpython.com/python-lists-tuples/#python-tuples",
      "#built-in-dictionary-methods",
      "#dclear",
      "/account/join/",
      "#dgetkey-default",
      "#ditems",
      "#dkeys",
      "#dvalues",
      "/account/join/",
      "#dpopkey-default",
      "#dpopitem",
      "https://realpython.com/iterate-through-dictionary-python/",
      "#dupdateobj",
      "/account/join/",
      "#conclusion",
      "/quizzes/python-dicts/",
      "https://realpython.com/python-lists-tuples/",
      "#",
      "https://realpython.com/python-sets/",
      "/feedback/survey/article/python-dicts/liked/?from=article-footer",
      "/feedback/survey/article/python-dicts/disliked/?from=article-footer",
      "/courses/dictionaries-python/"
    ]
  },
  {
    "id": 100,
    "title": "Lists and Tuples in Python",
    "url": "https://realpython.com/python-lists-tuples/",
    "pub_date": "2018-07-18T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "You'll cover the important characteristics of lists and tuples in Python 3. You'll learn how to define them and how to manipulate them. When you're finished, you should have a good feel for when and how to use these object types in a Python program.",
    "text": "Conclusion\n This tutorial covered the basic properties of Python lists and tuples, and how to manipulate them.  You will use these extensively in your Python programming.One of the chief characteristics of a list is that it is ordered.  The order of the elements in a list is an intrinsic property of that list and does not change, unless the list itself is modified.  (The same is true of tuples, except of course they can\u2019t be modified.)The next tutorial will introduce you to the Python dictionary: a composite data type that is unordered.  Read on! Take the Quiz: Test your knowledge with our interactive \u201cPython Lists and Tuples\u201d quiz. Upon completion you will receive a score so you can track your learning progress over time:",
    "preview": false,
    "links": [
      "#python-lists",
      "#lists-are-ordered",
      "#lists-can-contain-arbitrary-objects",
      "#list-elements-can-be-accessed-by-index",
      "#lists-can-be-nested",
      "#lists-are-mutable",
      "#lists-are-dynamic",
      "#python-tuples",
      "#defining-and-using-tuples",
      "#tuple-assignment-packing-and-unpacking",
      "#conclusion",
      "/account/join/",
      "/courses/lists-tuples-python/",
      "https://realpython.com/python-data-types/",
      "/quizzes/python-lists-tuples/",
      "#python-lists",
      "/account/join/",
      "#lists-are-ordered",
      "#lists-can-contain-arbitrary-objects",
      "#list-elements-can-be-accessed-by-index",
      "https://files.realpython.com/media/t.eb0b38e642c5.png",
      "https://files.realpython.com/media/t.c11ea56e8ca2.png",
      "https://realpython.com/python-in-operator/",
      "https://realpython.com/len-python-function/",
      "https://realpython.com/python-min-and-max/",
      "https://realpython.com/python-variables/",
      "/account/join/",
      "#lists-can-be-nested",
      "https://files.realpython.com/media/t.08554d94a1e5.png",
      "https://realpython.com/python-recursion/",
      "/account/join/",
      "#lists-are-mutable",
      "https://realpython.com/courses/immutability-python/",
      "https://realpython.com/python-mutable-vs-immutable-types/",
      "#modifying-a-single-list-value",
      "https://realpython.com/python-strings/#modifying-strings]",
      "#modifying-multiple-list-values",
      "https://realpython.com/python-assignment-operator/#updating-lists-through-indices-and-slices",
      "#prepending-or-appending-items-to-a-list",
      "https://realpython.com/python-assignment-operator/#augmented-assignment-operators-in-python",
      "#methods-that-modify-a-list",
      "https://realpython.com/python-append/",
      "/account/join/",
      "#lists-are-dynamic",
      "#python-tuples",
      "#defining-and-using-tuples",
      "https://realpython.com/python-repl/",
      "/account/join/",
      "#tuple-assignment-packing-and-unpacking",
      "https://files.realpython.com/media/t.feb20d10b75d.png",
      "https://realpython.com/python-assignment-operator/#unpacking-iterables",
      "https://files.realpython.com/media/t.629d7402a412.png",
      "/account/join/",
      "#conclusion",
      "/quizzes/python-lists-tuples/",
      "https://realpython.com/python-strings/",
      "#",
      "https://realpython.com/python-dicts/",
      "/feedback/survey/article/python-lists-tuples/liked/?from=article-footer",
      "/feedback/survey/article/python-lists-tuples/disliked/?from=article-footer",
      "/courses/lists-tuples-python/"
    ]
  },
  {
    "id": 101,
    "title": "Strings and Character Data in Python",
    "url": "https://realpython.com/python-strings/",
    "pub_date": "2018-07-09T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this tutorial you'll learn how to use Python's rich set of operators, functions, and methods for working with strings. You'll learn how to access and extract portions of strings, and also become familiar with the methods that are available to manipulate and modify string data in Python 3.",
    "text": "Conclusion\n This tutorial provided an in-depth look at the many different mechanisms Python provides for string handling, including string operators, built-in functions, indexing, slicing, and built-in methods. You also were introduced to the bytes and bytearray types.These types are the first types you have examined that are composite\u2014built from a collection of smaller parts.  Python provides several composite built-in types.  In the next tutorial, you will explore two of the most frequently used:  lists and tuples. Take the Quiz: Test your knowledge with our interactive \u201cPython Strings and Character Data\u201d quiz. Upon completion you will receive a score so you can track your learning progress over time:",
    "preview": false,
    "links": [
      "#string-manipulation",
      "#string-operators",
      "#built-in-string-functions",
      "#string-indexing",
      "#string-slicing",
      "#specifying-a-stride-in-a-string-slice",
      "#interpolating-variables-into-a-string",
      "#modifying-strings",
      "#built-in-string-methods",
      "#bytes-objects",
      "#defining-a-literal-bytes-object",
      "#defining-a-bytes-object-with-the-built-in-bytes-function",
      "#operations-on-bytes-objects",
      "#bytearray-objects",
      "#conclusion",
      "/account/join/",
      "/courses/python-strings/",
      "https://realpython.com/python-data-types/",
      "/quizzes/python-strings/",
      "#string-manipulation",
      "/account/join/",
      "#string-operators",
      "https://realpython.com/python-operators-expressions/",
      "#the-operator",
      "#the-operator_1",
      "https://realpython.com/python-variables/",
      "#the-in-operator",
      "https://realpython.com/python-in-operator/",
      "https://realpython.com/python-in-operator/#pythons-not-in-operator",
      "#built-in-string-functions",
      "https://realpython.com/python-data-types/",
      "#ordc",
      "https://realpython.com/python-numbers/",
      "https://en.wikipedia.org/wiki/ASCII",
      "http://www.unicode.org/standard/WhatIsUnicode.html",
      "https://realpython.com/python-encodings-guide/",
      "https://docs.python.org/3/howto/unicode.html#python-s-unicode-support",
      "https://realpython.com/courses/python-unicode/",
      "#chrn",
      "/account/join/",
      "#string-indexing",
      "https://files.realpython.com/media/t.f398a9e25af0.png",
      "https://files.realpython.com/media/t.5089888b3d9f.png",
      "#string-slicing",
      "https://realpython.com/python-string-contains-substring/",
      "https://files.realpython.com/media/t.ed50396b1e71.png",
      "/account/join/",
      "#specifying-a-stride-in-a-string-slice",
      "https://files.realpython.com/media/t.1fb308cf7573.png",
      "https://files.realpython.com/media/t.8a1e853f9509.png",
      "#interpolating-variables-into-a-string",
      "https://realpython.com/python-f-strings/",
      "/account/join/",
      "#modifying-strings",
      "https://realpython.com/python-mutable-vs-immutable-types/#immutable-built-in-data-types-in-python",
      "https://realpython.com/python-mutable-vs-immutable-types/#mutable-built-in-data-types-in-python",
      "#built-in-string-methods",
      "https://realpython.com/python-variables/",
      "#case-conversion",
      "#find-and-replace",
      "#character-classification",
      "https://realpython.com/python-keywords/",
      "https://realpython.com/python-modules-packages/",
      "https://docs.python.org/3/library/stdtypes.html#str.isascii",
      "#string-formatting",
      "https://realpython.com/replace-string-python/",
      "#converting-between-strings-and-lists",
      "https://realpython.com/null-in-python/",
      "/account/join/",
      "#bytes-objects",
      "https://en.wikipedia.org/wiki/Byte",
      "#defining-a-literal-bytes-object",
      "#defining-a-bytes-object-with-the-built-in-bytes-function",
      "http://www.unicode.org/standard/WhatIsUnicode.html",
      "/account/join/",
      "#operations-on-bytes-objects",
      "https://realpython.com/instance-class-and-static-methods-demystified/",
      "https://realpython.com/python3-object-oriented-programming/",
      "/account/join/",
      "#bytearray-objects",
      "#conclusion",
      "/quizzes/python-strings/",
      "https://realpython.com/python-operators-expressions/",
      "#",
      "https://realpython.com/python-lists-tuples/",
      "/feedback/survey/article/python-strings/liked/?from=article-footer",
      "/feedback/survey/article/python-strings/disliked/?from=article-footer",
      "/courses/python-strings/"
    ]
  },
  {
    "id": 102,
    "title": "Python String Formatting Best Practices",
    "url": "https://realpython.com/python-string-formatting/",
    "pub_date": "2018-07-04T14:00:00+00:00",
    "tags": [
      "python",
      "best-practices",
      "basics"
    ],
    "description": "Learn the four main approaches to string formatting in Python, as well as their strengths and weaknesses. You'll also get a simple rule of thumb for how to pick the best general purpose string formatting approach in your own programs.",
    "text": "Which String Formatting Method Should You Use?\n I totally get that having so much choice for how to format your strings in Python can feel very confusing. This is an excellent cue to bust out this handy flowchart infographic I\u2019ve put together for you:This flowchart is based on the rule of thumb that I apply when I\u2019m writing Python:Python String Formatting Rule of Thumb: If your format strings are user-supplied, use Template Strings (#4) to avoid security issues. Otherwise, use Literal String Interpolation/f-Strings (#3) if you\u2019re on Python 3.6+, and \u201cNew Style\u201d str.format (#2) if you\u2019re not.",
    "preview": false,
    "links": [
      "#1-old-style-string-formatting-operator",
      "#2-new-style-string-formatting-strformat",
      "#3-string-interpolation-f-strings-python-36",
      "#4-template-strings-standard-library",
      "#which-string-formatting-method-should-you-use",
      "#key-takeaways",
      "/account/join/",
      "/courses/python-string-formatting-tips-best-practices/",
      "https://www.python.org/dev/peps/pep-0020/",
      "https://realpython.com/python-variables/",
      "https://realpython.com/python-constants/",
      "https://realpython.com/python-strings/",
      "#1-old-style-string-formatting-operator",
      "https://realpython.com/c-for-python-programmers/",
      "https://docs.python.org/3/library/stdtypes.html#old-string-formatting",
      "/account/join/",
      "#2-new-style-string-formatting-strformat",
      "https://realpython.com/python-formatted-output/",
      "https://docs.python.org/3/library/stdtypes.html#str.format",
      "https://docs.python.org/3/library/string.html#string-formatting",
      "https://docs.python.org/3/library/stdtypes.html?highlight=sprintf#printf-style-string-formatting",
      "https://lists.gt.net/python/dev/969817",
      "https://bugs.python.org/issue14123",
      "https://docs.python.org/3/library/stdtypes.html?highlight=sprintf#printf-style-string-formatting",
      "#3-string-interpolation-f-strings-python-36",
      "https://dbader.org/blog/cool-new-features-in-python-3-6",
      "https://realpython.com/python-f-strings/",
      "https://bugs.python.org/issue27078",
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals",
      "https://realpython.com/python-f-strings/",
      "/account/join/",
      "#4-template-strings-standard-library",
      "https://docs.python.org/3/library/string.html",
      "http://lucumr.pocoo.org/2016/12/29/careful-with-str-format/",
      "https://realpython.com/python-input-output/",
      "#which-string-formatting-method-should-you-use",
      "https://files.realpython.com/media/python-string-formatting-flowchart.4ecf0148fd87.png",
      "https://twitter.com/intent/tweet/?text=Python%20String%20Formatting%20Rule%20of%20Thumb&url=https://realpython.com/python-string-formatting/",
      "#4-template-strings-standard-library",
      "#3-string-interpolation-f-strings-python-36",
      "#2-new-style-string-formatting-strformat",
      "#key-takeaways",
      "/feedback/survey/article/python-string-formatting/liked/?from=article-footer",
      "/feedback/survey/article/python-string-formatting/disliked/?from=article-footer",
      "/courses/python-string-formatting-tips-best-practices/"
    ]
  },
  {
    "id": 103,
    "title": "Python Histogram Plotting: NumPy, Matplotlib, pandas & Seaborn",
    "url": "https://realpython.com/python-histograms/",
    "pub_date": "2018-07-02T14:00:00+00:00",
    "tags": [
      "data-science",
      "basics"
    ],
    "description": "In this tutorial, you'll be equipped to make production-quality, presentation-ready Python histogram plots with a range of choices and features. It's your one-stop shop for constructing & manipulating histograms with Python's scientific stack.",
    "text": "Alright, So Which Should I Use?\n At this point, you\u2019ve seen more than a handful of functions and methods to choose from for plotting a Python histogram.  How do they compare?  In short, there is no \u201cone-size-fits-all.\u201d  Here\u2019s a recap of the functions and methods you\u2019ve covered thus far, all of which relate to breaking down and representing distributions in Python:Free Bonus: Short on time? Click here to get access to a free two-page Python histograms cheat sheet that summarizes the techniques explained in this tutorial.You can also find the code snippets from this article together in one script at the Real Python materials page.With that, good luck creating histograms in the wild.  Hopefully one of the tools above will suit your needs.  Whatever you do, just don\u2019t use a pie chart.",
    "preview": false,
    "links": [
      "#histograms-in-pure-python",
      "#building-up-from-the-base-histogram-calculations-in-numpy",
      "#visualizing-histograms-with-matplotlib-and-pandas",
      "#plotting-a-kernel-density-estimate-kde",
      "#a-fancy-alternative-with-seaborn",
      "#other-tools-in-pandas",
      "#alright-so-which-should-i-use",
      "/account/join/",
      "/courses/python-histograms/",
      "https://realpython.com/python-statistics/",
      "https://realpython.com/pandas-python-explore-dataset/",
      "https://en.wikipedia.org/wiki/Probability_distribution",
      "https://files.realpython.com/media/commute_times.621e5b1ce062.png",
      "https://realpython.com/bonus/histograms-cheatsheet/",
      "#histograms-in-pure-python",
      "https://docs.python.org/3/tutorial/datastructures.html#dictionaries",
      "https://github.com/python/cpython/blob/7f1bcda9bc3c04100cb047373732db0eba00e581/Lib/collections/__init__.py#L466",
      "https://github.com/python/cpython/blob/a5c42284e69fb309bdd17ee8c1c120d1be383012/Modules/_collectionsmodule.c#L2250",
      "https://realpython.com/python-variables/",
      "https://docs.python.org/tutorial/inputoutput.html#fancier-output-formatting",
      "https://realpython.com/python-sort/",
      "https://realpython.com/introduction-to-python-generators/",
      "https://docs.python.org/library/random.html#random.seed",
      "https://en.wikipedia.org/wiki/Pseudorandom_number_generator",
      "https://realpython.com/python-random/",
      "https://en.wikipedia.org/wiki/Mersenne_Twister",
      "/account/join/",
      "#building-up-from-the-base-histogram-calculations-in-numpy",
      "https://en.wikipedia.org/wiki/Probability_density_function",
      "https://realpython.com/numpy-array-programming/",
      "https://en.wikipedia.org/wiki/Laplace_distribution",
      "https://docs.scipy.org/doc/numpy/reference/generated/numpy.histogram.html",
      "https://github.com/numpy/numpy/blob/6a58e25703cbecb6786faa09a04ae2ec8221348b/numpy/lib/function_base.py#L432-L844",
      "https://docs.scipy.org/doc/numpy/reference/generated/numpy.bincount.html",
      "https://docs.scipy.org/doc/numpy/reference/generated/numpy.searchsorted.html",
      "#visualizing-histograms-with-matplotlib-and-pandas",
      "https://realpython.com/python-modules-packages/",
      "https://realpython.com/python-matplotlib-guide/",
      "https://files.realpython.com/media/my_very_own_histogram.d411ea1cb95c.png",
      "http://docs.astropy.org/en/stable/visualization/histogram.html",
      "https://github.com/pandas-dev/pandas/blob/cbec58eacd8e9cd94b7f42351b8de4559c250909/pandas/plotting/_core.py#L1310",
      "https://files.realpython.com/media/commute_times.621e5b1ce062.png",
      "https://realpython.com/pandas-dataframe/",
      "/account/join/",
      "#plotting-a-kernel-density-estimate-kde",
      "https://files.realpython.com/media/a_vs_b.7528322a9e65.png",
      "https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.gaussian_kde.html",
      "https://files.realpython.com/media/analytic_v_estimated.44711de28f1d.png",
      "https://docs.scipy.org/doc/scipy/reference/stats.html",
      "https://matplotlib.org/users/usetex.html",
      "#a-fancy-alternative-with-seaborn",
      "https://files.realpython.com/media/seaborn_distplot.b10bb7c29d85.png",
      "https://files.realpython.com/media/seaborn_fitted.106107494ccf.png",
      "/account/join/",
      "#other-tools-in-pandas",
      "https://pandas.pydata.org/pandas-docs/stable/generated/pandas.cut.html",
      "https://github.com/pandas-dev/pandas/tree/master/pandas/_libs",
      "#alright-so-which-should-i-use",
      "https://docs.python.org/3.6/library/collections.html#collections.Counter",
      "https://docs.scipy.org/doc/numpy/reference/generated/numpy.histogram.html",
      "https://docs.scipy.org/doc/numpy/reference/generated/numpy.bincount.html",
      "https://docs.scipy.org/doc/numpy/reference/generated/numpy.digitize.html",
      "https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.plot.hist.html",
      "https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.plot.hist.html",
      "https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.value_counts.html",
      "https://pandas.pydata.org/pandas-docs/stable/generated/pandas.cut.html",
      "https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.plot.kde.html",
      "https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.plot.kde.html",
      "https://pandas.pydata.org/pandas-docs/stable/visualization.html",
      "https://matplotlib.org/api/_as_gen/matplotlib.pyplot.hist.html",
      "https://realpython.com/python-matplotlib-guide/",
      "https://seaborn.pydata.org/generated/seaborn.distplot.html",
      "https://realpython.com/bonus/histograms-cheatsheet/",
      "https://github.com/realpython/materials/tree/master/histograms",
      "http://www.businessinsider.com/pie-charts-are-the-worst-2013-6",
      "/feedback/survey/article/python-histograms/liked/?from=article-footer",
      "/feedback/survey/article/python-histograms/disliked/?from=article-footer",
      "/courses/python-histograms/"
    ]
  },
  {
    "id": 104,
    "title": "Operators and Expressions in Python",
    "url": "https://realpython.com/python-operators-expressions/",
    "pub_date": "2018-06-20T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "You'll see how calculations can be performed on objects in Python. By the end of this tutorial, you will be able to create complex expressions by combining Python objects and operators.",
    "text": "Conclusion\n In this tutorial, you learned about the diverse operators Python supports to combine objects into expressions.Most of the examples you have seen so far have involved only simple atomic data, but you saw a brief introduction to the string data type.  The next tutorial will explore string objects in much more detail. Take the Quiz: Test your knowledge with our interactive \u201cPython Operators and Expressions\u201d quiz. Upon completion you will receive a score so you can track your learning progress over time:",
    "preview": false,
    "links": [
      "#arithmetic-operators",
      "#comparison-operators",
      "#equality-comparison-on-floating-point-values",
      "#logical-operators",
      "#logical-expressions-involving-boolean-operands",
      "#evaluation-of-non-boolean-values-in-boolean-context",
      "#logical-expressions-involving-non-boolean-operands",
      "#compound-logical-expressions-and-short-circuit-evaluation",
      "#idioms-that-exploit-short-circuit-evaluation",
      "#chained-comparisons",
      "#bitwise-operators",
      "#identity-operators",
      "#operator-precedence",
      "#augmented-assignment-operators",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/python-variables",
      "/quizzes/python-operators-expressions/",
      "#arithmetic-operators",
      "/account/join/",
      "#comparison-operators",
      "https://realpython.com/python-is-identity-vs-equality/",
      "https://realpython.com/python-boolean/",
      "#equality-comparison-on-floating-point-values",
      "https://realpython.com/python-data-types/#floating-point-numbers",
      "https://realpython.com/python-absolute-value/#using-the-built-in-abs-function-with-numbers",
      "https://realpython.com/python-absolute-value/",
      "https://realpython.com/python-numbers/",
      "#logical-operators",
      "#logical-expressions-involving-boolean-operands",
      "#not-and-boolean-operands",
      "#or-and-boolean-operands",
      "#and-and-boolean-operands",
      "/account/join/",
      "#evaluation-of-non-boolean-values-in-boolean-context",
      "https://realpython.com/python-data-types/",
      "https://realpython.com/python-keywords/",
      "https://realpython.com/null-in-python/",
      "#numeric-value",
      "#string",
      "#built-in-composite-data-object",
      "#the-none-keyword",
      "#logical-expressions-involving-non-boolean-operands",
      "#not-and-non-boolean-operands",
      "#or-and-non-boolean-operands",
      "#and-and-non-boolean-operands",
      "/account/join/",
      "#compound-logical-expressions-and-short-circuit-evaluation",
      "#compound-or-expressions",
      "https://en.wikipedia.org/wiki/Short-circuit_evaluation",
      "#compound-and-expressions",
      "/account/join/",
      "#idioms-that-exploit-short-circuit-evaluation",
      "#avoiding-an-exception",
      "https://realpython.com/python-exceptions/",
      "#selecting-a-default-value",
      "https://realpython.com/python-assignment-operator/",
      "https://realpython.com/python-strings/",
      "/account/join/",
      "#chained-comparisons",
      "#bitwise-operators",
      "https://realpython.com/python-bitwise-operators/",
      "#identity-operators",
      "https://realpython.com/python-is-identity-vs-equality/",
      "/account/join/",
      "#operator-precedence",
      "https://realpython.com/python-modulo-operator/",
      "/account/join/",
      "#augmented-assignment-operators",
      "https://realpython.com/python-assignment-operator/#augmented-assignment-operators-in-python",
      "#conclusion",
      "/quizzes/python-operators-expressions/",
      "https://realpython.com/python-variables/",
      "#",
      "https://realpython.com/python-strings/",
      "/feedback/survey/article/python-operators-expressions/liked/?from=article-footer",
      "/feedback/survey/article/python-operators-expressions/disliked/?from=article-footer"
    ]
  },
  {
    "id": 105,
    "title": "Variables in Python",
    "url": "https://realpython.com/python-variables/",
    "pub_date": "2018-06-12T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "Learn how every item of data in a Python program can be described by the abstract term \"object,\" and how to manipulate objects using symbolic names called \"variables.\"",
    "text": "Conclusion\n This tutorial covered the basics of Python variables, including object references and identity, and naming of Python identifiers.You now have a good understanding of some of Python\u2019s data types and know how to create variables that reference objects of those types.Next, you will see how to combine data objects into expressions involving various operations. Take the Quiz: Test your knowledge with our interactive \u201cPython Variables\u201d quiz. Upon completion you will receive a score so you can track your learning progress over time:",
    "preview": false,
    "links": [
      "#variable-assignment",
      "#variable-types-in-python",
      "#object-references",
      "#object-identity",
      "#variable-names",
      "#reserved-words-keywords",
      "#conclusion",
      "/account/join/",
      "/courses/variables-python/",
      "https://realpython.com/python-data-types/",
      "https://realpython.com/bonus/python-cheat-sheet-short/",
      "/quizzes/python-variables/",
      "#variable-assignment",
      "https://realpython.com/python-print/",
      "/account/join/",
      "#variable-types-in-python",
      "#object-references",
      "https://realpython.com/python3-object-oriented-programming/",
      "https://realpython.com/pointers-in-python/",
      "https://files.realpython.com/media/t.2d7bcb9afaaf.png",
      "https://files.realpython.com/media/t.d368386b8423.png",
      "https://files.realpython.com/media/t.d476d91592cd.png",
      "https://files.realpython.com/media/t.344ab0b3aa8c.png",
      "https://en.wikipedia.org/wiki/Garbage_collection_%28computer_science%29",
      "/account/join/",
      "#object-identity",
      "#variable-names",
      "https://realpython.com/python-encodings-guide/",
      "https://www.python.org/dev/peps/pep-0008/",
      "https://www.python.org/dev/peps/pep-0008/#naming-conventions",
      "/account/join/",
      "#reserved-words-keywords",
      "https://realpython.com/python-keywords/",
      "https://realpython.com/null-in-python/",
      "#conclusion",
      "/quizzes/python-variables/",
      "https://realpython.com/python-data-types/",
      "#",
      "https://realpython.com/python-operators-expressions/",
      "/feedback/survey/article/python-variables/liked/?from=article-footer",
      "/feedback/survey/article/python-variables/disliked/?from=article-footer",
      "/courses/variables-python/"
    ]
  },
  {
    "id": 106,
    "title": "Basic Data Types in Python",
    "url": "https://realpython.com/python-data-types/",
    "pub_date": "2018-06-05T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "Learn the basic data types that are built into Python, like numbers, strings, and Booleans. You'll also get an overview of Python's built-in functions.",
    "text": "Conclusion\n In this tutorial, you learned about the built-in data types and functions Python provides.The examples given so far have all manipulated and displayed only constant values.  In most programs, you are usually going to want to create objects that change in value as the program executes.Head to the next tutorial to learn about Python variables. Take the Quiz: Test your knowledge with our interactive \u201cBasic Data Types in Python\u201d quiz. Upon completion you will receive a score so you can track your learning progress over time:",
    "preview": false,
    "links": [
      "#integers",
      "#floating-point-numbers",
      "#complex-numbers",
      "#strings",
      "#escape-sequences-in-strings",
      "#raw-strings",
      "#triple-quoted-strings",
      "#boolean-type-boolean-context-and-truthiness",
      "#built-in-functions",
      "#math",
      "#type-conversion",
      "#iterables-and-iterators",
      "#composite-data-type",
      "#classes-attributes-and-inheritance",
      "#inputoutput",
      "#variables-references-and-scope",
      "#miscellaneous",
      "#conclusion",
      "/account/join/",
      "/courses/python-data-types/",
      "https://realpython.com/interacting-with-python/",
      "https://realpython.com/courses/python-print/",
      "https://realpython.com/bonus/python-cheat-sheet-short/",
      "/quizzes/python-data-types/",
      "#integers",
      "https://en.wikipedia.org/wiki/Binary_number",
      "https://en.wikipedia.org/wiki/Octal",
      "https://en.wikipedia.org/wiki/Hexadecimal",
      "/account/join/",
      "#floating-point-numbers",
      "https://en.wikipedia.org/wiki/Scientific_notation",
      "https://en.wikipedia.org/wiki/IEEE_754_revision",
      "https://docs.python.org/3.6/tutorial/floatingpoint.html",
      "#complex-numbers",
      "https://realpython.com/python-complex-numbers/",
      "#strings",
      "https://realpython.com/python-strings/",
      "https://realpython.com/invalid-syntax-python/",
      "#escape-sequences-in-strings",
      "#suppressing-special-character-meaning",
      "https://stackoverflow.com/questions/48693600/what-does-the-newline-escape-sequence-mean-in-python",
      "#applying-special-meaning-to-characters",
      "/account/join/",
      "#raw-strings",
      "#triple-quoted-strings",
      "#boolean-type-boolean-context-and-truthiness",
      "https://realpython.com/python-boolean/",
      "#built-in-functions",
      "https://docs.python.org/3.6/library/functions.html",
      "#math",
      "https://realpython.com/python-absolute-value/#using-the-built-in-abs-function-with-numbers",
      "https://realpython.com/python-min-and-max/",
      "https://realpython.com/python-min-and-max/",
      "/account/join/",
      "#type-conversion",
      "#iterables-and-iterators",
      "https://realpython.com/python-all/",
      "https://realpython.com/any-python/",
      "https://realpython.com/python-enumerate/",
      "https://realpython.com/python-filter-function/",
      "https://realpython.com/len-python-function/",
      "https://realpython.com/python-map-function/",
      "https://realpython.com/python-sort/",
      "https://realpython.com/python-zip-function/",
      "#composite-data-type",
      "#classes-attributes-and-inheritance",
      "https://realpython.com/python-super/",
      "#inputoutput",
      "#variables-references-and-scope",
      "https://realpython.com/python-modules-packages/",
      "#miscellaneous",
      "https://realpython.com/python-eval-function/",
      "#conclusion",
      "/quizzes/python-data-types/",
      "https://realpython.com/interacting-with-python/",
      "#",
      "https://realpython.com/python-variables/",
      "/feedback/survey/article/python-data-types/liked/?from=article-footer",
      "/feedback/survey/article/python-data-types/disliked/?from=article-footer",
      "/courses/python-data-types/"
    ]
  },
  {
    "id": 107,
    "title": "Python Application Layouts: A Reference",
    "url": "https://realpython.com/python-application-layouts/",
    "pub_date": "2018-06-04T14:00:00+00:00",
    "tags": [
      "best-practices",
      "basics"
    ],
    "description": "A reference guide to common Python application layouts and project structures for command-line applications, web applications, and more.",
    "text": "Conclusions and Reminders\n Now you\u2019ve seen example layouts for a number of different application types: one-off Python scripts, installable single packages, larger applications with internal packages, Django web applications, and Flask web applications. Coming away from this guide, you will have the tools to successfully prevent coder\u2019s block by building out your application structure so that you\u2019re not staring at a blank canvas trying to figure out where to start. Because Python is largely non-opinionated when it comes to application layouts, you can customize these example layouts to your heart\u2019s content to better fit your use case. I want you to not only have an application layout reference but also come away with the understanding that these examples are neither hard-and-fast rules nor the only way to structure your application. Over time and with practice, you\u2019ll develop the ability to build and customize your own useful Python application layouts.Did I miss a use case? Do you have another application structure philosophy? Did this article help prevent coder\u2019s block? Let me know in the comments!",
    "preview": false,
    "links": [
      "#command-line-application-layouts",
      "#one-off-script",
      "#installable-single-package",
      "#application-with-internal-packages",
      "#web-application-layouts",
      "#django",
      "#flask",
      "#conclusions-and-reminders",
      "/account/join/",
      "/courses/structuring-python-application/",
      "https://realpython.com/python-command-line-arguments/",
      "https://realpython.com/tutorials/flask/",
      "https://realpython.com/tutorials/django/",
      "https://realpython.com/python-modules-packages/",
      "#command-line-application-layouts",
      "https://realpython.com/comparing-python-command-line-parsing-libraries-argparse-docopt-click/",
      "/account/join/",
      "#one-off-script",
      "https://realpython.com/courses/managing-python-dependencies/",
      "https://pypi.org/project/pip/",
      "https://realpython.com/pipenv-guide/",
      "https://realpython.com/python-git-github-intro/#gitignore",
      "https://github.com/github/gitignore",
      "https://choosealicense.com/",
      "https://en.wikipedia.org/wiki/Markdown",
      "https://en.wikipedia.org/wiki/ReStructuredText",
      "https://dbader.org/blog/write-a-great-readme-for-your-github-project",
      "https://realpython.com/pipenv-guide/",
      "https://realpython.com/python-testing/",
      "#installable-single-package",
      "https://realpython.com/python-modules-packages/",
      "https://github.com/kennethreitz/samplemod",
      "#application-with-internal-packages",
      "http://as.ynchrono.us/2007/12/filesystem-structure-of-python-project_21.html",
      "https://realpython.com/python-main-function/",
      "https://realpython.com/documenting-python-code/#documenting-your-python-code-base-using-docstrings",
      "https://realpython.com/python-cli-testing/",
      "/account/join/",
      "#web-application-layouts",
      "https://realpython.com/python-web-applications/",
      "https://www.djangoproject.com/",
      "http://flask.pocoo.org/",
      "#django",
      "https://realpython.com/learn/start-django/",
      "https://docs.djangoproject.com/en/2.0/intro/tutorial01/",
      "https://stackoverflow.com/questions/22841764/best-practice-for-django-project-working-directory-structure",
      "http://django-project-skeleton.readthedocs.io/en/latest/structure.html",
      "https://realpython.com/asins/0692915729",
      "https://realpython.com/tutorials/django/",
      "#flask",
      "http://flask.pocoo.org/docs/1.0/",
      "http://flask.pocoo.org/docs/1.0/tutorial/layout/",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://github.com/realpython/flask-boilerplate",
      "http://www.flaskboilerplate.com/",
      "https://realpython.com/tutorials/flask/",
      "/account/join/",
      "#conclusions-and-reminders",
      "/feedback/survey/article/python-application-layouts/liked/?from=article-footer",
      "/feedback/survey/article/python-application-layouts/disliked/?from=article-footer",
      "/courses/structuring-python-application/"
    ]
  },
  {
    "id": 108,
    "title": "Interacting With Python",
    "url": "https://realpython.com/interacting-with-python/",
    "pub_date": "2018-05-28T14:00:00+00:00",
    "tags": [
      "basics"
    ],
    "description": "How to actually execute Python code and run Python programs using the CPython REPL, executing script files, and integrated development environments.",
    "text": "Conclusion\n Larger applications are typically contained in script files that are passed to the Python interpreter for execution.But one of the advantages of an interpreted language is that you can run the interpreter and execute commands interactively.  Python is easy to use in this manner, and it is a great way to get your feet wet learning how the language works.The examples throughout this tutorial have been produced by direct interaction with the Python interpreter, but if you choose to use IDLE or some other available IDE, the examples should still work just fine.Continue to the next section, where you will start to explore the elements of the Python language itself.",
    "preview": false,
    "links": [
      "#hello-world",
      "#using-the-python-interpreter-interactively",
      "#starting-the-interpreter",
      "#executing-python-code",
      "#exiting-the-interpreter",
      "#running-a-python-script-from-the-command-line",
      "#interacting-with-python-through-an-ide",
      "#idle",
      "#thonny",
      "#online-python-repl-sites",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/installing-python/",
      "#hello-world",
      "https://en.wikipedia.org/wiki/%22Hello,_World!%22_program",
      "/account/join/",
      "#using-the-python-interpreter-interactively",
      "https://realpython.com/python-repl/",
      "#starting-the-interpreter",
      "https://files.realpython.com/media/python-interpreter-window.24c17cb2fd60.png",
      "https://realpython.com/installing-python/",
      "#executing-python-code",
      "https://files.realpython.com/media/celebration.e98e35f3e140.png",
      "/account/join/",
      "#exiting-the-interpreter",
      "#running-a-python-script-from-the-command-line",
      "https://realpython.com/python-ides-code-editors-guide/",
      "https://realpython.com/python-command-line-arguments/",
      "/account/join/",
      "#interacting-with-python-through-an-ide",
      "#idle",
      "https://realpython.com/python-idle/",
      "https://en.wikipedia.org/wiki/Eric_Idle",
      "#starting-idle-in-windows",
      "#starting-idle-in-macos",
      "#starting-idle-in-linux",
      "#using-idle",
      "https://files.realpython.com/media/idle-1.ad05cbe1e2f7.png",
      "https://files.realpython.com/media/idle-2.c0a65df087ef.png",
      "https://files.realpython.com/media/idle-3.104282dbe280.png",
      "https://files.realpython.com/media/idle-4.4a4d4399093f.png",
      "https://docs.python.org/3/library/idle.html",
      "/account/join/",
      "#thonny",
      "http://thonny.org/",
      "https://files.realpython.com/media/thonny-REPL.ffb0d0a0d58d.png",
      "https://files.realpython.com/media/thonny-editor.fc8d59bbcaa7.png",
      "https://files.realpython.com/media/thonny-expr.d833fc5e3562.png",
      "http://thonny.org/",
      "https://realpython.com/python-ides-code-editors-guide/",
      "#online-python-repl-sites",
      "https://realpython.com/installing-python/#online-python-interpreters",
      "https://www.python.org",
      "https://files.realpython.com/media/psf-shell1.5e8e53654e7a.png",
      "https://files.realpython.com/media/psf-shell2.dea07e54567d.png",
      "https://www.python.org/shell",
      "https://files.realpython.com/media/psf-shell3.6e56026f9512.png",
      "http://pythonfiddle.com",
      "https://repl.it",
      "https://trinket.io",
      "/account/join/",
      "#conclusion",
      "https://realpython.com/installing-python/",
      "#",
      "https://realpython.com/python-data-types/",
      "/feedback/survey/article/interacting-with-python/liked/?from=article-footer",
      "/feedback/survey/article/interacting-with-python/disliked/?from=article-footer"
    ]
  },
  {
    "id": 109,
    "title": "Introduction to Python 3",
    "url": "https://realpython.com/python-introduction/",
    "pub_date": "2018-05-21T14:00:00+00:00",
    "tags": [
      "basics"
    ],
    "description": "An overview of the Python programming language, including a brief history of the development of Python\r\nand reasons why you might select Python as your language of choice.",
    "text": "Conclusion\n This section gave an overview of the Python programming language, including:Python is a great option, whether you are a beginning programmer looking to learn the basics, an experienced programmer designing a large application, or anywhere in between.  The basics of Python are easily grasped, and yet its capabilities are vast.Proceed to the next section to learn how to acquire and install Python on your computer.",
    "preview": false,
    "links": [
      "#why-choose-python",
      "#python-is-popular",
      "#python-is-interpreted",
      "#python-is-free",
      "#python-is-portable",
      "#python-is-simple",
      "#but-its-not-that-simple",
      "#conclusion",
      "/account/join/",
      "https://en.wikipedia.org/wiki/Usenet",
      "https://pythonclock.org",
      "https://en.wikipedia.org/wiki/Monty_Python%27s_Flying_Circus",
      "https://realpython.com/bonus/python-cheat-sheet-short/",
      "#why-choose-python",
      "/account/join/",
      "#python-is-popular",
      "https://insights.stackoverflow.com/survey/2018",
      "https://realpython.com/world-class-companies-using-python/",
      "https://insights.dice.com/2016/02/01/whats-hot-and-not-in-tech-skills/",
      "https://pypl.github.io/PYPL.html",
      "https://dbader.org/blog/why-learn-python",
      "#python-is-interpreted",
      "https://en.wikipedia.org/wiki/Interpreted_language",
      "#python-is-free",
      "#python-is-portable",
      "#python-is-simple",
      "https://realpython.com/python-keywords/",
      "/account/join/",
      "#but-its-not-that-simple",
      "https://realpython.com/python3-object-oriented-programming/",
      "#conclusion",
      "#",
      "https://realpython.com/installing-python/",
      "/feedback/survey/article/python-introduction/liked/?from=article-footer",
      "/feedback/survey/article/python-introduction/disliked/?from=article-footer"
    ]
  },
  {
    "id": 110,
    "title": "Python 3's f-Strings: An Improved String Formatting Syntax (Guide)",
    "url": "https://realpython.com/python-f-strings/",
    "pub_date": "2018-05-14T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "As of Python 3.6, f-strings are a great new way to format strings. Not only are they more readable, more concise, and less prone to error than other ways of formatting, but they are also faster! By the end of this article, you will learn how and why to start using f-strings today.",
    "text": "Further Reading\n If you\u2019d like to read an extended discussion about string interpolation, take a look at PEP 502. Also, the PEP 536 draft has some more thoughts about the future of f-strings.Free PDF Download: Python 3 Cheat SheetFor more fun with strings, check out the following articles:Happy Pythoning! Take the Quiz: Test your knowledge with our interactive \u201cPython f-Strings\u201d quiz. Upon completion you will receive a score so you can track your learning progress over time:",
    "preview": false,
    "links": [
      "#old-school-string-formatting-in-python",
      "#option-1-formatting",
      "#option-2-strformat",
      "#f-strings-a-new-and-improved-way-to-format-strings-in-python",
      "#simple-syntax",
      "#arbitrary-expressions",
      "#multiline-f-strings",
      "#speed",
      "#python-f-strings-the-pesky-details",
      "#quotation-marks",
      "#dictionaries",
      "#braces",
      "#backslashes",
      "#inline-comments",
      "#go-forth-and-format",
      "#further-reading",
      "/account/join/",
      "/courses/python-3-f-strings-improved-string-formatting-syntax/",
      "/quizzes/f-strings/",
      "#old-school-string-formatting-in-python",
      "/account/join/",
      "#option-1-formatting",
      "https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting",
      "https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting",
      "#how-to-use-formatting",
      "#why-formatting-isnt-great",
      "https://realpython.com/python-dicts/",
      "#option-2-strformat",
      "https://realpython.com/python-formatted-output/",
      "#how-to-use-strformat",
      "https://www.python.org/dev/peps/pep-3101/#controlling-formatting-on-a-per-type-basis",
      "#why-strformat-isnt-great",
      "/account/join/",
      "#f-strings-a-new-and-improved-way-to-format-strings-in-python",
      "https://www.python.org/dev/peps/pep-0498/",
      "https://docs.python.org/3/reference/lexical_analysis.html#f-strings",
      "#simple-syntax",
      "https://twitter.com/dbader_org/status/992847368440561664",
      "#arbitrary-expressions",
      "https://realpython.com/operator-function-overloading/",
      "https://mail.python.org/pipermail/python-ideas/2015-July/034726.html",
      "/account/join/",
      "#multiline-f-strings",
      "https://pep8.org/",
      "#speed",
      "https://www.python.org/dev/peps/pep-0498/#abstract",
      "https://stackoverflow.com/questions/37365311/why-are-literal-formatted-strings-so-slow-in-python-3-6-alpha-now-fixed-in-3-6",
      "https://bugs.python.org/issue27078",
      "/account/join/",
      "#python-f-strings-the-pesky-details",
      "#quotation-marks",
      "#dictionaries",
      "https://realpython.com/invalid-syntax-python/",
      "/account/join/",
      "#braces",
      "#backslashes",
      "#inline-comments",
      "#go-forth-and-format",
      "https://pythonclock.org/",
      "https://www.python.org/dev/peps/pep-0020/",
      "#further-reading",
      "https://www.python.org/dev/peps/pep-0502/",
      "https://www.python.org/dev/peps/pep-0536/",
      "https://realpython.com/bonus/python-cheat-sheet-short/",
      "https://realpython.com/python-string-formatting/",
      "https://realpython.com/python-web-scraping-practical-introduction/",
      "/quizzes/f-strings/",
      "/feedback/survey/article/python-f-strings/liked/?from=article-footer",
      "/feedback/survey/article/python-f-strings/disliked/?from=article-footer",
      "/courses/python-3-f-strings-improved-string-formatting-syntax/"
    ]
  },
  {
    "id": 111,
    "title": "Python Exceptions: An Introduction",
    "url": "https://realpython.com/python-exceptions/",
    "pub_date": "2018-04-30T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "In this beginner tutorial you'll learn what exceptions are good for in Python. You'll see how to raise exceptions and how to handle them with \"try/except\" blocks.",
    "text": "Summing Up\n After seeing the difference between syntax errors and exceptions, you learned about various ways to raise, catch, and handle exceptions in Python. In this article, you saw the following options:Free PDF Download: Python 3 Cheat SheetHopefully, this article helped you understand the basic tools that Python has to offer when dealing with exceptions.",
    "preview": false,
    "links": [
      "#exceptions-versus-syntax-errors",
      "#raising-an-exception",
      "#the-assertionerror-exception",
      "#the-try-and-except-block-handling-exceptions",
      "#the-else-clause",
      "#cleaning-up-after-using-finally",
      "#summing-up",
      "/account/join/",
      "/courses/raising-handling-exceptions/",
      "https://files.realpython.com/media/intro.8915db1758d8.png",
      "https://realpython.com/bonus/python-cheat-sheet-short/",
      "#exceptions-versus-syntax-errors",
      "https://realpython.com/invalid-syntax-python/",
      "https://docs.python.org/3/library/exceptions.html",
      "/account/join/",
      "#raising-an-exception",
      "https://files.realpython.com/media/raise.3931e8819e08.png",
      "#the-assertionerror-exception",
      "https://dbader.org/blog/python-assert-tutorial",
      "https://files.realpython.com/media/assert.f6d344f0c0b4.png",
      "#the-try-and-except-block-handling-exceptions",
      "https://files.realpython.com/media/try_except.c94eabed2c59.png",
      "https://docs.python.org/3/library/exceptions.html",
      "https://realpython.com/the-most-diabolical-python-antipattern/",
      "https://realpython.com/the-most-diabolical-python-antipattern/",
      "/account/join/",
      "#the-else-clause",
      "https://files.realpython.com/media/try_except_else.703aaeeb63d3.png",
      "#cleaning-up-after-using-finally",
      "https://files.realpython.com/media/try_except_else_finally.a7fac6c36c55.png",
      "/account/join/",
      "#summing-up",
      "https://realpython.com/bonus/python-cheat-sheet-short/",
      "/feedback/survey/article/python-exceptions/liked/?from=article-footer",
      "/feedback/survey/article/python-exceptions/disliked/?from=article-footer",
      "/courses/raising-handling-exceptions/"
    ]
  },
  {
    "id": 112,
    "title": "Python Modules and Packages \u2013 An Introduction",
    "url": "https://realpython.com/python-modules-packages/",
    "pub_date": "2018-04-17T14:00:00+00:00",
    "tags": [
      "python",
      "basics"
    ],
    "description": "This article explores Python modules and Python packages, two mechanisms that facilitate modular programming.",
    "text": "Conclusion\n In this tutorial, you covered the following topics:Free PDF Download: Python 3 Cheat SheetThis will hopefully allow you to better understand how to gain access to the functionality available in the many third-party and built-in modules available in Python.Additionally, if you are developing your own application, creating your own  modules and packages will help you organize and modularize your code, which makes coding, maintenance, and debugging easier.If you want to learn more, check out the following documentation at Python.org:Happy Pythoning!",
    "preview": false,
    "links": [
      "#python-modules-overview",
      "#the-module-search-path",
      "#the-import-statement",
      "#import-module_name",
      "#from-module_name-import-names",
      "#from-module_name-import-name-as-alt_name",
      "#import-module_name-as-alt_name",
      "#the-dir-function",
      "#executing-a-module-as-a-script",
      "#reloading-a-module",
      "#python-packages",
      "#package-initialization",
      "#importing-from-a-package",
      "#subpackages",
      "#conclusion",
      "/account/join/",
      "/courses/python-modules-packages/",
      "https://realpython.com/python-namespaces-scope/",
      "https://www.python.org/dev/peps/pep-0020",
      "https://realpython.com/bonus/python-cheat-sheet-short/",
      "#python-modules-overview",
      "https://realpython.com/regex-python/",
      "https://realpython.com/python-itertools/",
      "/account/join/",
      "#the-module-search-path",
      "https://realpython.com/python-lists-tuples/",
      "https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH",
      "https://realpython.com/add-python-to-path/",
      "#the-import-statement",
      "#import-module_name",
      "/account/join/",
      "#from-module_name-import-names",
      "#from-module_name-import-name-as-alt_name",
      "#import-module_name-as-alt_name",
      "https://realpython.com/defining-your-own-python-function/",
      "https://realpython.com/python-exceptions/",
      "/account/join/",
      "#the-dir-function",
      "#executing-a-module-as-a-script",
      "https://realpython.com/python-main-function/",
      "https://realpython.com/python-testing/",
      "/account/join/",
      "#reloading-a-module",
      "#python-packages",
      "https://files.realpython.com/media/pkg1.9af1c7aea48f.png",
      "/account/join/",
      "#package-initialization",
      "https://files.realpython.com/media/pkg2.dab97c2f9c58.png",
      "https://www.python.org/dev/peps/pep-0420",
      "https://realpython.com/python-namespace-package/",
      "#importing-from-a-package",
      "https://files.realpython.com/media/pkg3.d2160908ae77.png",
      "/account/join/",
      "#subpackages",
      "https://files.realpython.com/media/pkg4.a830d6e144bf.png",
      "#conclusion",
      "https://realpython.com/bonus/python-cheat-sheet-short/",
      "https://docs.python.org/3/reference/import.html",
      "https://docs.python.org/3/tutorial/modules.html",
      "/feedback/survey/article/python-modules-packages/liked/?from=article-footer",
      "/feedback/survey/article/python-modules-packages/disliked/?from=article-footer",
      "/courses/python-modules-packages/"
    ]
  },
  {
    "id": 113,
    "title": "Introduction to Git and GitHub for Python Developers",
    "url": "https://realpython.com/python-git-github-intro/",
    "pub_date": "2018-04-04T14:00:00+00:00",
    "tags": [
      "basics",
      "tools"
    ],
    "description": "What is Git,  what is GitHub, and what's the difference? Learn the basics of Git and GitHub from the perspective of a Pythonista in this tutorial.",
    "text": "Putting It All Together: Simple Git Workflow\n At this point, we\u2019ve reviewed several basic Git commands and how you might use them. I\u2019ll wrap up with a quick description of a possible workflow in Git. This workflow assumes you are working on your local repo and have a remote repo to which you will push changes. It can be GitHub, but it will work the same with other remote repos. It assumes you\u2019ve already cloned the repo.This is one of the more basic flows through the system. There are many, many ways to use Git, and you\u2019ve just scratched the surface with this tutorial. If you use Vim or Sublime as your editor, you might want to checkout these tutorials, which will show you how to get plugins to integrate Git into your editor:If you\u2019d like to take a deeper dive into Git, I can recommend these books:Finally, if you\u2019re interested in harnessing the power of artificial intelligence in your coding journey, then you might want to play around with GitHub Copilot.",
    "preview": false,
    "links": [
      "#what-is-git",
      "#version-control",
      "#distributed-version-control",
      "#basic-usage",
      "#creating-a-new-repo",
      "#adding-a-new-file",
      "#committing-changes",
      "#aside-the-staging-area",
      "#gitignore",
      "#what-not-to-add-to-a-git-repo",
      "#aside-what-is-a-sha",
      "#git-log",
      "#going-back-in-time-checking-out-a-particular-version-of-your-code",
      "#branching-basics",
      "#merging",
      "#rebasing",
      "#cherry-picking",
      "#working-with-remote-repos",
      "#clone",
      "#fetch",
      "#pull",
      "#push",
      "#putting-it-all-together-simple-git-workflow",
      "/account/join/",
      "/courses/python-git-github-intro/",
      "https://realpython.com/intermediate-python-project-ideas/",
      "https://git-scm.com/book/en/v2/Getting-Started-Installing-Git",
      "#what-is-git",
      "/account/join/",
      "#version-control",
      "#distributed-version-control",
      "#basic-usage",
      "#creating-a-new-repo",
      "#adding-a-new-file",
      "/account/join/",
      "#committing-changes",
      "#aside-the-staging-area",
      "https://alblue.bandlem.com/2011/10/git-tip-of-week-understanding-index.html",
      "#gitignore",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://github.com/github/gitignore/blob/master/Python.gitignore",
      "/account/join/",
      "#what-not-to-add-to-a-git-repo",
      "#aside-what-is-a-sha",
      "https://gist.github.com/masak/2415865",
      "/account/join/",
      "#git-log",
      "#going-back-in-time-checking-out-a-particular-version-of-your-code",
      "https://files.realpython.com/media/git_diag_before_checkout.05348d1952f2.png",
      "https://files.realpython.com/media/git_diag_after_checkout.ad1204812d7e.png",
      "https://git-scm.com/book/en/v2/Git-Tools-Revision-Selection",
      "/account/join/",
      "#branching-basics",
      "/account/join/",
      "#merging",
      "#rebasing",
      "#cherry-picking",
      "https://learngitbranching.js.org/",
      "#working-with-remote-repos",
      "/account/join/",
      "#clone",
      "https://github.com/jima80525/github-playground",
      "#fetch",
      "#pull",
      "#push",
      "https://stackoverflow.com/a/26005964/6843734",
      "/account/join/",
      "#putting-it-all-together-simple-git-workflow",
      "https://realpython.com/python-testing/",
      "https://realpython.com/vim-and-python-a-match-made-in-heaven/",
      "https://realpython.com/setting-up-sublime-text-3-for-full-stack-python-development/",
      "https://realpython.com/emacs-the-best-python-editor/",
      "https://git-scm.com/book/en/v2",
      "https://realpython.com/asins/1484200772/",
      "https://realpython.com/asins/1449316387/",
      "https://realpython.com/github-copilot-python/",
      "/feedback/survey/article/python-git-github-intro/liked/?from=article-footer",
      "/feedback/survey/article/python-git-github-intro/disliked/?from=article-footer",
      "/courses/python-git-github-intro/"
    ]
  },
  {
    "id": 114,
    "title": "11 Beginner Tips for Learning Python Programming",
    "url": "https://realpython.com/python-beginner-tips/",
    "pub_date": "2018-04-03T14:00:00+00:00",
    "tags": [
      "basics"
    ],
    "description": "In this article, you'll see several learning strategies and tips that will help jump start your journey of becoming a rockstar Python programmer.",
    "text": "Go Forth and Learn!\n Now that you have these strategies for learning, you are ready to begin your Python journey! Find Real Python\u2019s Beginners Roadmap for Learning here! We also offer a beginner\u2019s level Python course, which uses interesting examples to help you learn programming and web development.Happy Coding!",
    "preview": false,
    "links": [
      "#make-it-stick",
      "#tip-1-code-everyday",
      "#tip-2-write-it-out",
      "#tip-3-go-interactive",
      "#tip-4-take-breaks",
      "#tip-5-become-a-bug-bounty-hunter",
      "#make-it-collaborative",
      "#tip-6-surround-yourself-with-others-who-are-learning",
      "#tip-7-teach",
      "#tip-8-pair-program",
      "#tip-9-ask-good-questions",
      "#make-something",
      "#tip-10-build-something-anything",
      "#tip-11-contribute-to-open-source",
      "#go-forth-and-learn",
      "/account/join/",
      "/courses/python-beginner-tips/",
      "https://realpython.com/products/python-basics-book/",
      "https://realpython.com/bonus/python-basics-sample-download/",
      "#make-it-stick",
      "/account/join/",
      "#tip-1-code-everyday",
      "https://realpython.com/learn/python-first-steps/",
      "#tip-2-write-it-out",
      "https://realpython.com/python-coding-interview-tips/",
      "#tip-3-go-interactive",
      "https://realpython.com/interacting-with-python/",
      "https://realpython.com/learn/python-first-steps/",
      "https://realpython.com/python-repl/",
      "https://realpython.com/learn/python-first-steps/",
      "/account/join/",
      "#tip-4-take-breaks",
      "https://en.wikipedia.org/wiki/Pomodoro_Technique",
      "#tip-5-become-a-bug-bounty-hunter",
      "https://realpython.com/python-debugging-pdb/",
      "#make-it-collaborative",
      "#tip-6-surround-yourself-with-others-who-are-learning",
      "https://www.pythonistacafe.com/",
      "#tip-7-teach",
      "#tip-8-pair-program",
      "https://en.wikipedia.org/wiki/Pair_programming",
      "#tip-9-ask-good-questions",
      "https://realpython.com/python-traceback/",
      "/account/join/",
      "#make-something",
      "#tip-10-build-something-anything",
      "https://realpython.com/python3-object-oriented-programming/",
      "https://dbader.org/blog/python-projects-inspiration",
      "https://realpython.com/python-dice-roll/",
      "https://realpython.com/python-bitcoin-ifttt/",
      "https://www.youtube.com/watch?v=WWDzzEhlayY",
      "#tip-11-contribute-to-open-source",
      "https://dbader.org/blog/python-open-source-contributing",
      "https://help.github.com/articles/about-pull-requests/",
      "#go-forth-and-learn",
      "https://realpython.com/python-basics/",
      "https://realpython.com/products/real-python-course/",
      "/feedback/survey/article/python-beginner-tips/liked/?from=article-footer",
      "/feedback/survey/article/python-beginner-tips/disliked/?from=article-footer",
      "/courses/python-beginner-tips/"
    ]
  },
  {
    "id": 115,
    "title": "Python IDEs and Code Editors (Guide)",
    "url": "https://realpython.com/python-ides-code-editors-guide/",
    "pub_date": "2018-03-13T21:40:51+00:00",
    "tags": [
      "basics",
      "tools"
    ],
    "description": "Find your perfect Python development setup with this review of Python IDEs and code editors, including recommendations and screen shots.",
    "text": "Which Python IDE is Right for You?\n Only you can decide that, but here are some basic recommendations:",
    "preview": false,
    "links": [
      "#what-are-ides-and-code-editors",
      "#requirements-for-a-good-python-coding-environment",
      "#general-editors-and-ides-with-python-support",
      "#eclipse-pydev",
      "#sublime-text",
      "#atom",
      "#gnu-emacs",
      "#vi-vim",
      "#visual-studio",
      "#visual-studio-code",
      "#python-specific-editors-and-ides",
      "#pycharm",
      "#spyder",
      "#thonny",
      "#which-python-ide-is-right-for-you",
      "/account/join/",
      "/courses/finding-perfect-python-code-editor/",
      "https://realpython.com/python-idle/",
      "#what-are-ides-and-code-editors",
      "https://realpython.com/python-debugging-pdb/",
      "/account/join/",
      "#requirements-for-a-good-python-coding-environment",
      "https://realpython.com/python-keywords/",
      "#general-editors-and-ides-with-python-support",
      "#eclipse-pydev",
      "http://www.eclipse.org/",
      "https://www.pydev.org",
      "https://realpython.com/oop-in-python-vs-java/",
      "https://files.realpython.com/media/Eclipse_and_PyDev.fe2a1e745be6.png",
      "#sublime-text",
      "http://www.sublimetext.com",
      "https://realpython.com/python-modules-packages/",
      "https://files.realpython.com/media/Sublime_Text.55c3de3ec99f.png",
      "https://realpython.com/setting-up-sublime-text-3-for-full-stack-python-development/",
      "https://realpython.com/products/sublime-python/",
      "/account/join/",
      "#atom",
      "https://atom.io/",
      "https://electronjs.org/",
      "https://realpython.com/python-vs-javascript/",
      "https://realpython.com/html-css-python/",
      "https://files.realpython.com/media/Atom.620cf6d10a8a.png",
      "#gnu-emacs",
      "https://www.gnu.org/software/emacs/",
      "https://en.wikipedia.org/wiki/Editor_war",
      "https://files.realpython.com/media/GNU_Emacs.5bcb5a34387f.png",
      "https://realpython.com/emacs-the-best-python-editor/",
      "#vi-vim",
      "https://www.vim.org/",
      "https://files.realpython.com/media/VIM.0a2d5257f880.png",
      "https://realpython.com/vim-and-python-a-match-made-in-heaven/",
      "/account/join/",
      "#visual-studio",
      "https://www.visualstudio.com/vs/",
      "http://pytools.codeplex.com/",
      "#visual-studio-code",
      "https://code.visualstudio.com/",
      "https://marketplace.visualstudio.com/items?itemName=ms-python.python",
      "https://github.com/Microsoft/vscode",
      "https://marketplace.visualstudio.com/vscode",
      "https://files.realpython.com/media/VS_Code.95cbd7e1c9a7.png",
      "https://realpython.com/python-development-visual-studio-code/",
      "https://realpython.com/courses/python-development-visual-studio-code-setup-guide/",
      "https://realpython.com/python-coding-setup-windows/#setting-up-vs-code",
      "https://realpython.com/python-coding-setup-windows/",
      "#python-specific-editors-and-ides",
      "#pycharm",
      "https://www.jetbrains.com/pycharm/",
      "https://realpython.com/pycharm-guide/",
      "https://files.realpython.com/media/PyCharm.2e26d23c921c.png",
      "/account/join/",
      "#spyder",
      "https://github.com/spyder-ide/spyder",
      "https://realpython.com/python-scipy-cluster-optimize/",
      "https://realpython.com/tutorials/numpy/",
      "https://realpython.com/python-matplotlib-guide/",
      "https://files.realpython.com/media/spyder-ide-screenshot.90947590845b.png",
      "#thonny",
      "http://thonny.org/",
      "https://www.cs.ut.ee/",
      "http://www.ut.ee/",
      "https://files.realpython.com/media/Thonny.cd8d2c35f9a3.png",
      "https://realpython.com/python-thonny/",
      "#which-python-ide-is-right-for-you",
      "/feedback/survey/article/python-ides-code-editors-guide/liked/?from=article-footer",
      "/feedback/survey/article/python-ides-code-editors-guide/disliked/?from=article-footer",
      "/courses/finding-perfect-python-code-editor/"
    ]
  },
  {
    "id": 116,
    "title": "Python Project for Beginners: Bitcoin Price Notifications",
    "url": "https://realpython.com/python-bitcoin-ifttt/",
    "pub_date": "2018-03-08T07:00:00+00:00",
    "tags": [
      "web-dev",
      "basics",
      "projects"
    ],
    "description": "Build your own Bitcoin price notification service with Python and IFTTT. This tutorial is a project-based exercise for beginners looking to improve their Python coding skills by building a small real-world app.",
    "text": "Recap and Next Steps\n In this article, we created our very own Bitcoin notification service. You learned how to send HTTP GET and POST requests using the requests package. You saw how easy it was to connect your Python app to external services using IFTTT and webhooks.Now, where should you go next? With Python and IFTTT the sky is the limit. But here are some suggestions that can get you started:Also, this will be an ongoing series with more Python projects you can build to grow your skills. Don\u2019t miss out on the next tutorial:Get Notified: Don\u2019t miss the follow up to this tutorial\u2014Click here to join the Real Python Newsletter and you\u2019ll know when the next installment comes out.Good luck and Happy Pythoning! Let me know what you\u2019ve built using Python and IFTTT in the comments below!",
    "preview": false,
    "links": [
      "#bitcoin-price-notifications-with-python",
      "#project-setup",
      "#retrieving-the-bitcoin-price",
      "#sending-a-test-ifttt-notification",
      "#creating-ifttt-applets",
      "#putting-it-all-together",
      "#recap-and-next-steps",
      "/account/join/",
      "#bitcoin-price-notifications-with-python",
      "https://ifttt.com",
      "https://telegram.org/",
      "https://coinmarketcap.com/api/",
      "http://timothyfitz.com/2009/02/09/what-webhooks-are-and-why-you-should-care/",
      "/account/join/",
      "#project-setup",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "#retrieving-the-bitcoin-price",
      "https://realpython.com/absolute-vs-relative-python-imports/",
      "#sending-a-test-ifttt-notification",
      "https://ifttt.com/join",
      "https://ifttt.com/create",
      "https://realpython.com/python-testing/",
      "https://ifttt.com/maker_webhooks",
      "https://realpython.com/python-import/",
      "https://files.realpython.com/media/ifttt_test_notification.7384c7562c30.jpg",
      "/account/join/",
      "#creating-ifttt-applets",
      "#putting-it-all-together",
      "https://realpython.com/python-main-function/",
      "https://files.realpython.com/media/bitcoin_telegram.1a228cd2b5eb.png",
      "/account/join/",
      "#recap-and-next-steps",
      "https://realpython.com/bonus/newsletter-dont-miss-updates/",
      "/feedback/survey/article/python-bitcoin-ifttt/liked/?from=article-footer",
      "/feedback/survey/article/python-bitcoin-ifttt/disliked/?from=article-footer"
    ]
  },
  {
    "id": 117,
    "title": "Python Plotting With Matplotlib (Guide)",
    "url": "https://realpython.com/python-matplotlib-guide/",
    "pub_date": "2018-02-28T14:00:00+00:00",
    "tags": [
      "data-science",
      "basics"
    ],
    "description": "This article is a beginner-to-intermediate-level walkthrough on Python and matplotlib that mixes theory with example.",
    "text": "Appendix B: Interactive Mode\n Behind the scenes, matplotlib also interacts with different backends.  A backend is the workhorse behind actually rendering a chart.  (On the popular Anaconda distribution, for instance, the default backend is Qt5Agg.)  Some backends are interactive, meaning they are dynamically updated and \u201cpop up\u201d to the user when changed.While interactive mode is off by default, you can check its status with plt.rcParams['interactive'] or plt.isinteractive(), and toggle it on and off with plt.ion() and plt.ioff(), respectively:In some code examples, you may notice the presence of plt.show() at the end of a chunk of code.  The main purpose of plt.show(), as the name implies, is to actually \u201cshow\u201d (open) the figure when you\u2019re running with interactive mode turned off.  In other words:Below, we make sure that interactive mode is off, which requires that we call plt.show() after building the plot itself:Notably, interactive mode has nothing to do with what IDE you\u2019re using, or whether you\u2019ve enable inline plotting with something like jupyter notebook --matplotlib inline or %matplotlib.",
    "preview": false,
    "links": [
      "#why-can-matplotlib-be-confusing",
      "#pylab-what-is-it-and-should-i-use-it",
      "#the-matplotlib-object-hierarchy",
      "#stateful-versus-stateless-approaches",
      "#understanding-pltsubplots-notation",
      "#the-figures-behind-the-scenes",
      "#a-burst-of-color-imshow-and-matshow",
      "#plotting-in-pandas",
      "#wrapping-up",
      "#more-resources",
      "#appendix-a-configuration-and-styling",
      "#appendix-b-interactive-mode",
      "/account/join/",
      "/courses/python-plotting-matplotlib/",
      "",
      "https://docs.scipy.org/doc/numpy/reference/routines.random.html",
      "https://realpython.com/python-statistics/",
      "https://matplotlib.org/users/installing.html",
      "#why-can-matplotlib-be-confusing",
      "https://matplotlib.org/users/shell.html",
      "/account/join/",
      "#pylab-what-is-it-and-should-i-use-it",
      "https://realpython.com/matlab-vs-python/",
      "https://www.youtube.com/watch?v=e3lTby5RI54",
      "https://www.mathworks.com/help/matlab/functionlist.html",
      "https://docs.python.org/3/tutorial/classes.html#python-scopes-and-namespaces",
      "https://matplotlib.org/users/shell.html#using-matplotlib-in-a-python-shell",
      "https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/pylab.py",
      "#the-matplotlib-object-hierarchy",
      "https://files.realpython.com/media/fig_map.bc8c7cabd823.png",
      "https://realpython.com/python-variables/",
      "https://files.realpython.com/media/anatomy.7d033ebbfbc8.png",
      "https://matplotlib.org/examples/showcase/anatomy.html",
      "/account/join/",
      "#stateful-versus-stateless-approaches",
      "https://realpython.com/python3-object-oriented-programming/",
      "https://files.realpython.com/media/flow.a210eb81a42b.jpg",
      "https://matplotlib.org/api/pyplot_summary.html#the-pyplot-api",
      "https://realpython.com/oop-in-python-vs-java/",
      "https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/pyplot.py#L3708",
      "https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/pyplot.py#L3714",
      "https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/pyplot.py#L1521",
      "#understanding-pltsubplots-notation",
      "https://files.realpython.com/media/debt.a738254921bc.png",
      "https://en.wikipedia.org/wiki/Discrete_uniform_distribution",
      "https://files.realpython.com/media/twosubplot.e76bf825d7a2.png",
      "https://en.wikipedia.org/wiki/TeX",
      "https://matplotlib.org/api/gridspec_api.html",
      "https://files.realpython.com/media/empty_gridspec.d4fc1c219152.png",
      "https://files.realpython.com/media/empty_gridspec_annot.782349dc90a1.png",
      "https://files.realpython.com/media/gridspec_ex.9bce5a0726e9.png",
      "/account/join/",
      "#the-figures-behind-the-scenes",
      "https://realpython.com/python-is-identity-vs-equality/",
      "#a-burst-of-color-imshow-and-matshow",
      "https://matplotlib.org/api/axes_api.html?highlight=axes%20class#plotting",
      "https://docs.python.org/3/reference/datamodel.html#context-managers",
      "https://files.realpython.com/media/heatmaps.4b2fb807d2da.png",
      "/account/join/",
      "#plotting-in-pandas",
      "https://realpython.com/analyzing-obesity-in-england-with-python/",
      "https://realpython.com/pandas-plot-python/",
      "https://realpython.com/pandas-dataframe/",
      "https://files.realpython.com/media/vix.9265fdca0c18.png",
      "https://matplotlib.org/examples/color/colormaps_reference.html",
      "https://dbader.org/blog/python-enumerate",
      "https://pandas.pydata.org/pandas-docs/stable/visualization.html#plotting-tools",
      "#wrapping-up",
      "#more-resources",
      "https://matplotlib.org/examples/index.html",
      "https://matplotlib.org/faq/usage_faq.html",
      "https://matplotlib.org/tutorials/index.html",
      "https://matplotlib.org/tutorials/introductory/lifecycle.html#the-lifecycle-of-a-plot",
      "",
      "https://s3.amazonaws.com/assets.datacamp.com/blog_assets/Python_Matplotlib_Cheat_Sheet.pdf",
      "http://journals.plos.org/ploscompbiol/article/file?id=10.1371/journal.pcbi.1003833&type=printable",
      "http://a.co/icUQo3Z",
      "http://a.co/9YzpuRP",
      "http://www.scipy-lectures.org/_downloads/ScipyLectures-simple.pdf",
      "https://xkcd.com/color/rgb/",
      "https://matplotlib.org/resources/index.html",
      "http://queirozf.com/entries/matplotlib-pylab-pyplot-etc-what-s-the-different-between-these",
      "https://pandas.pydata.org/pandas-docs/stable/visualization.html",
      "https://seaborn.pydata.org/",
      "http://datashader.org/",
      "https://matplotlib.org/thirdpartypackages/index.html",
      "/account/join/",
      "#appendix-a-configuration-and-styling",
      "https://matplotlib.org/users/customizing.html",
      "https://github.com/bsolomon1124/config/blob/master/matplotlib/matplotlibrc",
      "https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/pyplot.py#L498",
      "https://files.realpython.com/media/plot_fivethirtyeight.789763447ddc.png",
      "https://matplotlib.org/examples/style_sheets/plot_fivethirtyeight.html",
      "https://matplotlib.org/gallery.html#style_sheets",
      "/account/join/",
      "#appendix-b-interactive-mode",
      "/feedback/survey/article/python-matplotlib-guide/liked/?from=article-footer",
      "/feedback/survey/article/python-matplotlib-guide/disliked/?from=article-footer",
      "/courses/python-plotting-matplotlib/"
    ]
  },
  {
    "id": 118,
    "title": "Python Programming Challenge \u2013 First to Five",
    "url": "https://realpython.com/python-programming-contest-first-to-five/",
    "pub_date": "2015-09-21T13:47:22+00:00",
    "tags": [
      "community",
      "basics"
    ],
    "description": "Come take part in a programming challenge to test your logic skills and abilities.",
    "text": "Grading\n The grading is simple: We\u2019ll run each strategy through the random number generator 100 times as a first screen - return random.randrange(1, 10). The strategies that beat the generator we\u2019ll then be ran against one other in a round robin format to determine the overall winners. Be sure to test your code out in the game runner before submitting.To submit your script, just email us a link to a secret Gist - info (at) realpython (dot) com. Good luck!This contest is now closed. Thanks to everyone who participated, and Happy Pythoning!",
    "preview": false,
    "links": [
      "#the-challenge",
      "#the-prizes",
      "#grading",
      "/account/join/",
      "https://www.interviewcake.com/",
      "#the-challenge",
      "/account/join/",
      "#the-prizes",
      "http://the3doodler.com/store/",
      "http://www.amazon.com/UDI-U818A-2-4GHz-RC-Quadcopter/dp/B00D3IN11Q/ref=sr_1_2",
      "https://gist.github.com/mjhea0/c21178d0cbf9e364c707",
      "https://gist.github.com/mjhea0/d7fc846ea8ab2b03e819",
      "#grading",
      "https://gist.github.com/mjhea0/0a6b0bb6cc7557776ab8",
      "/feedback/survey/article/python-programming-contest-first-to-five/liked/?from=article-footer",
      "/feedback/survey/article/python-programming-contest-first-to-five/disliked/?from=article-footer"
    ]
  },
  {
    "id": 119,
    "title": "Scaffold a Flask Project",
    "url": "https://realpython.com/scaffold-a-flask-project/",
    "pub_date": "2015-04-27T13:52:16+00:00",
    "tags": [
      "web-dev",
      "basics",
      "flask"
    ],
    "description": "This article details how to build a scaffolding tool used to generate a Flask boilerplate.",
    "text": "Conclusion\n What do you think? Did we miss anything? What other arguments would you add to argparse in order to customize your scaffold script even further? Comment below!Grab the final code from the repo.",
    "preview": false,
    "links": [
      "#quickstart",
      "#1st-task-the-structure",
      "#handling-multiple-skeletons",
      "#2nd-task-configuration",
      "#3rd-task-bower",
      "#4th-task-virtualenv",
      "#5th-task-git-init",
      "#sum-and-confirm",
      "#summary",
      "#refactor",
      "#confirm",
      "#run",
      "#conclusion",
      "/account/join/",
      "https://github.com/Depado/flask-skeleton",
      "http://bower.io/",
      "https://realpython.com/run-python-scripts/",
      "https://www.python.org/downloads/release/python-351/",
      "#quickstart",
      "https://github.com/realpython/flask-skeleton",
      "/account/join/",
      "#1st-task-the-structure",
      "https://realpython.com/command-line-interfaces-python-argparse/",
      "https://docs.python.org/3.4/library/shutil.html",
      "https://realpython.com/python-application-layouts/#flask",
      "https://docs.python.org/3/library/shutil.html#shutil.copytree",
      "#handling-multiple-skeletons",
      "#2nd-task-configuration",
      "https://realpython.com/python-main-function/",
      "https://docs.python.org/3/library/codecs.html",
      "/account/join/",
      "#3rd-task-bower",
      "http://bower.io/",
      "https://realpython.com/python-subprocess/",
      "https://docs.python.org/dev/library/shutil.html#shutil.which",
      "http://en.wikipedia.org/wiki/Which_%28Unix%29",
      "https://github.com/mbr/shutilwhich",
      "https://docs.python.org/3.4/library/subprocess.html",
      "http://en.wikipedia.org/wiki/Standard_streams#Standard_output_.28stdout.29",
      "http://en.wikipedia.org/wiki/Standard_streams#Standard_error_.28stderr.29",
      "#4th-task-virtualenv",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "/account/join/",
      "#5th-task-git-init",
      "https://raw.githubusercontent.com/github/gitignore/master/Python.gitignore",
      "#sum-and-confirm",
      "#summary",
      "#refactor",
      "https://realpython.com/python-refactoring/",
      "https://github.com/realpython/flask-scaffold/releases/tag/refactor",
      "https://github.com/realpython/flask-scaffold/commit/f06a5968cba894a3ebac41b60282eb22c96eea99",
      "https://github.com/realpython/flask-scaffold/releases/tag/refactor",
      "/account/join/",
      "#confirm",
      "#run",
      "#conclusion",
      "https://github.com/realpython/flask-scaffold",
      "https://github.com/Depado",
      "https://twitter.com/diek007",
      "/feedback/survey/article/scaffold-a-flask-project/liked/?from=article-footer",
      "/feedback/survey/article/scaffold-a-flask-project/disliked/?from=article-footer"
    ]
  },
  {
    "id": 120,
    "title": "Analyzing Obesity in England With Python",
    "url": "https://realpython.com/analyzing-obesity-in-england-with-python/",
    "pub_date": "2015-03-13T13:36:19+00:00",
    "tags": [
      "data-science",
      "basics"
    ],
    "description": "Let's look at using Python and Pandas to perform data analysis on obesity in England.",
    "text": "But what about the future?\n The graph still doesn\u2019t tell us what will happen to children\u2019s obesity in the future. There are ways to extrapolate graphs like these into the future, but I must give a warning before we proceed: The obesity data has no underlying mathematical foundation. That is, we can\u2019t find a formula that will predict how these values will change in the future. Everything is essentially guesswork. With this warning in mind, let\u2019s see how we can try to extrapolate our graph.First, Scipy does provide a function for extrapolation, but it only works for monotically increasing data (while our data goes up and down).We can try curve fitting:We\u2019ll use these two functions together to try and predict the future for England\u2019s children:Here, we extract the values for children under 16. For the x axis, the original graph had dates. To simplify our graph, we\u2019ll just be using the the numbers 0-10.Output:One more thing: Curve fitting uses different degrees of polynomials. In very simple terms,the higher the degree, the more accurate the curve fitting will be, but there is also the chance that the results will be garbage. Scipy will sometimes warn you if the degree is too high. Don\u2019t worry, this will be more clear when we look at some examples.We set the polynomial degree to 3. We then use the Numpy polyfit() function to try to fit a graph through the data we have. The poly1d() function is then called on the equation we generated to create a function that will be used to generate our values. This returns a function called poly_interp that we will use below:We loop from 0 to 10, and call the poly_interp() function on each value. Remember, this is the function we generated when we ran the curve fitting algorithm.Before moving on, let\u2019s see what the different polynomial degrees mean.We will plot both the original data, and our own data, to see how close our equation reached the ideal data:The original data will be plotted in blue and labelled Orig, while the generated data will be red and labelled Fitted.With a polynomial value of 3:We see it isn\u2019t that good a fit, so let\u2019s try 5:Much better. What about 7?Now we get an almost perfect match. So, why wouldn\u2019t we always use higher values?Because the higher values have been so tightly coupled to this graph, they make prediction useless. If we try to extrapolate from the graph above, we get garbage values. Trying different values, I found that polynomial degrees of 3 and 4 were the only ones that give accurate results, so that\u2019s what we\u2019ll be using.We are going to re-run our poly_interp() function, this time for values from 0-15, to predict five years into the future.This is the same code as before. Let\u2019s again see the results with polynomial degrees of 3 and 4. The new extrapolated line is the green one and shows our prediction.With 3:Here, the obesity is going down. How about 4?But here, it is shooting up, so kids will end up weighing like tractors!Which of the two graphs is correct? It depends on whether you are working for the government or the opposition.This is actually a feature, not bug. You must have heard these political debates where two sides draw the exact opposite conclusions from the same data? Now you see how it\u2019s possible to draw radically different conclusions by tweaking small parameters.And that is the reason we must be careful when accepting figures and graphs from lobbyists, especially if they are not willing to share the raw data. Sometimes, predictions are better left to astrologers.Cheers!",
    "preview": false,
    "links": [
      "#the-data",
      "#python-vs-excel",
      "#the-code",
      "#cleanup",
      "#charts",
      "#so-who-is-getting-fatter",
      "#but-what-about-the-future",
      "/account/join/",
      "#the-data",
      "http://data.gov.uk/dataset/statistics_on_obesity_physical_activity_and_diet_england/",
      "https://files.realpython.com/media/excel-data.2f1620362ad1.jpg",
      "/account/join/",
      "#python-vs-excel",
      "http://pandas.pydata.org/",
      "http://www.numpy.org/",
      "#the-code",
      "https://github.com/shantnu/python-obesity",
      "https://realpython.com/python-matplotlib-guide/",
      "https://realpython.com/pandas-plot-python/",
      "https://realpython.com/pandas-read-write-files/",
      "/account/join/",
      "#cleanup",
      "http://pandas.pydata.org/pandas-docs/dev/generated/pandas.DataFrame.rename.html",
      "/account/join/",
      "#charts",
      "https://files.realpython.com/media/matplotlib_chart1.c87daa0ceaff.png",
      "http://stackoverflow.com/questions/25773245/ambiguity-in-pandas-dataframe-axis-definition",
      "https://files.realpython.com/media/matplotlib_chart2.dfd8ef0ad2a5.png",
      "https://files.realpython.com/media/matplotlib_chart3.0113f9916e7b.png",
      "#so-who-is-getting-fatter",
      "#but-what-about-the-future",
      "http://www.scipy.org/",
      "http://docs.scipy.org/doc/numpy/reference/generated/numpy.interp.html",
      "http://en.wikipedia.org/wiki/Curve_fitting",
      "http://en.wikipedia.org/wiki/Polynomial_interpolation",
      "http://en.wikipedia.org/wiki/Degree_of_a_polynomial",
      "http://docs.scipy.org/doc/numpy/reference/generated/numpy.polyfit.html",
      "http://docs.scipy.org/doc/numpy/reference/generated/numpy.poly1d.html",
      "https://files.realpython.com/media/curve__fit_3.74626650adb9.png",
      "https://files.realpython.com/media/curve__fit_5.e4856471a165.png",
      "https://files.realpython.com/media/curve__fit_7.211abb7dc45e.png",
      "https://files.realpython.com/media/curve__fit_3_2.498bb49f479f.png",
      "https://files.realpython.com/media/curve__fit_4_2.3a6c8c135022.png",
      "/feedback/survey/article/analyzing-obesity-in-england-with-python/liked/?from=article-footer",
      "/feedback/survey/article/analyzing-obesity-in-england-with-python/disliked/?from=article-footer"
    ]
  },
  {
    "id": 121,
    "title": "Flask by Example \u2013 Updating the UI",
    "url": "https://realpython.com/flask-by-example-updating-the-ui/",
    "pub_date": "2015-02-24T15:50:42+00:00",
    "tags": [
      "web-dev",
      "basics",
      "front-end",
      "flask"
    ],
    "description": "In this part of the Flask by Example series, we'll update the user interface to make it more user friendly.",
    "text": "Conclusion\n What else could you add or change to better the user experience? Make the changes on your own or leave comments below. When done be sure to update both your staging and production environments.See you next time!",
    "preview": false,
    "links": [
      "#current-user-interface",
      "#changing-the-button",
      "#adding-a-spinner",
      "#dealing-with-errors",
      "#conclusion",
      "/account/join/",
      "https://www.python.org/downloads/release/python-351/",
      "/flask-by-example-part-1-project-setup/",
      "https://realpython.com/effective-python-environment/",
      "/flask-by-example-part-2-postgres-sqlalchemy-and-alembic/",
      "/flask-by-example-part-3-text-processing-with-requests-beautifulsoup-nltk/",
      "https://realpython.com/nltk-nlp-python/",
      "/flask-by-example-implementing-a-redis-task-queue/",
      "/flask-by-example-integrating-flask-and-angularjs/",
      "/updating-the-staging-environment/",
      "/flask-by-example-custom-angular-directive-with-d3/",
      "https://github.com/realpython/flask-by-example/releases",
      "#current-user-interface",
      "https://files.realpython.com/media/current-ui.bf7b7a666eab.png",
      "http://en.wikipedia.org/wiki/Throbber",
      "/account/join/",
      "#changing-the-button",
      "https://code.angularjs.org/1.4.9/docs/api/ng/directive/ngDisabled",
      "https://realpython.com/python-variables/",
      "https://realpython.com/primer-on-jinja-templating/",
      "#adding-a-spinner",
      "https://github.com/realpython/flask-by-example/tree/master/static",
      "/account/join/",
      "#dealing-with-errors",
      "http://getbootstrap.com/components/#alerts",
      "https://code.angularjs.org/1.4.9/docs/api/ng/directive/ngShow",
      "#conclusion",
      "http://wordcount-stage.herokuapp.com/",
      "http://wordcount-pro.herokuapp.com/",
      "http://startupedmonton.com/",
      "/feedback/survey/article/flask-by-example-updating-the-ui/liked/?from=article-footer",
      "/feedback/survey/article/flask-by-example-updating-the-ui/disliked/?from=article-footer"
    ]
  },
  {
    "id": 122,
    "title": "Setting Up Sublime Text 3 for Full Stack Python Development",
    "url": "https://realpython.com/setting-up-sublime-text-3-for-full-stack-python-development/",
    "pub_date": "2014-08-11T13:24:04+00:00",
    "tags": [
      "basics",
      "tools"
    ],
    "description": "This article details how to set up Sublime Text for full stack Python development.",
    "text": "Conclusion\n I hope that this article was helpful to you and that you were able to integrate some of the above packages and custom settings along with your own based on your personal preferences to improve your workflow. If you have any questions or suggestions of your own, please let me know in the comments below. Finally, check out the dotfiles folder in this repo to view all the resources that I created. Cheers!",
    "preview": false,
    "links": [
      "#features",
      "#customizing-sublime-text-3",
      "#install-the-subl-command-line-tool",
      "#install-package-control",
      "#create-a-custom-settings-file",
      "#themes",
      "#packages",
      "#sidebarenhancements",
      "#anaconda",
      "#djaneiro",
      "#requirementstxt",
      "#sublimelinter",
      "#gitgutter",
      "#ftpsync",
      "#advancednewfile",
      "#emmet",
      "#markdown-preview",
      "#keyboard-shortcuts",
      "#custom-commands",
      "#additional-resources",
      "#conclusion",
      "/account/join/",
      "http://www.sublimetext.com/3",
      "https://realpython.com/get-started-with-django-1/",
      "https://realpython.com/html-css-python/",
      "https://realpython.com/effective-python-environment/",
      "",
      "",
      "#features",
      "https://files.realpython.com/media/st3_split_screen.83fd187fadf5.png",
      "http://www.sublimetext.com/docs/3/vintage.html",
      "https://realpython.com/vim-and-python-a-match-made-in-heaven/",
      "http://sublimetext.info/docs/en/extensibility/snippets.html",
      "https://github.com/mjhea0/sublime-setup-for-python/tree/master/dotfiles/snippets",
      "/account/join/",
      "#customizing-sublime-text-3",
      "#install-the-subl-command-line-tool",
      "http://www.sublimetext.com/docs/3/osx_command_line.html",
      "http://stackoverflow.com/questions/16199581/opening-sublime-text-on-command-line-as-subl-on-mac-os?lq=1",
      "http://stackoverflow.com/questions/9440639/sublime-text-from-command-line-win7?rq=1",
      "http://askubuntu.com/questions/273034/lauching-sublime-text-from-command-line",
      "#install-package-control",
      "https://sublime.wbond.net/",
      "https://sublime.wbond.net/installation#st3",
      "https://sublime.wbond.net/docs/usage",
      "https://files.realpython.com/media/st3_package_control.13d4617691d0.png",
      "/account/join/",
      "#create-a-custom-settings-file",
      "https://github.com/mjhea0/sublime-setup-for-python/blob/master/dotfiles/Preferences.sublime-settings",
      "https://github.com/mjhea0/sublime-setup-for-python/blob/master/dotfiles/Python.sublime-settings",
      "https://github.com/miohtama/ztanesh/blob/master/zsh-scripts/bin/setup-sync-sublime-over-dropbox.sh",
      "http://sublime-text-unofficial-documentation.readthedocs.org/en/latest/reference/settings.html",
      "#themes",
      "https://sublime.wbond.net/browse/labels/theme",
      "http://colorsublime.com/",
      "https://sublime.wbond.net/packages/Theme%20-%20Soda",
      "https://sublime.wbond.net/packages/Theme%20-%20Flatland",
      "#packages",
      "#sidebarenhancements",
      "https://sublime.wbond.net/packages/SideBarEnhancements",
      "https://files.realpython.com/media/st3_sidebar_enhancements.10d178edb862.png",
      "#anaconda",
      "https://sublime.wbond.net/packages/Anaconda",
      "https://github.com/DamnWidget/anaconda#anaconda-autocompletion",
      "http://en.wikipedia.org/wiki/Lint_%28software%29",
      "http://en.wikipedia.org/wiki/Cyclomatic_complexity",
      "https://realpython.com/python-variables/",
      "https://realpython.com/documenting-python-code/#documenting-your-python-code-base-using-docstrings",
      "https://files.realpython.com/media/st3_anaconda_show_docs.5574abda6481.png",
      "https://github.com/DamnWidget/anaconda",
      "https://sublime.wbond.net/packages/SublimeCodeIntel",
      "/account/join/",
      "#djaneiro",
      "https://sublime.wbond.net/packages/Djaneiro",
      "https://github.com/squ1b3r/Djaneiro",
      "#requirementstxt",
      "https://sublime.wbond.net/packages/requirementstxt",
      "#sublimelinter",
      "https://sublime.wbond.net/packages/SublimeLinter",
      "https://github.com/SublimeLinter",
      "http://sublimelinter.readthedocs.org/en/latest/installation.html",
      "https://sublime.wbond.net/packages/SublimeLinter-pyflakes",
      "https://sublime.wbond.net/packages/SublimeLinter-pep8",
      "https://sublime.wbond.net/packages/SublimeLinter-jshint",
      "https://sublime.wbond.net/packages/SublimeLinter-pyyaml",
      "https://sublime.wbond.net/packages/SublimeLinter-csslint",
      "https://sublime.wbond.net/packages/SublimeLinter-html-tidy",
      "https://sublime.wbond.net/packages/SublimeLinter-json",
      "#gitgutter",
      "https://sublime.wbond.net/packages/GitGutter",
      "https://files.realpython.com/media/st3_gitgutter.73de764e6241.png",
      "https://sublime.wbond.net/packages/Modific",
      "#ftpsync",
      "https://sublime.wbond.net/packages/FTPSync",
      "/account/join/",
      "#advancednewfile",
      "https://sublime.wbond.net/packages/AdvancedNewFile",
      "https://github.com/skuroda/Sublime-AdvancedNewFile#usage",
      "#emmet",
      "https://sublime.wbond.net/packages/Emmet",
      "http://docs.emmet.io/",
      "http://docs.emmet.io/cheat-sheet/",
      "#markdown-preview",
      "https://sublime.wbond.net/packages/Markdown%20Preview",
      "#keyboard-shortcuts",
      "http://sublime-text-unofficial-documentation.readthedocs.org/en/latest/reference/keyboard_shortcuts_osx.html",
      "/account/join/",
      "#custom-commands",
      "https://github.com/mjhea0/sublime-setup-for-python/blob/master/dotfiles/copy_path_to_clipboard.py",
      "https://github.com/mjhea0/sublime-setup-for-python/blob/master/dotfiles/close_tabs.py",
      "#additional-resources",
      "http://docs.sublimetext.info/en/latest/index.html",
      "https://sublime.wbond.net/docs",
      "http://sublime-text-unofficial-documentation.readthedocs.org/en/latest/reference/reference.html",
      "http://slides.com/nicklang/pimp-my-editor",
      "",
      "",
      "#conclusion",
      "https://github.com/mjhea0/sublime-setup-for-python/tree/master/dotfiles",
      "/feedback/survey/article/setting-up-sublime-text-3-for-full-stack-python-development/liked/?from=article-footer",
      "/feedback/survey/article/setting-up-sublime-text-3-for-full-stack-python-development/disliked/?from=article-footer"
    ]
  },
  {
    "id": 123,
    "title": "Discover Flask, Part 2 \u2013 Creating a Login Page",
    "url": "https://realpython.com/introduction-to-flask-part-2-creating-a-login-page/",
    "pub_date": "2014-06-06T19:52:26+00:00",
    "tags": [
      "web-dev",
      "basics",
      "flask"
    ],
    "description": "In Part 2 of this series on the Flask framework, we'll set up a basic login page.",
    "text": "Conclusion\n What do you think? Simple, right? Don\u2019t get too excited yet, as we still have much more to do with reguard to user management\u2026Free Bonus: Click here to get access to a free Flask + Python video tutorial that shows you how to build Flask web app, step-by-step.Now that users have the ability to login, we need to protect that URL / from unauthorized access. In other words, when an end user hits that endpoint, unless they are already logged in, then they should be immediately sent to the login page. Next time. Until then, go practice some jQuery.Be sure to grab the code and watch the video.",
    "preview": false,
    "links": [
      "#add-a-route-to-handle-requests-to-the-login-url",
      "#so-whats-going-on",
      "#add-a-template-for-the-login-page",
      "#conclusion",
      "#video",
      "/account/join/",
      "http://discoverflask.com",
      "https://realpython.com/introduction-to-flask-part-1-setting-up-a-static-site/",
      "https://realpython.com/bonus/discover-flask-video-tutorial/",
      "#add-a-route-to-handle-requests-to-the-login-url",
      "/account/join/",
      "#so-whats-going-on",
      "http://flask.pocoo.org/docs/quickstart/#http-methods",
      "http://flask.pocoo.org/docs/api/#flask.url_for",
      "#add-a-template-for-the-login-page",
      "http://localhost:5000/login",
      "https://www.youtube.com/watch?v=bLA6eBGN-_0",
      "https://realpython.com/null-in-python/",
      "https://realpython.com/primer-on-jinja-templating/#.U5CtZJRdUZ0",
      "#conclusion",
      "https://realpython.com/bonus/discover-flask-video-tutorial/",
      "https://realpython.com/learn/jquery-practice/",
      "https://github.com/realpython/flask-intro",
      "#video",
      "#video",
      "/feedback/survey/article/introduction-to-flask-part-2-creating-a-login-page/liked/?from=article-footer",
      "/feedback/survey/article/introduction-to-flask-part-2-creating-a-login-page/disliked/?from=article-footer"
    ]
  },
  {
    "id": 124,
    "title": "Discover Flask, Part 1 \u2013 Setting Up a Static Site",
    "url": "https://realpython.com/introduction-to-flask-part-1-setting-up-a-static-site/",
    "pub_date": "2014-06-04T19:22:03+00:00",
    "tags": [
      "web-dev",
      "basics",
      "flask"
    ],
    "description": "In Part 1 of this series on the Flask framework, we'll set up a basic project structure then develop a static site, styled with Bootstrap.",
    "text": "Conclusion\n What are your initial thoughts? Comment below. Grab the code. Watch the video.In under thirty minutes, you learned the Flask basics and set the ground work for a larger app. If you\u2019ve worked with Django before, you probably noticed immediately that Flask stays out of your way as you develop, leaving you free to structure and design your app how you see fit. Because of the lack of structure, true beginners may struggle a bit, however it\u2019s an invaluable learning experience that will benefit you in the long run, regardless of whether you continue working with Flask or move on to a higher-level framework.In the next tutorial we\u2019ll look at adding some dynamic content.Cheers!",
    "preview": false,
    "links": [
      "#requirements",
      "#conventions",
      "#setup",
      "#structure",
      "#routes",
      "#test",
      "#templates",
      "#bootstrap",
      "#conclusion",
      "#video",
      "/account/join/",
      "http://discoverflask.com",
      "http://flask.pocoo.org/",
      "https://github.com/mjhea0/flask-intro",
      "#video",
      "#requirements",
      "https://www.python.org/download/releases/2.7",
      "http://pip.readthedocs.org/en/latest/installing.html",
      "http://virtualenv.readthedocs.org/en/latest/",
      "https://realpython.com",
      "http://www.sublimetext.com/",
      "https://wiki.gnome.org/Apps/Gedit",
      "http://notepad-plus-plus.org/",
      "http://vimdoc.sourceforge.net/",
      "/account/join/",
      "#conventions",
      "https://github.com/realpython/flask-intro",
      "#setup",
      "#structure",
      "https://www.djangoproject.com/",
      "http://www.web2py.com/",
      "https://wiki.python.org/moin/WebFrameworks",
      "https://realpython.com/python-vs-javascript/",
      "https://realpython.com/python-mysql/",
      "https://realpython.com/python-sqlite-sqlalchemy/",
      "http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller",
      "#routes",
      "http://flask.pocoo.org/docs/patterns/viewdecorators/",
      "http://flask.pocoo.org/docs/quickstart/",
      "/account/join/",
      "#test",
      "http://localhost:5000/",
      "http://localhost:5000/welcome",
      "#video",
      "#templates",
      "http://localhost:5000/welcome",
      "#bootstrap",
      "https://realpython.com/getting-started-with-bootstrap-3/",
      "http://getbootstrap.com/",
      "http://flask.pocoo.org/docs/quickstart/#debug-mode",
      "#conclusion",
      "https://github.com/realpython/flask-intro",
      "#video",
      "/account/join/",
      "#video",
      "/feedback/survey/article/introduction-to-flask-part-1-setting-up-a-static-site/liked/?from=article-footer",
      "/feedback/survey/article/introduction-to-flask-part-1-setting-up-a-static-site/disliked/?from=article-footer"
    ]
  },
  {
    "id": 125,
    "title": "Django 1.6 Test Driven Development",
    "url": "https://realpython.com/django-1-6-test-driven-development/",
    "pub_date": "2013-12-20T17:38:18+00:00",
    "tags": [
      "web-dev",
      "basics",
      "django",
      "testing"
    ],
    "description": "In this tutorial, we look at test driven development in Django",
    "text": "Conclusion\n Congrats. You make it through. What\u2019s next?First, you may have noticed that I did not 100% follow the TDD process. That\u2019s okay. Most developers engaged in TDD don\u2019t always adhere to it in every single situation. There are times that you must deviate from it in order to just get things done - which is perfectly fine. If you\u2019d like to refactor some of the code/process to fully adhere to the TDD process, you can. In fact, it may be a good practice.Second, think about the tests I missed. Determining what and when to test is difficult. It takes time and much practice to get good at testing in general. I\u2019ve left many blanks that I intend to revel in my next post. See if you can find those and add tests.Finally, remember the last step in the TDD process? Refactoring. This step is vital as it helps create readable, maintainable code that you not only understand now - but in the future as well. When you look back at your code, think about tests you can combine. Also, which tests should you add to ensure that all written code is tested? You could test for null values and/or server side authentication, for example. You should refactor your code before moving on to writing any new code - which I did not do for time\u2019s sake. Perhaps another blog post? Think about how bad code can pollute the entire process?Thanks for reading. Grab the final code in the repo here. Please comment below with any questions.",
    "preview": false,
    "links": [
      "#why-tdd",
      "#first-test",
      "#setup-django",
      "#version-control",
      "#functional-tests",
      "#admin-login",
      "#setup-the-contacts-app",
      "#unit-tests",
      "#views",
      "#main-view",
      "#all-contacts-view",
      "#add-contact-view",
      "#validation",
      "#create-contact",
      "#functional-tests-redux",
      "#test-structure",
      "#conclusion",
      "/account/join/",
      "https://realpython.com/python-testing/",
      "https://files.realpython.com/media/tdd.0904607f8ec9.png",
      "#why-tdd",
      "https://docs.djangoproject.com/en/1.7/intro/",
      "/account/join/",
      "#first-test",
      "https://realpython.com/python-traceback/",
      "#setup-django",
      "https://realpython.com/what-is-pip/",
      "/account/join/",
      "#version-control",
      "#functional-tests",
      "http://localhost:8000/admin/",
      "https://files.realpython.com/media/django-tdd-admin.20f4656c76f9.png",
      "/account/join/",
      "#admin-login",
      "https://realpython.com/python-refactoring/",
      "/account/join/",
      "#setup-the-contacts-app",
      "/account/join/",
      "#unit-tests",
      "http://docs.python.org/2/library/unittest.html",
      "#views",
      "#main-view",
      "https://docs.djangoproject.com/en/1.7/faq/general/#django-appears-to-be-a-mvc-framework-but-you-call-the-controller-the-view-and-the-view-the-template-how-come-you-don-t-use-the-standard-names",
      "/account/join/",
      "#all-contacts-view",
      "#add-contact-view",
      "/account/join/",
      "#validation",
      "#create-contact",
      "/account/join/",
      "#functional-tests-redux",
      "#test-structure",
      "https://files.realpython.com/media/django-tdd-test-structure.6d04849a84ea.png",
      "#conclusion",
      "https://github.com/mjhea0/django-tdd",
      "/feedback/survey/article/django-1-6-test-driven-development/liked/?from=article-footer",
      "/feedback/survey/article/django-1-6-test-driven-development/disliked/?from=article-footer"
    ]
  },
  {
    "id": 126,
    "title": "An Effective Sales Page with Bootstrap 3",
    "url": "https://realpython.com/an-effective-sales-page-with-bootstrap-3/",
    "pub_date": "2013-10-01T15:05:14+00:00",
    "tags": [
      "web-dev",
      "basics",
      "front-end"
    ],
    "description": "In this tutorial, we'll be looking at Bootstrap 3 and how to customize it to create a nice landing page.",
    "text": "Closing thoughts\n That\u2019s it. We built and customized a minimal sales page with Bootstrap. The page looks nothing like the same old Bootstrap page, and \u2014 best of all \u2014 it actually works in driving sales performance! Check it out here.Ok, I guess it\u2019s full disclosure time: the page we built together is the core of an actual, real life tested, sales page.I wrote Bootstrap In Practice, an ebook for starters, to get them productive fast and go back to profit, without getting stuck in the official docs or going too much / too soon in depth led by mere intellectual curiosity.You can find the real, complete, battle-tested sales page on my website, where I also offer a free 30 day course about Bootstrap tips alongside a free sample chapter from the ebook.Next time we\u2019ll add Flask to the mix and create a nice looking boilerplate that you can use for your own web app. Cheers!",
    "preview": false,
    "links": [
      "#highly-specialized-pages-are-highly-specialized",
      "#attention-grabbing-and-first-steps",
      "#all-in",
      "#styling-more",
      "#closing-thoughts",
      "/account/join/",
      "http://www.williamghelfi.com/about",
      "https://github.com/mjhea0/bootstrap3",
      "https://realpython.com/getting-started-with-bootstrap-3/",
      "https://realpython.com/files/bootstrap3/part2/index.html",
      "#highly-specialized-pages-are-highly-specialized",
      "/account/join/",
      "#attention-grabbing-and-first-steps",
      "https://files.realpython.com/media/sales-page-bootstrap3-sshot-1.f30aa9a3f76c.png",
      "https://files.realpython.com/media/sales-page-bootstrap3-sshot-2.7d0de93bc77a.png",
      "#all-in",
      "http://thinktraffic.net/most-common-pricing-mistake",
      "https://files.realpython.com/media/sales-page-bootstrap3-sshot-3.ca8e604a3127.png",
      "/account/join/",
      "#styling-more",
      "https://files.realpython.com/media/sales-page-bootstrap3-sshot-4.f37b47df5fd9.png",
      "#closing-thoughts",
      "https://realpython.com/files/bootstrap3/part2/index.html",
      "http://www.williamghelfi.com/bootstrap-in-practice/",
      "http://www.williamghelfi.com/bootstrap-in-practice#free-chapter",
      "/feedback/survey/article/an-effective-sales-page-with-bootstrap-3/liked/?from=article-footer",
      "/feedback/survey/article/an-effective-sales-page-with-bootstrap-3/disliked/?from=article-footer"
    ]
  },
  {
    "id": 127,
    "title": "Getting Started with Bootstrap 3",
    "url": "https://realpython.com/getting-started-with-bootstrap-3/",
    "pub_date": "2013-09-13T14:04:00+00:00",
    "tags": [
      "web-dev",
      "basics",
      "front-end"
    ],
    "description": "In this tutorial, we'll be looking at Bootstrap 3 and how to customize it using HTML and CSS.",
    "text": "Make it your own\n Let\u2019s look at some quick ways that you can customize this example to make it look less \u201cBootstrappy\u201d.First, add a new stylesheet called main.css and add the embedded styles to it. Don\u2019t forget to add the new stylesheet to the head, just beneath the first stylesheet. Also, add the following Google fonts as well as a link to the font awesome styles:Let\u2019s put those new fonts to use:As you can probably tell, it\u2019s difficult to find two fonts that look good together. Fortunately, there are a lot of good resources - like here and here.Textures can make a big difference, which is why I love Subtle Patterns. Update the body class with the following code. Make sure to make the Jumbotron transparent as well.Update the Marketing section so that there is just one row with three columns (each spanning 4 units). Let\u2019s also put the new Glyphicons to use. Or you can use Font Awesome since we added the stylesheet.Above the marketing section let\u2019s add a new row with two videos, which hopefully have something to do with your products or services (or at least explains why your site exists).By the way, I recorded those videos a few months ago which detail how to get started with a Django Project. Check them out, create a basic project, and then add some styles. :)Update the Jumbotron with some social sharing buttons and a few more icons. <3Finally, remove the text-mute class from the nav bar and add one more icon:And here\u2019s the final version.Good? At the very least, with these basic changes\u2014which took a good five minutes\u2014you are now well underway to taking a generic theme and making it a bit more professional. Cheers. Ready for more? View the second part in this three part series. Oh\u2014and check out these starter templates to get a quick start. Just add new fonts, colors, and a few textures\u2026",
    "preview": false,
    "links": [
      "#create-a-minimal-website-layout",
      "#grid-system",
      "#an-example-narrow-marketing-bootstrap-3",
      "#make-it-your-own",
      "/account/join/",
      "https://realpython.com/python-vs-javascript/",
      "https://realpython.com/html-css-python/",
      "https://realpython.com/an-effective-sales-page-with-bootstrap-3/",
      "https://github.com/mjhea0/bootstrap3",
      "#create-a-minimal-website-layout",
      "http://getbootstrap.com/",
      "https://dgtl.link/QuickLoremIpsum",
      "/account/join/",
      "#grid-system",
      "http://getbootstrap.com/components/#list-group",
      "https://realpython.com/files/bootstrap3/index.html",
      "https://files.realpython.com/media/bootstrap3-index.24c5a8e016b8.png",
      "#an-example-narrow-marketing-bootstrap-3",
      "http://getbootstrap.com/2.3.2/examples/marketing-narrow.html",
      "http://getbootstrap.com/getting-started/#examples",
      "https://realpython.com/files/bootstrap3/marketing-narrow-bootstrap3.html",
      "http://getbootstrap.com/2.3.2/examples/marketing-narrow.html",
      "https://files.realpython.com/media/marketing-narrow-bootstrap3.dcad5d590dce.png",
      "/account/join/",
      "#make-it-your-own",
      "http://www.briangardner.com/google-font-combinations/",
      "http://www.mrmcguire.com/10-useful-google-font-combinations-for-your-next-site/",
      "http://subtlepatterns.com/",
      "http://getbootstrap.com/components/#glyphicons",
      "http://fortawesome.github.io/Font-Awesome/",
      "http://www.youtube.com/watch?v=D0MoGRZRtcA",
      "https://realpython.com/files/bootstrap3/marketing-narrow-bootstrap3-updated.html",
      "https://files.realpython.com/media/marketing-narrow-bootstrap3-updated.0e5be2fd107e.png",
      "https://realpython.com/an-effective-sales-page-with-bootstrap-3/",
      "http://startbootstrap.com/",
      "/feedback/survey/article/getting-started-with-bootstrap-3/liked/?from=article-footer",
      "/feedback/survey/article/getting-started-with-bootstrap-3/disliked/?from=article-footer"
    ]
  },
  {
    "id": 128,
    "title": "Python Web Applications with Flask \u2013 Part I",
    "url": "https://realpython.com/python-web-applications-with-flask-part-i/",
    "pub_date": "2013-08-14T03:22:01+00:00",
    "tags": [
      "web-dev",
      "basics",
      "flask"
    ],
    "description": "In this part of our series on Building a Web Application with Flask we'll set up our application.",
    "text": "Wrapping Up\n That\u2019s it for this post. We now have a working application where sites can be added and visits recorded against them.  We still need to add user accounts, an easy to use client-side API for tracking, and reports.In Part II we will add users, access control, and enable users to add visits from their own websites. We will explore more best practices for writing templates, keeping our models and forms in sync, and handling static files.In Part III we\u2019ll explore writing tests for our application, logging, and debugging errors.In Part IV we\u2019ll do some Test Driven Development to enable our application to accept payments and display simple reports.In Part V we will write a RESTful JSON API for others to consume.In Part VI we will cover automating deployments (on Heroku) with Fabric and basic A/B Feature Testing.Finally, in Part VII we will cover preserving your application for the future with documentation, code coverage and quality metric tools.Thanks for reading and tune in next time!",
    "preview": false,
    "links": [
      "#articles-in-this-series",
      "#what-we-are-building",
      "#starting-off",
      "#first-principles",
      "#a-note-on-the-repository-structure",
      "#starting-the-project",
      "#dependencies",
      "#outgrowing-small",
      "#a-place-for-everything",
      "#domain-models",
      "#data-translation-layer",
      "#views",
      "#application-setup",
      "#configuration-and-command-line-runner",
      "#and-everything-in-its-place",
      "#wrapping-up",
      "/account/join/",
      "http://dedeodesigns.com/",
      "#articles-in-this-series",
      "https://realpython.com/python-web-applications-with-flask-part-ii/",
      "https://realpython.com/python-web-applications-with-flask-part-iii/",
      "http://flask.pocoo.org/",
      "http://www.sinatrarb.com/",
      "https://github.com/mjhea0/flask-boilerplate",
      "http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world",
      "/account/join/",
      "#what-we-are-building",
      "https://github.com/mjhea0/flask-tracking",
      "https://realpython.com/python-refactoring/",
      "https://realpython.com/python-testing/",
      "#starting-off",
      "http://docs.python.org/2/tutorial/",
      "https://realpython.com/what-is-pip/",
      "http://flask.pocoo.org/docs/quickstart/",
      "http://flask.pocoo.org/docs/tutorial/",
      "https://github.com/mjhea0/flaskr-tdd",
      "https://realpython.com/python-basics/",
      "#first-principles",
      "http://www.saffo.com/02008/07/26/strong-opinions-weakly-held/",
      "#the-zen-of-python",
      "http://www.python.org/dev/peps/pep-0020/",
      "http://pydanny-event-notes.readthedocs.org/en/latest/PyconAU2011/zen_of_python.html",
      "#acronym-explosion",
      "http://c2.com/cgi/wiki?YouArentGonnaNeedIt",
      "http://c2.com/cgi/wiki?DontRepeatYourself",
      "http://c2.com/cgi/wiki?ThreeStrikesAndYouRefactor",
      "#a-note-on-the-repository-structure",
      "https://github.com/mjhea0/flask-tracking",
      "https://github.com/mjhea0/flask-tracking/releases",
      "https://github.com/mjhea0/flask-tracking/tree/part-1",
      "/account/join/",
      "#starting-the-project",
      "http://flask.pocoo.org/docs/installation/",
      "#dependencies",
      "http://pythonhosted.org/Flask-WTF/",
      "http://pythonhosted.org/Flask-SQLAlchemy/",
      "#outgrowing-small",
      "https://github.com/mjhea0/flask-tracking/tree/part-0",
      "#toc_9",
      "https://github.com/mjhea0/flask-tracking/releases",
      "https://realpython.com/python-sqlite-sqlalchemy/",
      "http://localhost:5000",
      "https://files.realpython.com/media/flask-tracking-1.6f407a760368.png",
      "/account/join/",
      "#a-place-for-everything",
      "http://flask.pocoo.org/docs/patterns/packages/",
      "http://flask.pocoo.org/docs/blueprints/",
      "#domain-models",
      "#data-translation-layer",
      "https://realpython.com/python-lambda/",
      "#views",
      "/account/join/",
      "#application-setup",
      "#configuration-and-command-line-runner",
      "http://pythonhosted.org/Flask-SQLAlchemy/contexts.html",
      "#and-everything-in-its-place",
      "http://localhost:5000",
      "https://files.realpython.com/media/flask-tracking-2.00893fc13094.png",
      "#wrapping-up",
      "/feedback/survey/article/python-web-applications-with-flask-part-i/liked/?from=article-footer",
      "/feedback/survey/article/python-web-applications-with-flask-part-i/disliked/?from=article-footer"
    ]
  },
  {
    "id": 129,
    "title": "Testing in Django (Part 1) \u2013 Best Practices and Examples",
    "url": "https://realpython.com/testing-in-django-part-1-best-practices-and-examples/",
    "pub_date": "2013-08-06T02:33:56+00:00",
    "tags": [
      "best-practices",
      "web-dev",
      "django",
      "testing",
      "basics"
    ],
    "description": "In this tutorial, we look at the basics of unit testing in Django",
    "text": "Next Time\n In the next tutorial, we\u2019ll be looking at a more complicated example as well as using model_mommy for generating test data. Again, you can grab the code from the repo.Free Bonus: Click here to get access to a free Django Learning Resources Guide (PDF) that shows you tips and tricks as well as common pitfalls to avoid when building Python + Django web applications.Got something to add? Leave a comment below.",
    "preview": false,
    "links": [
      "#intro-to-testing-in-django",
      "#types-of-tests",
      "#best-practices",
      "#structure",
      "#third-party-packages",
      "#examples",
      "#setup",
      "#testing-models",
      "#testing-views",
      "#testing-forms",
      "#testing-the-api",
      "#next-time",
      "/account/join/",
      "https://realpython.com/python-testing/",
      "https://realpython.com/python-debug-idle/",
      "#",
      "#intro-to-testing-in-django",
      "/account/join/",
      "#types-of-tests",
      "http://en.wikipedia.org/wiki/Software_regression",
      "#best-practices",
      "#structure",
      "#third-party-packages",
      "https://pypi.python.org/pypi/django-webtest",
      "http://nedbatchelder.com/code/coverage/",
      "https://github.com/jezdez/django-discover-runner",
      "https://github.com/rbarrois/factory_boy",
      "https://github.com/vandersonmota/model_mommy",
      "https://pypi.python.org/pypi/mock",
      "https://docs.djangoproject.com/en/dev/howto/initial-data/",
      "#examples",
      "https://github.com/mjhea0/testing-in-django",
      "/account/join/",
      "#setup",
      "https://realpython.com/what-is-pip/",
      "#testing-models",
      "https://files.realpython.com/media/testing-in-django.2ae07a4be183.png",
      "/account/join/",
      "#testing-views",
      "https://files.realpython.com/media/testing-in-django2.ece68e602a10.png",
      "#testing-forms",
      "/account/join/",
      "#testing-the-api",
      "https://realpython.com/api-integration-in-python/",
      "http://localhost:8000/api/whatever/?format=json",
      "#next-time",
      "https://github.com/mjhea0/testing-in-django",
      "#",
      "/feedback/survey/article/testing-in-django-part-1-best-practices-and-examples/liked/?from=article-footer",
      "/feedback/survey/article/testing-in-django-part-1-best-practices-and-examples/disliked/?from=article-footer"
    ]
  },
  {
    "id": 130,
    "title": "Developing with Bottle",
    "url": "https://realpython.com/developing-with-bottle-part-1/",
    "pub_date": "2013-06-18T02:33:19+00:00",
    "tags": [
      "web-dev",
      "basics"
    ],
    "description": "Let's look at how to create a basic application with Bottle",
    "text": "Next Steps\n From this point, it is as easy as adding new @route-decorated functions to create new pages.Creating the HTML is simple: In the above app, we just inlined the HTML in the file itself. It\u2019s easy to modify this to load the template from a file. For example:This will load the template file main_template.tpl, which must be placed in a views folder within your project structure, and render it to the end user.Refer to the bottle documentation for more info.We\u2019ll look at how to add additional pages and templates in subsequent posts. However, I urge you to try this on your own. Post any questions as comments below.Check out Part 2!",
    "preview": false,
    "links": [
      "#starting-up",
      "#writing-your-app",
      "#shell-script",
      "#next-steps",
      "/account/join/",
      "http://bottlepy.org/docs/stable/",
      "#starting-up",
      "https://realpython.com/what-is-pip/",
      "https://pypi.python.org/pypi/virtualenv",
      "https://realpython.com/python-virtual-environments-a-primer/",
      "https://pypi.python.org/pypi/pip",
      "https://realpython.com/python-modules-packages/",
      "https://gist.github.com/mjhea0/5692708",
      "http://www.youtube.com/watch?v=MIHYflJwyLk",
      "https://realpython.com/courses/what-is-pip/",
      "https://realpython.com/python-git-github-intro/",
      "/account/join/",
      "#writing-your-app",
      "https://realpython.com/setting-up-sublime-text-3-for-full-stack-python-development/",
      "http://localhost:8080/",
      "https://realpython.com/primer-on-python-decorators/",
      "https://realpython.com/python-variables/",
      "http://localhost:8080/name/Michael",
      "#shell-script",
      "https://gist.github.com/mjhea0/5784132",
      "#next-steps",
      "http://bottlepy.org/docs/dev/",
      "https://realpython.com/developing-with-bottle-part-2-plot-ly-api/",
      "/feedback/survey/article/developing-with-bottle-part-1/liked/?from=article-footer",
      "/feedback/survey/article/developing-with-bottle-part-1/disliked/?from=article-footer"
    ]
  }
]